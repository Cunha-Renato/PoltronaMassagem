

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 03:14:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4520 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001B8E                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _funcaoAndamento
    91  001B8E  FFFF               	dw	65535
    92                           
    93                           ;initializer for _op
    94  001B90  46                 	db	70
    95  001B91  55                 	db	85
    96  001B92  4C                 	db	76
    97  001B93  4C                 	db	76
    98  001B94  00                 	db	0
    99  001B95  00                 	db	0
   100  001B96  00                 	db	0
   101  001B97  00                 	db	0
   102  001B98  4C                 	db	76
   103  001B99  45                 	db	69
   104  001B9A  47                 	db	71
   105  001B9B  53                 	db	83
   106  001B9C  00                 	db	0
   107  001B9D  00                 	db	0
   108  001B9E  00                 	db	0
   109  001B9F  00                 	db	0
   110  001BA0  42                 	db	66
   111  001BA1  41                 	db	65
   112  001BA2  43                 	db	67
   113  001BA3  4B                 	db	75
   114  001BA4  00                 	db	0
   115  001BA5  00                 	db	0
   116  001BA6  00                 	db	0
   117  001BA7  00                 	db	0
   118  001BA8  41                 	db	65
   119  001BA9  52                 	db	82
   120  001BAA  4D                 	db	77
   121  001BAB  53                 	db	83
   122  001BAC  00                 	db	0
   123  001BAD  00                 	db	0
   124  001BAE  00                 	db	0
   125  001BAF  00                 	db	0
   126  001BB0  52                 	db	82
   127  001BB1  45                 	db	69
   128  001BB2  54                 	db	84
   129  001BB3  55                 	db	85
   130  001BB4  52                 	db	82
   131  001BB5  4E                 	db	78
   132  001BB6  00                 	db	0
   133  001BB7  00                 	db	0
   134  001BB8  50                 	db	80
   135  001BB9  4F                 	db	79
   136  001BBA  57                 	db	87
   137  001BBB  45                 	db	69
   138  001BBC  52                 	db	82
   139  001BBD  00                 	db	0
   140  001BBE  00                 	db	0
   141  001BBF  00                 	db	0
   142  001BC0  00                 	db	0
   143  001BC1  00                 	db	0
   144  001BC2  00                 	db	0
   145  001BC3  00                 	db	0
   146  001BC4  00                 	db	0
   147  001BC5  00                 	db	0
   148  001BC6  00                 	db	0
   149  001BC7  00                 	db	0
   150                           
   151                           	psect	smallconst
   152  000600                     __psmallconst:
   153                           	callstack 0
   154  000600  00                 	db	0
   155  000601                     _valor:
   156                           	callstack 0
   157  000601  3F                 	db	63
   158  000602  06                 	db	6
   159  000603  5B                 	db	91
   160  000604  4F                 	db	79
   161  000605  66                 	db	102
   162  000606  6D                 	db	109
   163  000607  7D                 	db	125
   164  000608  07                 	db	7
   165  000609  7F                 	db	127
   166  00060A  6F                 	db	111
   167  00060B  77                 	db	119
   168  00060C  7C                 	db	124
   169  00060D  39                 	db	57
   170  00060E  5E                 	db	94
   171  00060F  79                 	db	121
   172  000610  71                 	db	113
   173  000611                     __end_of_valor:
   174                           	callstack 0
   175  000611                     _charKey:
   176                           	callstack 0
   177  000611  55                 	db	85
   178  000612  4C                 	db	76
   179  000613  44                 	db	68
   180  000614  52                 	db	82
   181  000615  53                 	db	83
   182  000616  58                 	db	88
   183  000617  41                 	db	65
   184  000618  42                 	db	66
   185  000619  59                 	db	89
   186  00061A  73                 	db	115
   187  00061B                     __end_of_charKey:
   188                           	callstack 0
   189  0000                     _T0CON	set	4053
   190  0000                     _TMR0L	set	4054
   191  0000                     _TMR0H	set	4055
   192  0000                     _INTCON	set	4082
   193  0000                     _ADRESL	set	4035
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADCON2	set	4032
   196  0000                     _ADCON0	set	4034
   197  0000                     _ADCON1	set	4033
   198  0000                     _TRISE	set	3990
   199  0000                     _TRISD	set	3989
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISB	set	3987
   202  0000                     _TRISA	set	3986
   203  0000                     _PORTE	set	3972
   204  0000                     _PORTD	set	3971
   205  0000                     _PORTC	set	3970
   206  0000                     _PORTB	set	3969
   207  0000                     _PORTA	set	3968
   208  00061B  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213  001C02                     __pcinit:
   214                           	callstack 0
   215  001C02                     start_initialization:
   216                           	callstack 0
   217  001C02                     __initialization:
   218                           	callstack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (58 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  001C02  0E8E               	movlw	low __pidataCOMRAM
   223  001C04  6EF6               	movwf	tblptrl,c
   224  001C06  0E1B               	movlw	high __pidataCOMRAM
   225  001C08  6EF7               	movwf	tblptrh,c
   226  001C0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  001C0C  6EF8               	movwf	tblptru,c
   228  001C0E  EE00  F001         	lfsr	0,__pdataCOMRAM
   229  001C12  EE10 F03A          	lfsr	1,58
   230  001C16                     copy_data0:
   231  001C16  0009               	tblrd		*+
   232  001C18  CFF5 FFEE          	movff	tablat,postinc0
   233  001C1C  50E5               	movf	postdec1,w,c
   234  001C1E  50E1               	movf	fsr1l,w,c
   235  001C20  E1FA               	bnz	copy_data0
   236                           
   237                           ; Clear objects allocated to COMRAM (15 bytes)
   238  001C22  EE00  F056         	lfsr	0,__pbssCOMRAM
   239  001C26  0E0F               	movlw	15
   240  001C28                     clear_0:
   241  001C28  6AEE               	clrf	postinc0,c
   242  001C2A  06E8               	decf	wreg,f,c
   243  001C2C  E1FD               	bnz	clear_0
   244  001C2E                     end_of_initialization:
   245                           	callstack 0
   246  001C2E                     __end_of__initialization:
   247                           	callstack 0
   248  001C2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  001C30  6EF8               	movwf	tblptru,c
   250  001C32  0100               	movlb	0
   251  001C34  EF3F  F00C         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254  000056                     __pbssCOMRAM:
   255                           	callstack 0
   256  000056                     kpDebounce@oldRead:
   257                           	callstack 0
   258  000056                     	ds	2
   259  000058                     kpDebounce@newRead:
   260                           	callstack 0
   261  000058                     	ds	2
   262  00005A                     _keys:
   263                           	callstack 0
   264  00005A                     	ds	2
   265  00005C                     _potencia:
   266                           	callstack 0
   267  00005C                     	ds	2
   268  00005E                     _v3:
   269                           	callstack 0
   270  00005E                     	ds	1
   271  00005F                     _v2:
   272                           	callstack 0
   273  00005F                     	ds	1
   274  000060                     _v1:
   275                           	callstack 0
   276  000060                     	ds	1
   277  000061                     _v0:
   278                           	callstack 0
   279  000061                     	ds	1
   280  000062                     _display:
   281                           	callstack 0
   282  000062                     	ds	1
   283  000063                     kpDebounce@tempo:
   284                           	callstack 0
   285  000063                     	ds	1
   286  000064                     _selecionado:
   287                           	callstack 0
   288  000064                     	ds	1
   289                           
   290                           	psect	dataCOMRAM
   291  000001                     __pdataCOMRAM:
   292                           	callstack 0
   293  000001                     _funcaoAndamento:
   294                           	callstack 0
   295  000001                     	ds	2
   296  000003                     _op:
   297                           	callstack 0
   298  000003                     	ds	56
   299                           
   300                           	psect	cstackCOMRAM
   301  00003B                     __pcstackCOMRAM:
   302                           	callstack 0
   303  00003B                     ??_kpReadKey:
   304  00003B                     ?_adcRead:
   305                           	callstack 0
   306  00003B                     ?_digitalRead:
   307                           	callstack 0
   308  00003B                     ?___awdiv:
   309                           	callstack 0
   310  00003B                     digitalWrite@pin:
   311                           	callstack 0
   312  00003B                     digitalRead@pin:
   313                           	callstack 0
   314  00003B                     pinMode@pin:
   315                           	callstack 0
   316  00003B                     delayMicro@a:
   317                           	callstack 0
   318  00003B                     delayMili@a:
   319                           	callstack 0
   320  00003B                     adcRead@channel:
   321                           	callstack 0
   322  00003B                     timerReset@tempo:
   323                           	callstack 0
   324  00003B                     ___awdiv@dividend:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  00003B                     	ds	2
   329  00003D                     ??_digitalRead:
   330  00003D                     ??_delayMili:
   331  00003D                     digitalWrite@value:
   332                           	callstack 0
   333  00003D                     pinMode@type:
   334                           	callstack 0
   335  00003D                     adcRead@ADvalor:
   336                           	callstack 0
   337  00003D                     timerReset@ciclos:
   338                           	callstack 0
   339  00003D                     ___awdiv@divisor:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x2
   343  00003D                     	ds	1
   344  00003E                     kpReadKey@i:
   345                           	callstack 0
   346  00003E                     delayMili@i:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x3
   350  00003E                     	ds	1
   351  00003F                     ??_digitalWrite:
   352  00003F                     ??_pinMode:
   353  00003F                     ___awdiv@counter:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x4
   357  00003F                     	ds	1
   358  000040                     ___awdiv@sign:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x5
   362  000040                     	ds	1
   363  000041                     rgbColor@led:
   364                           	callstack 0
   365  000041                     soWrite@value:
   366                           	callstack 0
   367  000041                     ___awdiv@quotient:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371  000041                     	ds	2
   372  000043                     ?___awmod:
   373                           	callstack 0
   374  000043                     soWrite@i:
   375                           	callstack 0
   376  000043                     ___awmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x8
   380  000043                     	ds	1
   381  000044                     ??_kpDebounce:
   382  000044                     ??_ssdUpdate:
   383  000044                     pushNibble@rs:
   384                           	callstack 0
   385  000044                     pushByte@rs:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x9
   389  000044                     	ds	1
   390  000045                     ___awmod@divisor:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xA
   394  000045                     	ds	1
   395  000046                     ??_pushByte:
   396  000046                     pushNibble@value:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0xB
   400  000046                     	ds	1
   401  000047                     pushByte@value:
   402                           	callstack 0
   403  000047                     ___awmod@counter:
   404                           	callstack 0
   405  000047                     kpDebounce@i:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409  000047                     	ds	1
   410  000048                     lcdCommand@value:
   411                           	callstack 0
   412  000048                     lcdChar@value:
   413                           	callstack 0
   414  000048                     ___awmod@sign:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0xD
   418  000048                     	ds	1
   419  000049                     ssdDigit@pos:
   420                           	callstack 0
   421  000049                     lcdPosition@line:
   422                           	callstack 0
   423  000049                     lcdString@msg:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xE
   427  000049                     	ds	1
   428  00004A                     ssdDigit@val:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0xF
   432  00004A                     	ds	1
   433  00004B                     lcdPosition@col:
   434                           	callstack 0
   435  00004B                     lcdString@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x10
   439  00004B                     	ds	2
   440  00004D                     ??_escolheFunc:
   441  00004D                     ??_segMenu:
   442  00004D                     ??_mudaPot:
   443                           
   444                           ; 1 bytes @ 0x12
   445  00004D                     	ds	2
   446  00004F                     escolheFunc@vert:
   447                           	callstack 0
   448  00004F                     segMenu@hori:
   449                           	callstack 0
   450  00004F                     mudaPot@caso:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x14
   454  00004F                     	ds	1
   455  000050                     escolheFunc@caso:
   456                           	callstack 0
   457  000050                     segMenu@caso:
   458                           	callstack 0
   459  000050                     mudaPot@tecla:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x15
   463  000050                     	ds	1
   464  000051                     escolheFunc@tecla:
   465                           	callstack 0
   466  000051                     segMenu@tecla:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470  000051                     	ds	1
   471  000052                     escolheFunc@hori:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x17
   475  000052                     	ds	1
   476  000053                     escolheFunc@i:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x18
   480  000053                     	ds	1
   481  000054                     ??_main:
   482                           
   483                           ; 1 bytes @ 0x19
   484  000054                     	ds	2
   485                           
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 282 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0       0       0
   507 ;;      Temps:          2       0       0       0       0       0       0
   508 ;;      Totals:         2       0       0       0       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels required when called: 7
   511 ;; This function calls:
   512 ;;		_adcInit
   513 ;;		_escolheFunc
   514 ;;		_kpInit
   515 ;;		_lcdInit
   516 ;;		_mudaPot
   517 ;;		_segMenu
   518 ;;		_ssdInit
   519 ;;		_timerInit
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text0
   526  00187E                     __ptext0:
   527                           	callstack 0
   528  00187E                     _main:
   529                           	callstack 24
   530  00187E                     
   531                           ;main.c: 284:     lcdInit();
   532  00187E  ECF9  F00A         	call	_lcdInit	;wreg free
   533                           
   534                           ;main.c: 285:     kpInit();
   535  001882  EC1C  F00E         	call	_kpInit	;wreg free
   536                           
   537                           ;main.c: 286:     ssdInit();
   538  001886  ECC9  F00C         	call	_ssdInit	;wreg free
   539                           
   540                           ;main.c: 287:     adcInit();
   541  00188A  EC43  F00D         	call	_adcInit	;wreg free
   542                           
   543                           ;main.c: 288:     timerInit();
   544  00188E  ECC1  F00E         	call	_timerInit	;wreg free
   545  001892  EF55  F00C         	goto	l2462
   546  001896                     l2454:
   547                           
   548                           ;main.c: 294:                 escolheFunc();
   549  001896  EC0E  F003         	call	_escolheFunc	;wreg free
   550                           
   551                           ;main.c: 295:                 break;
   552  00189A  EF55  F00C         	goto	l2462
   553  00189E                     l2456:
   554                           
   555                           ;main.c: 297:                 segMenu();
   556  00189E  EC97  F006         	call	_segMenu	;wreg free
   557                           
   558                           ;main.c: 298:                 break;
   559  0018A2  EF55  F00C         	goto	l2462
   560  0018A6                     l2458:
   561                           
   562                           ;main.c: 300:                 mudaPot();
   563  0018A6  ECA7  F007         	call	_mudaPot	;wreg free
   564  0018AA                     l2462:
   565  0018AA  5064               	movf	_selecionado^0,w,c
   566  0018AC  6E54               	movwf	??_main^0,c
   567  0018AE  6A55               	clrf	(??_main+1)^0,c
   568                           
   569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   570                           ; Switch size 1, requested type "simple"
   571                           ; Number of cases is 1, Range of values is 0 to 0
   572                           ; switch strategies available:
   573                           ; Name         Instructions Cycles
   574                           ; simple_byte            4     3 (average)
   575                           ;	Chosen strategy is simple_byte
   576  0018B0  5055               	movf	(??_main+1)^0,w,c
   577  0018B2  0A00               	xorlw	0	; case 0
   578  0018B4  B4D8               	btfsc	status,2,c
   579  0018B6  EF5F  F00C         	goto	l2528
   580  0018BA  EF55  F00C         	goto	l2462
   581  0018BE                     l2528:
   582                           
   583                           ; Switch size 1, requested type "simple"
   584                           ; Number of cases is 3, Range of values is 0 to 2
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte           10     6 (average)
   588                           ;	Chosen strategy is simple_byte
   589  0018BE  5054               	movf	??_main^0,w,c
   590  0018C0  0A00               	xorlw	0	; case 0
   591  0018C2  B4D8               	btfsc	status,2,c
   592  0018C4  EF4B  F00C         	goto	l2454
   593  0018C8  0A01               	xorlw	1	; case 1
   594  0018CA  B4D8               	btfsc	status,2,c
   595  0018CC  EF4F  F00C         	goto	l2456
   596  0018D0  0A03               	xorlw	3	; case 2
   597  0018D2  B4D8               	btfsc	status,2,c
   598  0018D4  EF53  F00C         	goto	l2458
   599  0018D8  EF55  F00C         	goto	l2462
   600  0018DC  EF00  F000         	goto	start
   601  0018E0                     __end_of_main:
   602                           	callstack 0
   603                           
   604 ;; *************** function _timerInit *****************
   605 ;; Defined at:
   606 ;;		line 55 in file "timer.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   620 ;;      Params:         0       0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0
   623 ;;      Totals:         0       0       0       0       0       0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634  001D82                     __ptext1:
   635                           	callstack 0
   636  001D82                     _timerInit:
   637                           	callstack 30
   638  001D82                     
   639                           ;timer.c: 57:  T0CON = 0b00001000;
   640  001D82  0E08               	movlw	8
   641  001D84  6ED5               	movwf	213,c	;volatile
   642  001D86                     
   643                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
   644  001D86  8ED5               	bsf	213,7,c	;volatile
   645  001D88  0012               	return		;funcret
   646  001D8A                     __end_of_timerInit:
   647                           	callstack 0
   648                           
   649 ;; *************** function _ssdInit *****************
   650 ;; Defined at:
   651 ;;		line 94 in file "ssd.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   665 ;;      Params:         0       0       0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0       0       0
   668 ;;      Totals:         0       0       0       0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 2
   672 ;; This function calls:
   673 ;;		_pinMode
   674 ;;		_soInit
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text2
   681  001992                     __ptext2:
   682                           	callstack 0
   683  001992                     _ssdInit:
   684                           	callstack 28
   685  001992                     
   686                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
   687  001992  0E00               	movlw	0
   688  001994  6E3C               	movwf	(pinMode@pin+1)^0,c
   689  001996  0E18               	movlw	24
   690  001998  6E3B               	movwf	pinMode@pin^0,c
   691  00199A  0E00               	movlw	0
   692  00199C  6E3E               	movwf	(pinMode@type+1)^0,c
   693  00199E  0E00               	movlw	0
   694  0019A0  6E3D               	movwf	pinMode@type^0,c
   695  0019A2  EC70  F005         	call	_pinMode	;wreg free
   696                           
   697                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
   698  0019A6  0E00               	movlw	0
   699  0019A8  6E3C               	movwf	(pinMode@pin+1)^0,c
   700  0019AA  0E19               	movlw	25
   701  0019AC  6E3B               	movwf	pinMode@pin^0,c
   702  0019AE  0E00               	movlw	0
   703  0019B0  6E3E               	movwf	(pinMode@type+1)^0,c
   704  0019B2  0E00               	movlw	0
   705  0019B4  6E3D               	movwf	pinMode@type^0,c
   706  0019B6  EC70  F005         	call	_pinMode	;wreg free
   707                           
   708                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
   709  0019BA  0E00               	movlw	0
   710  0019BC  6E3C               	movwf	(pinMode@pin+1)^0,c
   711  0019BE  0E1A               	movlw	26
   712  0019C0  6E3B               	movwf	pinMode@pin^0,c
   713  0019C2  0E00               	movlw	0
   714  0019C4  6E3E               	movwf	(pinMode@type+1)^0,c
   715  0019C6  0E00               	movlw	0
   716  0019C8  6E3D               	movwf	pinMode@type^0,c
   717  0019CA  EC70  F005         	call	_pinMode	;wreg free
   718                           
   719                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
   720  0019CE  0E00               	movlw	0
   721  0019D0  6E3C               	movwf	(pinMode@pin+1)^0,c
   722  0019D2  0E1B               	movlw	27
   723  0019D4  6E3B               	movwf	pinMode@pin^0,c
   724  0019D6  0E00               	movlw	0
   725  0019D8  6E3E               	movwf	(pinMode@type+1)^0,c
   726  0019DA  0E00               	movlw	0
   727  0019DC  6E3D               	movwf	pinMode@type^0,c
   728  0019DE  EC70  F005         	call	_pinMode	;wreg free
   729                           
   730                           ;ssd.c: 102:     soInit();
   731  0019E2  ECA8  F00D         	call	_soInit	;wreg free
   732  0019E6  0012               	return		;funcret
   733  0019E8                     __end_of_ssdInit:
   734                           	callstack 0
   735                           
   736 ;; *************** function _segMenu *****************
   737 ;; Defined at:
   738 ;;		line 137 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  tecla           1   22[COMRAM] unsigned char 
   743 ;;  caso            1   21[COMRAM] unsigned char 
   744 ;;  hori            1   20[COMRAM] unsigned char 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   754 ;;      Params:         0       0       0       0       0       0       0
   755 ;;      Locals:         3       0       0       0       0       0       0
   756 ;;      Temps:          2       0       0       0       0       0       0
   757 ;;      Totals:         5       0       0       0       0       0       0
   758 ;;Total ram usage:        5 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 6
   761 ;; This function calls:
   762 ;;		_digitalWrite
   763 ;;		_kpDebounce
   764 ;;		_kpReadKey
   765 ;;		_lcdCommand
   766 ;;		_lcdPosition
   767 ;;		_lcdString
   768 ;;		_rgbColor
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text3
   775  000D2E                     __ptext3:
   776                           	callstack 0
   777  000D2E                     _segMenu:
   778                           	callstack 24
   779  000D2E                     
   780                           ;main.c: 140:     char tecla=0;
   781  000D2E  0E00               	movlw	0
   782  000D30  6E51               	movwf	segMenu@tecla^0,c
   783                           
   784                           ;main.c: 141:     char hori=0;
   785  000D32  0E00               	movlw	0
   786  000D34  6E4F               	movwf	segMenu@hori^0,c
   787  000D36                     
   788                           ;main.c: 145:     lcdCommand(0x01);
   789  000D36  0E01               	movlw	1
   790  000D38  ECAA  F00E         	call	_lcdCommand
   791  000D3C                     
   792                           ;main.c: 146:     op[funcaoAndamento][4]=' ';
   793  000D3C  C001  F04D         	movff	_funcaoAndamento,??_segMenu
   794  000D40  C002  F04E         	movff	_funcaoAndamento+1,??_segMenu+1
   795  000D44  90D8               	bcf	status,0,c
   796  000D46  364D               	rlcf	??_segMenu^0,f,c
   797  000D48  364E               	rlcf	(??_segMenu+1)^0,f,c
   798  000D4A  90D8               	bcf	status,0,c
   799  000D4C  364D               	rlcf	??_segMenu^0,f,c
   800  000D4E  364E               	rlcf	(??_segMenu+1)^0,f,c
   801  000D50  90D8               	bcf	status,0,c
   802  000D52  364D               	rlcf	??_segMenu^0,f,c
   803  000D54  364E               	rlcf	(??_segMenu+1)^0,f,c
   804  000D56  0E07               	movlw	low (_op+4)
   805  000D58  244D               	addwf	??_segMenu^0,w,c
   806  000D5A  6ED9               	movwf	fsr2l,c
   807  000D5C  0E00               	movlw	high (_op+4)
   808  000D5E  204E               	addwfc	(??_segMenu+1)^0,w,c
   809  000D60  6EDA               	movwf	fsr2h,c
   810  000D62  0E20               	movlw	32
   811  000D64  6EDF               	movwf	indf2,c
   812  000D66                     
   813                           ;main.c: 149:     op[4][6]=' ';
   814  000D66  0E20               	movlw	32
   815  000D68  6E29               	movwf	(_op+38)^0,c
   816  000D6A                     
   817                           ;main.c: 150:     caso = 0;
   818  000D6A  0E00               	movlw	0
   819  000D6C  6E50               	movwf	segMenu@caso^0,c
   820                           
   821                           ;main.c: 151:     while(selecionado==1)
   822  000D6E  EF9E  F007         	goto	l2364
   823  000D72                     l2312:
   824                           
   825                           ;main.c: 156:                 rgbColor(2);
   826  000D72  0E00               	movlw	0
   827  000D74  6E42               	movwf	(rgbColor@led+1)^0,c
   828  000D76  0E02               	movlw	2
   829  000D78  6E41               	movwf	rgbColor@led^0,c
   830  000D7A  ECAB  F00B         	call	_rgbColor	;wreg free
   831                           
   832                           ;main.c: 158:                 lcdPosition(0, 5);
   833  000D7E  0E00               	movlw	0
   834  000D80  6E4A               	movwf	(lcdPosition@line+1)^0,c
   835  000D82  0E00               	movlw	0
   836  000D84  6E49               	movwf	lcdPosition@line^0,c
   837  000D86  0E00               	movlw	0
   838  000D88  6E4C               	movwf	(lcdPosition@col+1)^0,c
   839  000D8A  0E05               	movlw	5
   840  000D8C  6E4B               	movwf	lcdPosition@col^0,c
   841  000D8E  ECE4  F00D         	call	_lcdPosition	;wreg free
   842  000D92                     
   843                           ;main.c: 159:                 lcdString(op[funcaoAndamento]);
   844  000D92  C001  F04D         	movff	_funcaoAndamento,??_segMenu
   845  000D96  C002  F04E         	movff	_funcaoAndamento+1,??_segMenu+1
   846  000D9A  90D8               	bcf	status,0,c
   847  000D9C  364D               	rlcf	??_segMenu^0,f,c
   848  000D9E  364E               	rlcf	(??_segMenu+1)^0,f,c
   849  000DA0  90D8               	bcf	status,0,c
   850  000DA2  364D               	rlcf	??_segMenu^0,f,c
   851  000DA4  364E               	rlcf	(??_segMenu+1)^0,f,c
   852  000DA6  90D8               	bcf	status,0,c
   853  000DA8  364D               	rlcf	??_segMenu^0,f,c
   854  000DAA  364E               	rlcf	(??_segMenu+1)^0,f,c
   855  000DAC  0E03               	movlw	low _op
   856  000DAE  244D               	addwf	??_segMenu^0,w,c
   857  000DB0  6E49               	movwf	lcdString@msg^0,c
   858  000DB2  0E00               	movlw	high _op
   859  000DB4  204E               	addwfc	(??_segMenu+1)^0,w,c
   860  000DB6  6E4A               	movwf	(lcdString@msg+1)^0,c
   861  000DB8  EC88  F00D         	call	_lcdString	;wreg free
   862  000DBC                     
   863                           ;main.c: 160:                 lcdCommand(0xC0);
   864  000DBC  0EC0               	movlw	192
   865  000DBE  ECAA  F00E         	call	_lcdCommand
   866                           
   867                           ;main.c: 161:                 lcdString(op[5]);
   868  000DC2  0E2B               	movlw	low (_op+40)
   869  000DC4  6E49               	movwf	lcdString@msg^0,c
   870  000DC6  0E00               	movlw	high (_op+40)
   871  000DC8  6E4A               	movwf	(lcdString@msg+1)^0,c
   872  000DCA  EC88  F00D         	call	_lcdString	;wreg free
   873  000DCE                     
   874                           ;main.c: 162:                 lcdPosition(1, 9);
   875  000DCE  0E00               	movlw	0
   876  000DD0  6E4A               	movwf	(lcdPosition@line+1)^0,c
   877  000DD2  0E01               	movlw	1
   878  000DD4  6E49               	movwf	lcdPosition@line^0,c
   879  000DD6  0E00               	movlw	0
   880  000DD8  6E4C               	movwf	(lcdPosition@col+1)^0,c
   881  000DDA  0E09               	movlw	9
   882  000DDC  6E4B               	movwf	lcdPosition@col^0,c
   883  000DDE  ECE4  F00D         	call	_lcdPosition	;wreg free
   884  000DE2                     
   885                           ;main.c: 163:                 lcdString(op[4]);
   886  000DE2  0E23               	movlw	low (_op+32)
   887  000DE4  6E49               	movwf	lcdString@msg^0,c
   888  000DE6  0E00               	movlw	high (_op+32)
   889  000DE8  6E4A               	movwf	(lcdString@msg+1)^0,c
   890  000DEA  EC88  F00D         	call	_lcdString	;wreg free
   891  000DEE                     
   892                           ;main.c: 165:                 caso=1;
   893  000DEE  0E01               	movlw	1
   894  000DF0  6E50               	movwf	segMenu@caso^0,c
   895                           
   896                           ;main.c: 166:                 break;
   897  000DF2  EF76  F007         	goto	l2362
   898  000DF6                     l2324:
   899  000DF6                     
   900                           ;main.c: 170:                 kpDebounce();
   901  000DF6  ECFC  F009         	call	_kpDebounce	;wreg free
   902  000DFA                     
   903                           ;main.c: 171:                 tecla=kpReadKey();
   904  000DFA  EC03  F00C         	call	_kpReadKey	;wreg free
   905  000DFE  6E51               	movwf	segMenu@tecla^0,c
   906  000E00                     
   907                           ;main.c: 172:                 kpDebounce();
   908  000E00  ECFC  F009         	call	_kpDebounce	;wreg free
   909                           
   910                           ;main.c: 174:                 switch(tecla)
   911  000E04  EF32  F007         	goto	l2348
   912  000E08                     l2332:
   913                           
   914                           ;main.c: 177:                         hori=0;
   915  000E08  0E00               	movlw	0
   916  000E0A  6E4F               	movwf	segMenu@hori^0,c
   917                           
   918                           ;main.c: 178:                         break;
   919  000E0C  EF4B  F007         	goto	l2350
   920  000E10                     l2334:
   921                           
   922                           ;main.c: 180:                         hori=1;
   923  000E10  0E01               	movlw	1
   924  000E12  6E4F               	movwf	segMenu@hori^0,c
   925                           
   926                           ;main.c: 181:                         break;
   927  000E14  EF4B  F007         	goto	l2350
   928  000E18                     l2336:
   929                           
   930                           ;main.c: 183:                         if(tecla!=kpReadKey())
   931  000E18  EC03  F00C         	call	_kpReadKey	;wreg free
   932  000E1C  1851               	xorwf	segMenu@tecla^0,w,c
   933  000E1E  B4D8               	btfsc	status,2,c
   934  000E20  EF14  F007         	goto	u2021
   935  000E24  EF16  F007         	goto	u2020
   936  000E28                     u2021:
   937  000E28  EF4B  F007         	goto	l2350
   938  000E2C                     u2020:
   939  000E2C                     
   940                           ;main.c: 184:                         {;main.c: 185:                             if(op[4
      +                          ][6]=='<')
   941  000E2C  0E3C               	movlw	60
   942  000E2E  1829               	xorwf	(_op+38)^0,w,c
   943  000E30  A4D8               	btfss	status,2,c
   944  000E32  EF1D  F007         	goto	u2031
   945  000E36  EF1F  F007         	goto	u2030
   946  000E3A                     u2031:
   947  000E3A  EF23  F007         	goto	l2342
   948  000E3E                     u2030:
   949  000E3E                     
   950                           ;main.c: 186:                                 selecionado=0;
   951  000E3E  0E00               	movlw	0
   952  000E40  6E64               	movwf	_selecionado^0,c
   953  000E42  EF4B  F007         	goto	l2350
   954  000E46                     l2342:
   955  000E46  0E3C               	movlw	60
   956  000E48  1830               	xorwf	(_op+45)^0,w,c
   957  000E4A  A4D8               	btfss	status,2,c
   958  000E4C  EF2A  F007         	goto	u2041
   959  000E50  EF2C  F007         	goto	u2040
   960  000E54                     u2041:
   961  000E54  EF30  F007         	goto	l84
   962  000E58                     u2040:
   963  000E58                     
   964                           ;main.c: 189:                                 selecionado=2;
   965  000E58  0E02               	movlw	2
   966  000E5A  6E64               	movwf	_selecionado^0,c
   967  000E5C  EF4B  F007         	goto	l2350
   968  000E60                     l84:
   969                           
   970                           ;main.c: 191:                         break;
   971  000E60  EF4B  F007         	goto	l2350
   972  000E64                     l2348:
   973  000E64  5051               	movf	segMenu@tecla^0,w,c
   974  000E66  6E4D               	movwf	??_segMenu^0,c
   975  000E68  6A4E               	clrf	(??_segMenu+1)^0,c
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ;	Chosen strategy is simple_byte
   984  000E6A  504E               	movf	(??_segMenu+1)^0,w,c
   985  000E6C  0A00               	xorlw	0	; case 0
   986  000E6E  B4D8               	btfsc	status,2,c
   987  000E70  EF3C  F007         	goto	l2530
   988  000E74  EF4B  F007         	goto	l2350
   989  000E78                     l2530:
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 3, Range of values is 76 to 83
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           10     6 (average)
   996                           ;	Chosen strategy is simple_byte
   997  000E78  504D               	movf	??_segMenu^0,w,c
   998  000E7A  0A4C               	xorlw	76	; case 76
   999  000E7C  B4D8               	btfsc	status,2,c
  1000  000E7E  EF04  F007         	goto	l2332
  1001  000E82  0A1E               	xorlw	30	; case 82
  1002  000E84  B4D8               	btfsc	status,2,c
  1003  000E86  EF08  F007         	goto	l2334
  1004  000E8A  0A01               	xorlw	1	; case 83
  1005  000E8C  B4D8               	btfsc	status,2,c
  1006  000E8E  EF0C  F007         	goto	l2336
  1007  000E92  EF4B  F007         	goto	l2350
  1008  000E96                     l2350:
  1009                           
  1010                           ;main.c: 197:                 if(hori==0)
  1011  000E96  504F               	movf	segMenu@hori^0,w,c
  1012  000E98  A4D8               	btfss	status,2,c
  1013  000E9A  EF51  F007         	goto	u2051
  1014  000E9E  EF53  F007         	goto	u2050
  1015  000EA2                     u2051:
  1016  000EA2  EF59  F007         	goto	l2354
  1017  000EA6                     u2050:
  1018  000EA6                     
  1019                           ;main.c: 198:                 {;main.c: 199:                     op[4][6]=' ';
  1020  000EA6  0E20               	movlw	32
  1021  000EA8  6E29               	movwf	(_op+38)^0,c
  1022                           
  1023                           ;main.c: 200:                     op[5][5]='<';
  1024  000EAA  0E3C               	movlw	60
  1025  000EAC  6E30               	movwf	(_op+45)^0,c
  1026                           
  1027                           ;main.c: 201:                 }
  1028  000EAE  EF5D  F007         	goto	l90
  1029  000EB2                     l2354:
  1030                           
  1031                           ;main.c: 203:                 {;main.c: 204:                     op[5][5]=' ';
  1032  000EB2  0E20               	movlw	32
  1033  000EB4  6E30               	movwf	(_op+45)^0,c
  1034                           
  1035                           ;main.c: 205:                     op[4][6]='<';
  1036  000EB6  0E3C               	movlw	60
  1037  000EB8  6E29               	movwf	(_op+38)^0,c
  1038  000EBA                     l90:
  1039                           
  1040                           ;main.c: 208:                 caso=0;
  1041  000EBA  0E00               	movlw	0
  1042  000EBC  6E50               	movwf	segMenu@caso^0,c
  1043                           
  1044                           ;main.c: 209:                 break;
  1045  000EBE  EF76  F007         	goto	l2362
  1046  000EC2                     l2360:
  1047  000EC2  5050               	movf	segMenu@caso^0,w,c
  1048  000EC4  6E4D               	movwf	??_segMenu^0,c
  1049  000EC6  6A4E               	clrf	(??_segMenu+1)^0,c
  1050                           
  1051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1052                           ; Switch size 1, requested type "simple"
  1053                           ; Number of cases is 1, Range of values is 0 to 0
  1054                           ; switch strategies available:
  1055                           ; Name         Instructions Cycles
  1056                           ; simple_byte            4     3 (average)
  1057                           ;	Chosen strategy is simple_byte
  1058  000EC8  504E               	movf	(??_segMenu+1)^0,w,c
  1059  000ECA  0A00               	xorlw	0	; case 0
  1060  000ECC  B4D8               	btfsc	status,2,c
  1061  000ECE  EF6B  F007         	goto	l2532
  1062  000ED2  EF5D  F007         	goto	l90
  1063  000ED6                     l2532:
  1064                           
  1065                           ; Switch size 1, requested type "simple"
  1066                           ; Number of cases is 2, Range of values is 0 to 1
  1067                           ; switch strategies available:
  1068                           ; Name         Instructions Cycles
  1069                           ; simple_byte            7     4 (average)
  1070                           ;	Chosen strategy is simple_byte
  1071  000ED6  504D               	movf	??_segMenu^0,w,c
  1072  000ED8  0A00               	xorlw	0	; case 0
  1073  000EDA  B4D8               	btfsc	status,2,c
  1074  000EDC  EFB9  F006         	goto	l2312
  1075  000EE0  0A01               	xorlw	1	; case 1
  1076  000EE2  B4D8               	btfsc	status,2,c
  1077  000EE4  EFFB  F006         	goto	l2324
  1078  000EE8  EF5D  F007         	goto	l90
  1079  000EEC                     l2362:
  1080                           
  1081                           ;main.c: 215:         digitalWrite(PIN_D0,0);
  1082  000EEC  0E00               	movlw	0
  1083  000EEE  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1084  000EF0  0E18               	movlw	24
  1085  000EF2  6E3B               	movwf	digitalWrite@pin^0,c
  1086  000EF4  0E00               	movlw	0
  1087  000EF6  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1088  000EF8  0E00               	movlw	0
  1089  000EFA  6E3D               	movwf	digitalWrite@value^0,c
  1090  000EFC  EC49  F004         	call	_digitalWrite	;wreg free
  1091                           
  1092                           ;main.c: 216:         digitalWrite(PIN_D1,0);
  1093  000F00  0E00               	movlw	0
  1094  000F02  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1095  000F04  0E19               	movlw	25
  1096  000F06  6E3B               	movwf	digitalWrite@pin^0,c
  1097  000F08  0E00               	movlw	0
  1098  000F0A  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1099  000F0C  0E00               	movlw	0
  1100  000F0E  6E3D               	movwf	digitalWrite@value^0,c
  1101  000F10  EC49  F004         	call	_digitalWrite	;wreg free
  1102                           
  1103                           ;main.c: 217:         digitalWrite(PIN_D2,0);
  1104  000F14  0E00               	movlw	0
  1105  000F16  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1106  000F18  0E1A               	movlw	26
  1107  000F1A  6E3B               	movwf	digitalWrite@pin^0,c
  1108  000F1C  0E00               	movlw	0
  1109  000F1E  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1110  000F20  0E00               	movlw	0
  1111  000F22  6E3D               	movwf	digitalWrite@value^0,c
  1112  000F24  EC49  F004         	call	_digitalWrite	;wreg free
  1113                           
  1114                           ;main.c: 218:         digitalWrite(PIN_D3,0);
  1115  000F28  0E00               	movlw	0
  1116  000F2A  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1117  000F2C  0E1B               	movlw	27
  1118  000F2E  6E3B               	movwf	digitalWrite@pin^0,c
  1119  000F30  0E00               	movlw	0
  1120  000F32  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1121  000F34  0E00               	movlw	0
  1122  000F36  6E3D               	movwf	digitalWrite@value^0,c
  1123  000F38  EC49  F004         	call	_digitalWrite	;wreg free
  1124  000F3C                     l2364:
  1125                           
  1126                           ;main.c: 151:     while(selecionado==1)
  1127  000F3C  0464               	decf	_selecionado^0,w,c
  1128  000F3E  B4D8               	btfsc	status,2,c
  1129  000F40  EFA4  F007         	goto	u2061
  1130  000F44  EFA6  F007         	goto	u2060
  1131  000F48                     u2061:
  1132  000F48  EF61  F007         	goto	l2360
  1133  000F4C                     u2060:
  1134  000F4C  0012               	return		;funcret
  1135  000F4E                     __end_of_segMenu:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _mudaPot *****************
  1139 ;; Defined at:
  1140 ;;		line 222 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  tecla           1   21[COMRAM] unsigned char 
  1145 ;;  caso            1   20[COMRAM] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1155 ;;      Params:         0       0       0       0       0       0       0
  1156 ;;      Locals:         2       0       0       0       0       0       0
  1157 ;;      Temps:          2       0       0       0       0       0       0
  1158 ;;      Totals:         4       0       0       0       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 6
  1162 ;; This function calls:
  1163 ;;		___awdiv
  1164 ;;		___awmod
  1165 ;;		_adcRead
  1166 ;;		_digitalWrite
  1167 ;;		_kpDebounce
  1168 ;;		_kpReadKey
  1169 ;;		_lcdCommand
  1170 ;;		_lcdString
  1171 ;;		_ssdDigit
  1172 ;;		_ssdUpdate
  1173 ;;		_timerReset
  1174 ;;		_timerWait
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text4
  1181  000F4E                     __ptext4:
  1182                           	callstack 0
  1183  000F4E                     _mudaPot:
  1184                           	callstack 24
  1185  000F4E                     
  1186                           ;main.c: 225:     char tecla=0;
  1187  000F4E  0E00               	movlw	0
  1188  000F50  6E50               	movwf	mudaPot@tecla^0,c
  1189  000F52                     
  1190                           ;main.c: 229:     lcdCommand(0x01);
  1191  000F52  0E01               	movlw	1
  1192  000F54  ECAA  F00E         	call	_lcdCommand
  1193  000F58                     
  1194                           ;main.c: 232:     caso = 0;
  1195  000F58  0E00               	movlw	0
  1196  000F5A  6E4F               	movwf	mudaPot@caso^0,c
  1197  000F5C                     
  1198                           ;main.c: 233:     op[4][6]='<';
  1199  000F5C  0E3C               	movlw	60
  1200  000F5E  6E29               	movwf	(_op+38)^0,c
  1201  000F60                     
  1202                           ;main.c: 234:     lcdCommand(0x80);
  1203  000F60  0E80               	movlw	128
  1204  000F62  ECAA  F00E         	call	_lcdCommand
  1205  000F66                     
  1206                           ;main.c: 235:     lcdString(op[4]);
  1207  000F66  0E23               	movlw	low (_op+32)
  1208  000F68  6E49               	movwf	lcdString@msg^0,c
  1209  000F6A  0E00               	movlw	high (_op+32)
  1210  000F6C  6E4A               	movwf	(lcdString@msg+1)^0,c
  1211  000F6E  EC88  F00D         	call	_lcdString	;wreg free
  1212                           
  1213                           ;main.c: 236:     while(selecionado==2)
  1214  000F72  EF5C  F008         	goto	l2414
  1215  000F76                     l2386:
  1216                           
  1217                           ;main.c: 237:     {;main.c: 238:         timerReset(20000);
  1218  000F76  0E4E               	movlw	78
  1219  000F78  6E3C               	movwf	(timerReset@tempo+1)^0,c
  1220  000F7A  0E20               	movlw	32
  1221  000F7C  6E3B               	movwf	timerReset@tempo^0,c
  1222  000F7E  EC8A  F00E         	call	_timerReset	;wreg free
  1223                           
  1224                           ;main.c: 239:         switch(caso)
  1225  000F82  EF43  F008         	goto	l2406
  1226  000F86                     l2388:
  1227                           
  1228                           ;main.c: 243:                 tecla=kpReadKey();
  1229  000F86  EC03  F00C         	call	_kpReadKey	;wreg free
  1230  000F8A  6E50               	movwf	mudaPot@tecla^0,c
  1231  000F8C                     
  1232                           ;main.c: 244:                 kpDebounce();
  1233  000F8C  ECFC  F009         	call	_kpDebounce	;wreg free
  1234  000F90                     
  1235                           ;main.c: 245:                 if(tecla!=kpReadKey())
  1236  000F90  EC03  F00C         	call	_kpReadKey	;wreg free
  1237  000F94  1850               	xorwf	mudaPot@tecla^0,w,c
  1238  000F96  B4D8               	btfsc	status,2,c
  1239  000F98  EFD0  F007         	goto	u2071
  1240  000F9C  EFD2  F007         	goto	u2070
  1241  000FA0                     u2071:
  1242  000FA0  EFDD  F007         	goto	l100
  1243  000FA4                     u2070:
  1244  000FA4                     
  1245                           ;main.c: 246:                 {;main.c: 247:                     if(tecla=='S')
  1246  000FA4  0E53               	movlw	83
  1247  000FA6  1850               	xorwf	mudaPot@tecla^0,w,c
  1248  000FA8  A4D8               	btfss	status,2,c
  1249  000FAA  EFD9  F007         	goto	u2081
  1250  000FAE  EFDB  F007         	goto	u2080
  1251  000FB2                     u2081:
  1252  000FB2  EFDD  F007         	goto	l100
  1253  000FB6                     u2080:
  1254  000FB6                     
  1255                           ;main.c: 248:                         selecionado=1;
  1256  000FB6  0E01               	movlw	1
  1257  000FB8  6E64               	movwf	_selecionado^0,c
  1258  000FBA                     l100:
  1259                           
  1260                           ;main.c: 250:                 caso=1;
  1261  000FBA  0E01               	movlw	1
  1262  000FBC  6E4F               	movwf	mudaPot@caso^0,c
  1263                           
  1264                           ;main.c: 251:                 break;
  1265  000FBE  EF58  F008         	goto	l2408
  1266  000FC2                     l2398:
  1267                           
  1268                           ;main.c: 254:                 potencia = adcRead(0);
  1269  000FC2  0E00               	movlw	0
  1270  000FC4  6E3C               	movwf	(adcRead@channel+1)^0,c
  1271  000FC6  0E00               	movlw	0
  1272  000FC8  6E3B               	movwf	adcRead@channel^0,c
  1273  000FCA  ECF4  F00C         	call	_adcRead	;wreg free
  1274  000FCE  C03B  F05C         	movff	?_adcRead,_potencia
  1275  000FD2  C03C  F05D         	movff	?_adcRead+1,_potencia+1
  1276                           
  1277                           ;main.c: 255:                 potencia/=10;
  1278  000FD6  C05C  F03B         	movff	_potencia,___awdiv@dividend
  1279  000FDA  C05D  F03C         	movff	_potencia+1,___awdiv@dividend+1
  1280  000FDE  0E00               	movlw	0
  1281  000FE0  6E3E               	movwf	(___awdiv@divisor+1)^0,c
  1282  000FE2  0E0A               	movlw	10
  1283  000FE4  6E3D               	movwf	___awdiv@divisor^0,c
  1284  000FE6  EC97  F00A         	call	___awdiv	;wreg free
  1285  000FEA  C03B  F05C         	movff	?___awdiv,_potencia
  1286  000FEE  C03C  F05D         	movff	?___awdiv+1,_potencia+1
  1287                           
  1288                           ;main.c: 256:                 ssdDigit((potencia%10),3);
  1289  000FF2  0E03               	movlw	3
  1290  000FF4  6E49               	movwf	ssdDigit@pos^0,c
  1291  000FF6  C05C  F043         	movff	_potencia,___awmod@dividend
  1292  000FFA  C05D  F044         	movff	_potencia+1,___awmod@dividend+1
  1293  000FFE  0E00               	movlw	0
  1294  001000  6E46               	movwf	(___awmod@divisor+1)^0,c
  1295  001002  0E0A               	movlw	10
  1296  001004  6E45               	movwf	___awmod@divisor^0,c
  1297  001006  EC53  F00B         	call	___awmod	;wreg free
  1298  00100A  5043               	movf	?___awmod^0,w,c
  1299  00100C  EC9D  F00C         	call	_ssdDigit
  1300                           
  1301                           ;main.c: 257:                 ssdDigit(((potencia/10)%10),2);
  1302  001010  0E02               	movlw	2
  1303  001012  6E49               	movwf	ssdDigit@pos^0,c
  1304  001014  0E00               	movlw	0
  1305  001016  6E3E               	movwf	(___awdiv@divisor+1)^0,c
  1306  001018  0E0A               	movlw	10
  1307  00101A  6E3D               	movwf	___awdiv@divisor^0,c
  1308  00101C  C05C  F03B         	movff	_potencia,___awdiv@dividend
  1309  001020  C05D  F03C         	movff	_potencia+1,___awdiv@dividend+1
  1310  001024  EC97  F00A         	call	___awdiv	;wreg free
  1311  001028  C03B  F043         	movff	?___awdiv,___awmod@dividend
  1312  00102C  C03C  F044         	movff	?___awdiv+1,___awmod@dividend+1
  1313  001030  0E00               	movlw	0
  1314  001032  6E46               	movwf	(___awmod@divisor+1)^0,c
  1315  001034  0E0A               	movlw	10
  1316  001036  6E45               	movwf	___awmod@divisor^0,c
  1317  001038  EC53  F00B         	call	___awmod	;wreg free
  1318  00103C  5043               	movf	?___awmod^0,w,c
  1319  00103E  EC9D  F00C         	call	_ssdDigit
  1320                           
  1321                           ;main.c: 258:                 ssdDigit(((potencia/100)%10),1);
  1322  001042  0E01               	movlw	1
  1323  001044  6E49               	movwf	ssdDigit@pos^0,c
  1324  001046  0E00               	movlw	0
  1325  001048  6E3E               	movwf	(___awdiv@divisor+1)^0,c
  1326  00104A  0E64               	movlw	100
  1327  00104C  6E3D               	movwf	___awdiv@divisor^0,c
  1328  00104E  C05C  F03B         	movff	_potencia,___awdiv@dividend
  1329  001052  C05D  F03C         	movff	_potencia+1,___awdiv@dividend+1
  1330  001056  EC97  F00A         	call	___awdiv	;wreg free
  1331  00105A  C03B  F043         	movff	?___awdiv,___awmod@dividend
  1332  00105E  C03C  F044         	movff	?___awdiv+1,___awmod@dividend+1
  1333  001062  0E00               	movlw	0
  1334  001064  6E46               	movwf	(___awmod@divisor+1)^0,c
  1335  001066  0E0A               	movlw	10
  1336  001068  6E45               	movwf	___awmod@divisor^0,c
  1337  00106A  EC53  F00B         	call	___awmod	;wreg free
  1338  00106E  5043               	movf	?___awmod^0,w,c
  1339  001070  EC9D  F00C         	call	_ssdDigit
  1340                           
  1341                           ;main.c: 259:                 ssdDigit(0x00, 0);
  1342  001074  0E00               	movlw	0
  1343  001076  6E49               	movwf	ssdDigit@pos^0,c
  1344  001078  0E00               	movlw	0
  1345  00107A  EC9D  F00C         	call	_ssdDigit
  1346  00107E                     l2400:
  1347                           
  1348                           ;main.c: 261:                 caso=0;
  1349  00107E  0E00               	movlw	0
  1350  001080  6E4F               	movwf	mudaPot@caso^0,c
  1351                           
  1352                           ;main.c: 262:                 break;
  1353  001082  EF58  F008         	goto	l2408
  1354  001086                     l2406:
  1355  001086  504F               	movf	mudaPot@caso^0,w,c
  1356  001088  6E4D               	movwf	??_mudaPot^0,c
  1357  00108A  6A4E               	clrf	(??_mudaPot+1)^0,c
  1358                           
  1359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1360                           ; Switch size 1, requested type "simple"
  1361                           ; Number of cases is 1, Range of values is 0 to 0
  1362                           ; switch strategies available:
  1363                           ; Name         Instructions Cycles
  1364                           ; simple_byte            4     3 (average)
  1365                           ;	Chosen strategy is simple_byte
  1366  00108C  504E               	movf	(??_mudaPot+1)^0,w,c
  1367  00108E  0A00               	xorlw	0	; case 0
  1368  001090  B4D8               	btfsc	status,2,c
  1369  001092  EF4D  F008         	goto	l2534
  1370  001096  EF3F  F008         	goto	l2400
  1371  00109A                     l2534:
  1372                           
  1373                           ; Switch size 1, requested type "simple"
  1374                           ; Number of cases is 2, Range of values is 0 to 1
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte            7     4 (average)
  1378                           ;	Chosen strategy is simple_byte
  1379  00109A  504D               	movf	??_mudaPot^0,w,c
  1380  00109C  0A00               	xorlw	0	; case 0
  1381  00109E  B4D8               	btfsc	status,2,c
  1382  0010A0  EFC3  F007         	goto	l2388
  1383  0010A4  0A01               	xorlw	1	; case 1
  1384  0010A6  B4D8               	btfsc	status,2,c
  1385  0010A8  EFE1  F007         	goto	l2398
  1386  0010AC  EF3F  F008         	goto	l2400
  1387  0010B0                     l2408:
  1388                           
  1389                           ;main.c: 268:         ssdUpdate();
  1390  0010B0  EC91  F008         	call	_ssdUpdate	;wreg free
  1391  0010B4                     
  1392                           ;main.c: 269:         timerWait();
  1393  0010B4  ECB9  F00E         	call	_timerWait	;wreg free
  1394  0010B8                     l2414:
  1395                           
  1396                           ;main.c: 236:     while(selecionado==2)
  1397  0010B8  0E02               	movlw	2
  1398  0010BA  1864               	xorwf	_selecionado^0,w,c
  1399  0010BC  B4D8               	btfsc	status,2,c
  1400  0010BE  EF63  F008         	goto	u2091
  1401  0010C2  EF65  F008         	goto	u2090
  1402  0010C6                     u2091:
  1403  0010C6  EFBB  F007         	goto	l2386
  1404  0010CA                     u2090:
  1405  0010CA                     
  1406                           ;main.c: 273:     digitalWrite(PIN_D0,0);
  1407  0010CA  0E00               	movlw	0
  1408  0010CC  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1409  0010CE  0E18               	movlw	24
  1410  0010D0  6E3B               	movwf	digitalWrite@pin^0,c
  1411  0010D2  0E00               	movlw	0
  1412  0010D4  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1413  0010D6  0E00               	movlw	0
  1414  0010D8  6E3D               	movwf	digitalWrite@value^0,c
  1415  0010DA  EC49  F004         	call	_digitalWrite	;wreg free
  1416                           
  1417                           ;main.c: 274:     digitalWrite(PIN_D1,0);
  1418  0010DE  0E00               	movlw	0
  1419  0010E0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1420  0010E2  0E19               	movlw	25
  1421  0010E4  6E3B               	movwf	digitalWrite@pin^0,c
  1422  0010E6  0E00               	movlw	0
  1423  0010E8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1424  0010EA  0E00               	movlw	0
  1425  0010EC  6E3D               	movwf	digitalWrite@value^0,c
  1426  0010EE  EC49  F004         	call	_digitalWrite	;wreg free
  1427                           
  1428                           ;main.c: 275:     digitalWrite(PIN_D2,0);
  1429  0010F2  0E00               	movlw	0
  1430  0010F4  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1431  0010F6  0E1A               	movlw	26
  1432  0010F8  6E3B               	movwf	digitalWrite@pin^0,c
  1433  0010FA  0E00               	movlw	0
  1434  0010FC  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1435  0010FE  0E00               	movlw	0
  1436  001100  6E3D               	movwf	digitalWrite@value^0,c
  1437  001102  EC49  F004         	call	_digitalWrite	;wreg free
  1438                           
  1439                           ;main.c: 276:     digitalWrite(PIN_D3,0);
  1440  001106  0E00               	movlw	0
  1441  001108  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1442  00110A  0E1B               	movlw	27
  1443  00110C  6E3B               	movwf	digitalWrite@pin^0,c
  1444  00110E  0E00               	movlw	0
  1445  001110  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1446  001112  0E00               	movlw	0
  1447  001114  6E3D               	movwf	digitalWrite@value^0,c
  1448  001116  EC49  F004         	call	_digitalWrite	;wreg free
  1449                           
  1450                           ;main.c: 279:     lcdCommand(0x01);
  1451  00111A  0E01               	movlw	1
  1452  00111C  ECAA  F00E         	call	_lcdCommand
  1453  001120  0012               	return		;funcret
  1454  001122                     __end_of_mudaPot:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _timerWait *****************
  1458 ;; Defined at:
  1459 ;;		line 31 in file "timer.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		None
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         0       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_mudaPot
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text5
  1487  001D72                     __ptext5:
  1488                           	callstack 0
  1489  001D72                     _timerWait:
  1490                           	callstack 29
  1491  001D72                     l411:
  1492  001D72  A4F2               	btfss	242,2,c	;volatile
  1493  001D74  EFBE  F00E         	goto	u761
  1494  001D78  EFC0  F00E         	goto	u760
  1495  001D7C                     u761:
  1496  001D7C  EFB9  F00E         	goto	l411
  1497  001D80                     u760:
  1498  001D80  0012               	return		;funcret
  1499  001D82                     __end_of_timerWait:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _timerReset *****************
  1503 ;; Defined at:
  1504 ;;		line 37 in file "timer.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  tempo           2    0[COMRAM] unsigned int 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  ciclos          2    2[COMRAM] unsigned int 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         2       0       0       0       0       0       0
  1519 ;;      Locals:         2       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         4       0       0       0       0       0       0
  1522 ;;Total ram usage:        4 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_mudaPot
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text6
  1532  001D14                     __ptext6:
  1533                           	callstack 0
  1534  001D14                     _timerReset:
  1535                           	callstack 29
  1536  001D14                     
  1537                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1538  001D14  90D8               	bcf	status,0,c
  1539  001D16  343B               	rlcf	timerReset@tempo^0,w,c
  1540  001D18  6E3D               	movwf	timerReset@ciclos^0,c
  1541  001D1A  343C               	rlcf	(timerReset@tempo+1)^0,w,c
  1542  001D1C  6E3E               	movwf	(timerReset@ciclos+1)^0,c
  1543  001D1E                     
  1544                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1545  001D1E  1E3D               	comf	timerReset@ciclos^0,f,c
  1546  001D20  1E3E               	comf	(timerReset@ciclos+1)^0,f,c
  1547  001D22                     
  1548                           ;timer.c: 47:     ciclos -=50;
  1549  001D22  0E32               	movlw	50
  1550  001D24  5E3D               	subwf	timerReset@ciclos^0,f,c
  1551  001D26  0E00               	movlw	0
  1552  001D28  5A3E               	subwfb	(timerReset@ciclos+1)^0,f,c
  1553  001D2A                     
  1554                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1555  001D2A  503E               	movf	(timerReset@ciclos+1)^0,w,c
  1556  001D2C  6ED7               	movwf	215,c	;volatile
  1557  001D2E                     
  1558                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1559  001D2E  C03D  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1560  001D32                     
  1561                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1562  001D32  94F2               	bcf	242,2,c	;volatile
  1563  001D34  0012               	return		;funcret
  1564  001D36                     __end_of_timerReset:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _ssdUpdate *****************
  1568 ;; Defined at:
  1569 ;;		line 50 in file "ssd.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1583 ;;      Params:         0       0       0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0
  1585 ;;      Temps:          2       0       0       0       0       0       0
  1586 ;;      Totals:         2       0       0       0       0       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 3
  1590 ;; This function calls:
  1591 ;;		_digitalWrite
  1592 ;;		_soWrite
  1593 ;; This function is called by:
  1594 ;;		_mudaPot
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text7
  1599  001122                     __ptext7:
  1600                           	callstack 0
  1601  001122                     _ssdUpdate:
  1602                           	callstack 26
  1603  001122                     
  1604                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1605  001122  0E00               	movlw	0
  1606  001124  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1607  001126  0E18               	movlw	24
  1608  001128  6E3B               	movwf	digitalWrite@pin^0,c
  1609  00112A  0E00               	movlw	0
  1610  00112C  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1611  00112E  0E00               	movlw	0
  1612  001130  6E3D               	movwf	digitalWrite@value^0,c
  1613  001132  EC49  F004         	call	_digitalWrite	;wreg free
  1614                           
  1615                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1616  001136  0E00               	movlw	0
  1617  001138  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1618  00113A  0E19               	movlw	25
  1619  00113C  6E3B               	movwf	digitalWrite@pin^0,c
  1620  00113E  0E00               	movlw	0
  1621  001140  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1622  001142  0E00               	movlw	0
  1623  001144  6E3D               	movwf	digitalWrite@value^0,c
  1624  001146  EC49  F004         	call	_digitalWrite	;wreg free
  1625                           
  1626                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1627  00114A  0E00               	movlw	0
  1628  00114C  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1629  00114E  0E1A               	movlw	26
  1630  001150  6E3B               	movwf	digitalWrite@pin^0,c
  1631  001152  0E00               	movlw	0
  1632  001154  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1633  001156  0E00               	movlw	0
  1634  001158  6E3D               	movwf	digitalWrite@value^0,c
  1635  00115A  EC49  F004         	call	_digitalWrite	;wreg free
  1636                           
  1637                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1638  00115E  0E00               	movlw	0
  1639  001160  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1640  001162  0E1B               	movlw	27
  1641  001164  6E3B               	movwf	digitalWrite@pin^0,c
  1642  001166  0E00               	movlw	0
  1643  001168  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1644  00116A  0E00               	movlw	0
  1645  00116C  6E3D               	movwf	digitalWrite@value^0,c
  1646  00116E  EC49  F004         	call	_digitalWrite	;wreg free
  1647                           
  1648                           ;ssd.c: 60:     soWrite(0x00);
  1649  001172  0E00               	movlw	0
  1650  001174  6E42               	movwf	(soWrite@value+1)^0,c
  1651  001176  0E00               	movlw	0
  1652  001178  6E41               	movwf	soWrite@value^0,c
  1653  00117A  EC1C  F00D         	call	_soWrite	;wreg free
  1654                           
  1655                           ;ssd.c: 62:     switch (display)
  1656  00117E  EF29  F009         	goto	l2122
  1657  001182                     l2094:
  1658                           
  1659                           ;ssd.c: 65:             soWrite(valor[v0]);
  1660  001182  0E01               	movlw	low _valor
  1661  001184  2461               	addwf	_v0^0,w,c
  1662  001186  6EF6               	movwf	tblptrl,c
  1663  001188  6AF7               	clrf	tblptrh,c
  1664  00118A  0E06               	movlw	high _valor
  1665  00118C  22F7               	addwfc	tblptrh,f,c
  1666  00118E                     	if	0	;There are less than 3 active tblptr bytes
  1667  00118E                     	endif
  1668  00118E  0008               	tblrd		*
  1669  001190  50F5               	movf	tablat,w,c
  1670  001192  6E41               	movwf	soWrite@value^0,c
  1671  001194  6A42               	clrf	(soWrite@value+1)^0,c
  1672  001196  EC1C  F00D         	call	_soWrite	;wreg free
  1673  00119A                     
  1674                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1675  00119A  0E00               	movlw	0
  1676  00119C  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1677  00119E  0E18               	movlw	24
  1678  0011A0  6E3B               	movwf	digitalWrite@pin^0,c
  1679  0011A2  0E00               	movlw	0
  1680  0011A4  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1681  0011A6  0E01               	movlw	1
  1682  0011A8  6E3D               	movwf	digitalWrite@value^0,c
  1683  0011AA  EC49  F004         	call	_digitalWrite	;wreg free
  1684  0011AE                     
  1685                           ;ssd.c: 67:             display = 1;
  1686  0011AE  0E01               	movlw	1
  1687  0011B0  6E62               	movwf	_display^0,c
  1688                           
  1689                           ;ssd.c: 68:             break;
  1690  0011B2  EF46  F009         	goto	l372
  1691  0011B6                     l2100:
  1692                           
  1693                           ;ssd.c: 71:             soWrite(valor[v1]);
  1694  0011B6  0E01               	movlw	low _valor
  1695  0011B8  2460               	addwf	_v1^0,w,c
  1696  0011BA  6EF6               	movwf	tblptrl,c
  1697  0011BC  6AF7               	clrf	tblptrh,c
  1698  0011BE  0E06               	movlw	high _valor
  1699  0011C0  22F7               	addwfc	tblptrh,f,c
  1700  0011C2                     	if	0	;There are less than 3 active tblptr bytes
  1701  0011C2                     	endif
  1702  0011C2  0008               	tblrd		*
  1703  0011C4  50F5               	movf	tablat,w,c
  1704  0011C6  6E41               	movwf	soWrite@value^0,c
  1705  0011C8  6A42               	clrf	(soWrite@value+1)^0,c
  1706  0011CA  EC1C  F00D         	call	_soWrite	;wreg free
  1707  0011CE                     
  1708                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1709  0011CE  0E00               	movlw	0
  1710  0011D0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1711  0011D2  0E19               	movlw	25
  1712  0011D4  6E3B               	movwf	digitalWrite@pin^0,c
  1713  0011D6  0E00               	movlw	0
  1714  0011D8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1715  0011DA  0E01               	movlw	1
  1716  0011DC  6E3D               	movwf	digitalWrite@value^0,c
  1717  0011DE  EC49  F004         	call	_digitalWrite	;wreg free
  1718  0011E2                     
  1719                           ;ssd.c: 73:             display = 2;
  1720  0011E2  0E02               	movlw	2
  1721  0011E4  6E62               	movwf	_display^0,c
  1722                           
  1723                           ;ssd.c: 74:             break;
  1724  0011E6  EF46  F009         	goto	l372
  1725  0011EA                     l2106:
  1726                           
  1727                           ;ssd.c: 77:             soWrite(valor[v2]);
  1728  0011EA  0E01               	movlw	low _valor
  1729  0011EC  245F               	addwf	_v2^0,w,c
  1730  0011EE  6EF6               	movwf	tblptrl,c
  1731  0011F0  6AF7               	clrf	tblptrh,c
  1732  0011F2  0E06               	movlw	high _valor
  1733  0011F4  22F7               	addwfc	tblptrh,f,c
  1734  0011F6                     	if	0	;There are less than 3 active tblptr bytes
  1735  0011F6                     	endif
  1736  0011F6  0008               	tblrd		*
  1737  0011F8  50F5               	movf	tablat,w,c
  1738  0011FA  6E41               	movwf	soWrite@value^0,c
  1739  0011FC  6A42               	clrf	(soWrite@value+1)^0,c
  1740  0011FE  EC1C  F00D         	call	_soWrite	;wreg free
  1741  001202                     
  1742                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1743  001202  0E00               	movlw	0
  1744  001204  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1745  001206  0E1A               	movlw	26
  1746  001208  6E3B               	movwf	digitalWrite@pin^0,c
  1747  00120A  0E00               	movlw	0
  1748  00120C  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1749  00120E  0E01               	movlw	1
  1750  001210  6E3D               	movwf	digitalWrite@value^0,c
  1751  001212  EC49  F004         	call	_digitalWrite	;wreg free
  1752  001216                     
  1753                           ;ssd.c: 79:             display = 3;
  1754  001216  0E03               	movlw	3
  1755  001218  6E62               	movwf	_display^0,c
  1756                           
  1757                           ;ssd.c: 80:             break;
  1758  00121A  EF46  F009         	goto	l372
  1759  00121E                     l2112:
  1760                           
  1761                           ;ssd.c: 83:             soWrite(valor[v3]);
  1762  00121E  0E01               	movlw	low _valor
  1763  001220  245E               	addwf	_v3^0,w,c
  1764  001222  6EF6               	movwf	tblptrl,c
  1765  001224  6AF7               	clrf	tblptrh,c
  1766  001226  0E06               	movlw	high _valor
  1767  001228  22F7               	addwfc	tblptrh,f,c
  1768  00122A                     	if	0	;There are less than 3 active tblptr bytes
  1769  00122A                     	endif
  1770  00122A  0008               	tblrd		*
  1771  00122C  50F5               	movf	tablat,w,c
  1772  00122E  6E41               	movwf	soWrite@value^0,c
  1773  001230  6A42               	clrf	(soWrite@value+1)^0,c
  1774  001232  EC1C  F00D         	call	_soWrite	;wreg free
  1775  001236                     
  1776                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1777  001236  0E00               	movlw	0
  1778  001238  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  1779  00123A  0E1B               	movlw	27
  1780  00123C  6E3B               	movwf	digitalWrite@pin^0,c
  1781  00123E  0E00               	movlw	0
  1782  001240  6E3E               	movwf	(digitalWrite@value+1)^0,c
  1783  001242  0E01               	movlw	1
  1784  001244  6E3D               	movwf	digitalWrite@value^0,c
  1785  001246  EC49  F004         	call	_digitalWrite	;wreg free
  1786  00124A                     l2116:
  1787                           
  1788                           ;ssd.c: 85:             display = 0;
  1789  00124A  0E00               	movlw	0
  1790  00124C  6E62               	movwf	_display^0,c
  1791                           
  1792                           ;ssd.c: 86:             break;
  1793  00124E  EF46  F009         	goto	l372
  1794  001252                     l2122:
  1795  001252  5062               	movf	_display^0,w,c
  1796  001254  6E44               	movwf	??_ssdUpdate^0,c
  1797  001256  6A45               	clrf	(??_ssdUpdate+1)^0,c
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806  001258  5045               	movf	(??_ssdUpdate+1)^0,w,c
  1807  00125A  0A00               	xorlw	0	; case 0
  1808  00125C  B4D8               	btfsc	status,2,c
  1809  00125E  EF33  F009         	goto	l2536
  1810  001262  EF25  F009         	goto	l2116
  1811  001266                     l2536:
  1812                           
  1813                           ; Switch size 1, requested type "simple"
  1814                           ; Number of cases is 4, Range of values is 0 to 3
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte           13     7 (average)
  1818                           ;	Chosen strategy is simple_byte
  1819  001266  5044               	movf	??_ssdUpdate^0,w,c
  1820  001268  0A00               	xorlw	0	; case 0
  1821  00126A  B4D8               	btfsc	status,2,c
  1822  00126C  EFC1  F008         	goto	l2094
  1823  001270  0A01               	xorlw	1	; case 1
  1824  001272  B4D8               	btfsc	status,2,c
  1825  001274  EFDB  F008         	goto	l2100
  1826  001278  0A03               	xorlw	3	; case 2
  1827  00127A  B4D8               	btfsc	status,2,c
  1828  00127C  EFF5  F008         	goto	l2106
  1829  001280  0A01               	xorlw	1	; case 3
  1830  001282  B4D8               	btfsc	status,2,c
  1831  001284  EF0F  F009         	goto	l2112
  1832  001288  EF25  F009         	goto	l2116
  1833  00128C                     l372:
  1834  00128C  0012               	return		;funcret
  1835  00128E                     __end_of_ssdUpdate:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _ssdDigit *****************
  1839 ;; Defined at:
  1840 ;;		line 34 in file "ssd.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  val             1    wreg     unsigned char 
  1843 ;;  pos             1   14[COMRAM] unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  val             1   15[COMRAM] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1855 ;;      Params:         1       0       0       0       0       0       0
  1856 ;;      Locals:         1       0       0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0
  1858 ;;      Totals:         2       0       0       0       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_mudaPot
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text8
  1869  00193A                     __ptext8:
  1870                           	callstack 0
  1871  00193A                     _ssdDigit:
  1872                           	callstack 29
  1873                           
  1874                           ;incstack = 0
  1875                           ;ssdDigit@val stored from wreg
  1876  00193A  6E4A               	movwf	ssdDigit@val^0,c
  1877  00193C                     
  1878                           ;ssd.c: 35:     if (pos == 0) {
  1879  00193C  5049               	movf	ssdDigit@pos^0,w,c
  1880  00193E  A4D8               	btfss	status,2,c
  1881  001940  EFA4  F00C         	goto	u1791
  1882  001944  EFA6  F00C         	goto	u1790
  1883  001948                     u1791:
  1884  001948  EFA8  F00C         	goto	l2080
  1885  00194C                     u1790:
  1886  00194C                     
  1887                           ;ssd.c: 36:         v0 = val;
  1888  00194C  C04A  F061         	movff	ssdDigit@val,_v0
  1889  001950                     l2080:
  1890                           
  1891                           ;ssd.c: 38:     if (pos == 1) {
  1892  001950  0449               	decf	ssdDigit@pos^0,w,c
  1893  001952  A4D8               	btfss	status,2,c
  1894  001954  EFAE  F00C         	goto	u1801
  1895  001958  EFB0  F00C         	goto	u1800
  1896  00195C                     u1801:
  1897  00195C  EFB2  F00C         	goto	l2084
  1898  001960                     u1800:
  1899  001960                     
  1900                           ;ssd.c: 39:         v1 = val;
  1901  001960  C04A  F060         	movff	ssdDigit@val,_v1
  1902  001964                     l2084:
  1903                           
  1904                           ;ssd.c: 41:     if (pos == 2) {
  1905  001964  0E02               	movlw	2
  1906  001966  1849               	xorwf	ssdDigit@pos^0,w,c
  1907  001968  A4D8               	btfss	status,2,c
  1908  00196A  EFB9  F00C         	goto	u1811
  1909  00196E  EFBB  F00C         	goto	u1810
  1910  001972                     u1811:
  1911  001972  EFBD  F00C         	goto	l2088
  1912  001976                     u1810:
  1913  001976                     
  1914                           ;ssd.c: 42:         v2 = val;
  1915  001976  C04A  F05F         	movff	ssdDigit@val,_v2
  1916  00197A                     l2088:
  1917                           
  1918                           ;ssd.c: 44:     if (pos == 3) {
  1919  00197A  0E03               	movlw	3
  1920  00197C  1849               	xorwf	ssdDigit@pos^0,w,c
  1921  00197E  A4D8               	btfss	status,2,c
  1922  001980  EFC4  F00C         	goto	u1821
  1923  001984  EFC6  F00C         	goto	u1820
  1924  001988                     u1821:
  1925  001988  EFC8  F00C         	goto	l362
  1926  00198C                     u1820:
  1927  00198C                     
  1928                           ;ssd.c: 45:         v3 = val;
  1929  00198C  C04A  F05E         	movff	ssdDigit@val,_v3
  1930  001990                     l362:
  1931  001990  0012               	return		;funcret
  1932  001992                     __end_of_ssdDigit:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _adcRead *****************
  1936 ;; Defined at:
  1937 ;;		line 38 in file "adc.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  channel         2    0[COMRAM] unsigned int 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  ADvalor         2    2[COMRAM] unsigned int 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  2    0[COMRAM] int 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1951 ;;      Params:         2       0       0       0       0       0       0
  1952 ;;      Locals:         2       0       0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0
  1954 ;;      Totals:         4       0       0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_mudaPot
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text9
  1965  0019E8                     __ptext9:
  1966                           	callstack 0
  1967  0019E8                     _adcRead:
  1968                           	callstack 29
  1969  0019E8                     
  1970                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  1971  0019E8  0EC3               	movlw	195
  1972  0019EA  16C2               	andwf	194,f,c	;volatile
  1973                           
  1974                           ;adc.c: 41:     if (channel < 3) {
  1975  0019EC  503C               	movf	(adcRead@channel+1)^0,w,c
  1976  0019EE  E107               	bnz	u1771
  1977  0019F0  0E03               	movlw	3
  1978  0019F2  5C3B               	subwf	adcRead@channel^0,w,c
  1979  0019F4  B0D8               	btfsc	status,0,c
  1980  0019F6  EFFF  F00C         	goto	u1771
  1981  0019FA  EF01  F00D         	goto	u1770
  1982  0019FE                     u1771:
  1983  0019FE  EF05  F00D         	goto	l2066
  1984  001A02                     u1770:
  1985  001A02                     
  1986                           ;adc.c: 42:         ADCON0 |= channel << 2;
  1987  001A02  443B               	rlncf	adcRead@channel^0,w,c	;volatile
  1988  001A04  46E8               	rlncf	wreg,f,c
  1989  001A06  0BFC               	andlw	252
  1990  001A08  12C2               	iorwf	194,f,c	;volatile
  1991  001A0A                     l2066:
  1992                           
  1993                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  1994  001A0A  82C2               	bsf	194,1,c	;volatile
  1995  001A0C                     l394:
  1996  001A0C  B2C2               	btfsc	194,1,c	;volatile
  1997  001A0E  EF0B  F00D         	goto	u1781
  1998  001A12  EF0D  F00D         	goto	u1780
  1999  001A16                     u1781:
  2000  001A16  EF06  F00D         	goto	l394
  2001  001A1A                     u1780:
  2002  001A1A                     
  2003                           ;adc.c: 49:     ADvalor = ADRESH;
  2004  001A1A  CFC4 F03D          	movff	4036,adcRead@ADvalor	;volatile
  2005  001A1E  6A3E               	clrf	(adcRead@ADvalor+1)^0,c
  2006  001A20                     
  2007                           ;adc.c: 50:     ADvalor <<= 8;
  2008  001A20  503D               	movf	adcRead@ADvalor^0,w,c
  2009  001A22  6E3E               	movwf	(adcRead@ADvalor+1)^0,c
  2010  001A24  6A3D               	clrf	adcRead@ADvalor^0,c
  2011  001A26                     
  2012                           ;adc.c: 51:     ADvalor += ADRESL;
  2013  001A26  50C3               	movf	195,w,c	;volatile
  2014  001A28  263D               	addwf	adcRead@ADvalor^0,f,c
  2015  001A2A  0E00               	movlw	0
  2016  001A2C  223E               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2017  001A2E                     
  2018                           ;adc.c: 52:     return ADvalor;
  2019  001A2E  C03D  F03B         	movff	adcRead@ADvalor,?_adcRead
  2020  001A32  C03E  F03C         	movff	adcRead@ADvalor+1,?_adcRead+1
  2021  001A36  0012               	return		;funcret
  2022  001A38                     __end_of_adcRead:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function ___awmod *****************
  2026 ;; Defined at:
  2027 ;;		line 7 in file "C:\Users\Renato Marquez Cunha\Desktop\Unifei\Sims\compilerMblab\pic\sources\c99\common\awmod.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  dividend        2    8[COMRAM] int 
  2030 ;;  divisor         2   10[COMRAM] int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  sign            1   13[COMRAM] unsigned char 
  2033 ;;  counter         1   12[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2    8[COMRAM] int 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         4       0       0       0       0       0       0
  2044 ;;      Locals:         2       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         6       0       0       0       0       0       0
  2047 ;;Total ram usage:        6 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_mudaPot
  2053 ;;		_lcdNumber
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text10
  2058  0016A6                     __ptext10:
  2059                           	callstack 0
  2060  0016A6                     ___awmod:
  2061                           	callstack 29
  2062  0016A6  0E00               	movlw	0
  2063  0016A8  6E48               	movwf	___awmod@sign^0,c
  2064  0016AA  BE44               	btfsc	(___awmod@dividend+1)^0,7,c
  2065  0016AC  EF5C  F00B         	goto	u1890
  2066  0016B0  EF5A  F00B         	goto	u1891
  2067  0016B4                     u1891:
  2068  0016B4  EF62  F00B         	goto	l2184
  2069  0016B8                     u1890:
  2070  0016B8  6C43               	negf	___awmod@dividend^0,c
  2071  0016BA  1E44               	comf	(___awmod@dividend+1)^0,f,c
  2072  0016BC  B0D8               	btfsc	status,0,c
  2073  0016BE  2A44               	incf	(___awmod@dividend+1)^0,f,c
  2074  0016C0  0E01               	movlw	1
  2075  0016C2  6E48               	movwf	___awmod@sign^0,c
  2076  0016C4                     l2184:
  2077  0016C4  BE46               	btfsc	(___awmod@divisor+1)^0,7,c
  2078  0016C6  EF69  F00B         	goto	u1900
  2079  0016CA  EF67  F00B         	goto	u1901
  2080  0016CE                     u1901:
  2081  0016CE  EF6D  F00B         	goto	l2188
  2082  0016D2                     u1900:
  2083  0016D2  6C45               	negf	___awmod@divisor^0,c
  2084  0016D4  1E46               	comf	(___awmod@divisor+1)^0,f,c
  2085  0016D6  B0D8               	btfsc	status,0,c
  2086  0016D8  2A46               	incf	(___awmod@divisor+1)^0,f,c
  2087  0016DA                     l2188:
  2088  0016DA  5045               	movf	___awmod@divisor^0,w,c
  2089  0016DC  1046               	iorwf	(___awmod@divisor+1)^0,w,c
  2090  0016DE  B4D8               	btfsc	status,2,c
  2091  0016E0  EF74  F00B         	goto	u1911
  2092  0016E4  EF76  F00B         	goto	u1910
  2093  0016E8                     u1911:
  2094  0016E8  EF9A  F00B         	goto	l2204
  2095  0016EC                     u1910:
  2096  0016EC  0E01               	movlw	1
  2097  0016EE  6E47               	movwf	___awmod@counter^0,c
  2098  0016F0  EF7E  F00B         	goto	l2194
  2099  0016F4                     l2192:
  2100  0016F4  90D8               	bcf	status,0,c
  2101  0016F6  3645               	rlcf	___awmod@divisor^0,f,c
  2102  0016F8  3646               	rlcf	(___awmod@divisor+1)^0,f,c
  2103  0016FA  2A47               	incf	___awmod@counter^0,f,c
  2104  0016FC                     l2194:
  2105  0016FC  AE46               	btfss	(___awmod@divisor+1)^0,7,c
  2106  0016FE  EF83  F00B         	goto	u1921
  2107  001702  EF85  F00B         	goto	u1920
  2108  001706                     u1921:
  2109  001706  EF7A  F00B         	goto	l2192
  2110  00170A                     u1920:
  2111  00170A                     l2196:
  2112  00170A  5045               	movf	___awmod@divisor^0,w,c
  2113  00170C  5C43               	subwf	___awmod@dividend^0,w,c
  2114  00170E  5046               	movf	(___awmod@divisor+1)^0,w,c
  2115  001710  5844               	subwfb	(___awmod@dividend+1)^0,w,c
  2116  001712  A0D8               	btfss	status,0,c
  2117  001714  EF8E  F00B         	goto	u1931
  2118  001718  EF90  F00B         	goto	u1930
  2119  00171C                     u1931:
  2120  00171C  EF94  F00B         	goto	l2200
  2121  001720                     u1930:
  2122  001720  5045               	movf	___awmod@divisor^0,w,c
  2123  001722  5E43               	subwf	___awmod@dividend^0,f,c
  2124  001724  5046               	movf	(___awmod@divisor+1)^0,w,c
  2125  001726  5A44               	subwfb	(___awmod@dividend+1)^0,f,c
  2126  001728                     l2200:
  2127  001728  90D8               	bcf	status,0,c
  2128  00172A  3246               	rrcf	(___awmod@divisor+1)^0,f,c
  2129  00172C  3245               	rrcf	___awmod@divisor^0,f,c
  2130  00172E  2E47               	decfsz	___awmod@counter^0,f,c
  2131  001730  EF85  F00B         	goto	l2196
  2132  001734                     l2204:
  2133  001734  5048               	movf	___awmod@sign^0,w,c
  2134  001736  B4D8               	btfsc	status,2,c
  2135  001738  EFA0  F00B         	goto	u1941
  2136  00173C  EFA2  F00B         	goto	u1940
  2137  001740                     u1941:
  2138  001740  EFA6  F00B         	goto	l2208
  2139  001744                     u1940:
  2140  001744  6C43               	negf	___awmod@dividend^0,c
  2141  001746  1E44               	comf	(___awmod@dividend+1)^0,f,c
  2142  001748  B0D8               	btfsc	status,0,c
  2143  00174A  2A44               	incf	(___awmod@dividend+1)^0,f,c
  2144  00174C                     l2208:
  2145  00174C  C043  F043         	movff	___awmod@dividend,?___awmod
  2146  001750  C044  F044         	movff	___awmod@dividend+1,?___awmod+1
  2147  001754  0012               	return		;funcret
  2148  001756                     __end_of___awmod:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function ___awdiv *****************
  2152 ;; Defined at:
  2153 ;;		line 7 in file "C:\Users\Renato Marquez Cunha\Desktop\Unifei\Sims\compilerMblab\pic\sources\c99\common\awdiv.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  dividend        2    0[COMRAM] int 
  2156 ;;  divisor         2    2[COMRAM] int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  quotient        2    6[COMRAM] int 
  2159 ;;  sign            1    5[COMRAM] unsigned char 
  2160 ;;  counter         1    4[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    0[COMRAM] int 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         4       0       0       0       0       0       0
  2171 ;;      Locals:         4       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         8       0       0       0       0       0       0
  2174 ;;Total ram usage:        8 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_mudaPot
  2180 ;;		_lcdNumber
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text11
  2185  00152E                     __ptext11:
  2186                           	callstack 0
  2187  00152E                     ___awdiv:
  2188                           	callstack 29
  2189  00152E  0E00               	movlw	0
  2190  001530  6E40               	movwf	___awdiv@sign^0,c
  2191  001532  BE3E               	btfsc	(___awdiv@divisor+1)^0,7,c
  2192  001534  EFA0  F00A         	goto	u1830
  2193  001538  EF9E  F00A         	goto	u1831
  2194  00153C                     u1831:
  2195  00153C  EFA6  F00A         	goto	l2140
  2196  001540                     u1830:
  2197  001540  6C3D               	negf	___awdiv@divisor^0,c
  2198  001542  1E3E               	comf	(___awdiv@divisor+1)^0,f,c
  2199  001544  B0D8               	btfsc	status,0,c
  2200  001546  2A3E               	incf	(___awdiv@divisor+1)^0,f,c
  2201  001548  0E01               	movlw	1
  2202  00154A  6E40               	movwf	___awdiv@sign^0,c
  2203  00154C                     l2140:
  2204  00154C  BE3C               	btfsc	(___awdiv@dividend+1)^0,7,c
  2205  00154E  EFAD  F00A         	goto	u1840
  2206  001552  EFAB  F00A         	goto	u1841
  2207  001556                     u1841:
  2208  001556  EFB3  F00A         	goto	l2146
  2209  00155A                     u1840:
  2210  00155A  6C3B               	negf	___awdiv@dividend^0,c
  2211  00155C  1E3C               	comf	(___awdiv@dividend+1)^0,f,c
  2212  00155E  B0D8               	btfsc	status,0,c
  2213  001560  2A3C               	incf	(___awdiv@dividend+1)^0,f,c
  2214  001562  0E01               	movlw	1
  2215  001564  1A40               	xorwf	___awdiv@sign^0,f,c
  2216  001566                     l2146:
  2217  001566  0E00               	movlw	0
  2218  001568  6E42               	movwf	(___awdiv@quotient+1)^0,c
  2219  00156A  0E00               	movlw	0
  2220  00156C  6E41               	movwf	___awdiv@quotient^0,c
  2221  00156E  503D               	movf	___awdiv@divisor^0,w,c
  2222  001570  103E               	iorwf	(___awdiv@divisor+1)^0,w,c
  2223  001572  B4D8               	btfsc	status,2,c
  2224  001574  EFBE  F00A         	goto	u1851
  2225  001578  EFC0  F00A         	goto	u1850
  2226  00157C                     u1851:
  2227  00157C  EFE8  F00A         	goto	l2168
  2228  001580                     u1850:
  2229  001580  0E01               	movlw	1
  2230  001582  6E3F               	movwf	___awdiv@counter^0,c
  2231  001584  EFC8  F00A         	goto	l2154
  2232  001588                     l2152:
  2233  001588  90D8               	bcf	status,0,c
  2234  00158A  363D               	rlcf	___awdiv@divisor^0,f,c
  2235  00158C  363E               	rlcf	(___awdiv@divisor+1)^0,f,c
  2236  00158E  2A3F               	incf	___awdiv@counter^0,f,c
  2237  001590                     l2154:
  2238  001590  AE3E               	btfss	(___awdiv@divisor+1)^0,7,c
  2239  001592  EFCD  F00A         	goto	u1861
  2240  001596  EFCF  F00A         	goto	u1860
  2241  00159A                     u1861:
  2242  00159A  EFC4  F00A         	goto	l2152
  2243  00159E                     u1860:
  2244  00159E                     l2156:
  2245  00159E  90D8               	bcf	status,0,c
  2246  0015A0  3641               	rlcf	___awdiv@quotient^0,f,c
  2247  0015A2  3642               	rlcf	(___awdiv@quotient+1)^0,f,c
  2248  0015A4  503D               	movf	___awdiv@divisor^0,w,c
  2249  0015A6  5C3B               	subwf	___awdiv@dividend^0,w,c
  2250  0015A8  503E               	movf	(___awdiv@divisor+1)^0,w,c
  2251  0015AA  583C               	subwfb	(___awdiv@dividend+1)^0,w,c
  2252  0015AC  A0D8               	btfss	status,0,c
  2253  0015AE  EFDB  F00A         	goto	u1871
  2254  0015B2  EFDD  F00A         	goto	u1870
  2255  0015B6                     u1871:
  2256  0015B6  EFE2  F00A         	goto	l2164
  2257  0015BA                     u1870:
  2258  0015BA  503D               	movf	___awdiv@divisor^0,w,c
  2259  0015BC  5E3B               	subwf	___awdiv@dividend^0,f,c
  2260  0015BE  503E               	movf	(___awdiv@divisor+1)^0,w,c
  2261  0015C0  5A3C               	subwfb	(___awdiv@dividend+1)^0,f,c
  2262  0015C2  8041               	bsf	___awdiv@quotient^0,0,c
  2263  0015C4                     l2164:
  2264  0015C4  90D8               	bcf	status,0,c
  2265  0015C6  323E               	rrcf	(___awdiv@divisor+1)^0,f,c
  2266  0015C8  323D               	rrcf	___awdiv@divisor^0,f,c
  2267  0015CA  2E3F               	decfsz	___awdiv@counter^0,f,c
  2268  0015CC  EFCF  F00A         	goto	l2156
  2269  0015D0                     l2168:
  2270  0015D0  5040               	movf	___awdiv@sign^0,w,c
  2271  0015D2  B4D8               	btfsc	status,2,c
  2272  0015D4  EFEE  F00A         	goto	u1881
  2273  0015D8  EFF0  F00A         	goto	u1880
  2274  0015DC                     u1881:
  2275  0015DC  EFF4  F00A         	goto	l2172
  2276  0015E0                     u1880:
  2277  0015E0  6C41               	negf	___awdiv@quotient^0,c
  2278  0015E2  1E42               	comf	(___awdiv@quotient+1)^0,f,c
  2279  0015E4  B0D8               	btfsc	status,0,c
  2280  0015E6  2A42               	incf	(___awdiv@quotient+1)^0,f,c
  2281  0015E8                     l2172:
  2282  0015E8  C041  F03B         	movff	___awdiv@quotient,?___awdiv
  2283  0015EC  C042  F03C         	movff	___awdiv@quotient+1,?___awdiv+1
  2284  0015F0  0012               	return		;funcret
  2285  0015F2                     __end_of___awdiv:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _lcdInit *****************
  2289 ;; Defined at:
  2290 ;;		line 72 in file "lcd.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2304 ;;      Params:         0       0       0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 5
  2311 ;; This function calls:
  2312 ;;		_delayMicro
  2313 ;;		_delayMili
  2314 ;;		_lcdCommand
  2315 ;;		_pinMode
  2316 ;;		_pushNibble
  2317 ;;		_soInit
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text12
  2324  0015F2                     __ptext12:
  2325                           	callstack 0
  2326  0015F2                     _lcdInit:
  2327                           	callstack 25
  2328  0015F2                     
  2329                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2330  0015F2  0E00               	movlw	0
  2331  0015F4  6E3C               	movwf	(pinMode@pin+1)^0,c
  2332  0015F6  0E1C               	movlw	28
  2333  0015F8  6E3B               	movwf	pinMode@pin^0,c
  2334  0015FA  0E00               	movlw	0
  2335  0015FC  6E3E               	movwf	(pinMode@type+1)^0,c
  2336  0015FE  0E00               	movlw	0
  2337  001600  6E3D               	movwf	pinMode@type^0,c
  2338  001602  EC70  F005         	call	_pinMode	;wreg free
  2339                           
  2340                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2341  001606  0E00               	movlw	0
  2342  001608  6E3C               	movwf	(pinMode@pin+1)^0,c
  2343  00160A  0E1D               	movlw	29
  2344  00160C  6E3B               	movwf	pinMode@pin^0,c
  2345  00160E  0E00               	movlw	0
  2346  001610  6E3E               	movwf	(pinMode@type+1)^0,c
  2347  001612  0E00               	movlw	0
  2348  001614  6E3D               	movwf	pinMode@type^0,c
  2349  001616  EC70  F005         	call	_pinMode	;wreg free
  2350                           
  2351                           ;lcd.c: 75:  soInit();
  2352  00161A  ECA8  F00D         	call	_soInit	;wreg free
  2353                           
  2354                           ;lcd.c: 76:  delayMili(15);
  2355  00161E  0E00               	movlw	0
  2356  001620  6E3C               	movwf	(delayMili@a+1)^0,c
  2357  001622  0E0F               	movlw	15
  2358  001624  6E3B               	movwf	delayMili@a^0,c
  2359  001626  EC35  F00E         	call	_delayMili	;wreg free
  2360                           
  2361                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2362  00162A  0E00               	movlw	0
  2363  00162C  6E45               	movwf	(pushNibble@rs+1)^0,c
  2364  00162E  0E00               	movlw	0
  2365  001630  6E44               	movwf	pushNibble@rs^0,c
  2366  001632  0E03               	movlw	3
  2367  001634  EC77  F00E         	call	_pushNibble
  2368                           
  2369                           ;lcd.c: 79:  delayMili(5);
  2370  001638  0E00               	movlw	0
  2371  00163A  6E3C               	movwf	(delayMili@a+1)^0,c
  2372  00163C  0E05               	movlw	5
  2373  00163E  6E3B               	movwf	delayMili@a^0,c
  2374  001640  EC35  F00E         	call	_delayMili	;wreg free
  2375                           
  2376                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2377  001644  0E00               	movlw	0
  2378  001646  6E45               	movwf	(pushNibble@rs+1)^0,c
  2379  001648  0E00               	movlw	0
  2380  00164A  6E44               	movwf	pushNibble@rs^0,c
  2381  00164C  0E03               	movlw	3
  2382  00164E  EC77  F00E         	call	_pushNibble
  2383  001652                     
  2384                           ;lcd.c: 81:  delayMicro(160);
  2385  001652  0E00               	movlw	0
  2386  001654  6E3C               	movwf	(delayMicro@a+1)^0,c
  2387  001656  0EA0               	movlw	160
  2388  001658  6E3B               	movwf	delayMicro@a^0,c
  2389  00165A  ECC5  F00E         	call	_delayMicro	;wreg free
  2390  00165E                     
  2391                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2392  00165E  0E00               	movlw	0
  2393  001660  6E45               	movwf	(pushNibble@rs+1)^0,c
  2394  001662  0E00               	movlw	0
  2395  001664  6E44               	movwf	pushNibble@rs^0,c
  2396  001666  0E03               	movlw	3
  2397  001668  EC77  F00E         	call	_pushNibble
  2398                           
  2399                           ;lcd.c: 83:  delayMicro(160);
  2400  00166C  0E00               	movlw	0
  2401  00166E  6E3C               	movwf	(delayMicro@a+1)^0,c
  2402  001670  0EA0               	movlw	160
  2403  001672  6E3B               	movwf	delayMicro@a^0,c
  2404  001674  ECC5  F00E         	call	_delayMicro	;wreg free
  2405  001678                     
  2406                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2407  001678  0E00               	movlw	0
  2408  00167A  6E45               	movwf	(pushNibble@rs+1)^0,c
  2409  00167C  0E00               	movlw	0
  2410  00167E  6E44               	movwf	pushNibble@rs^0,c
  2411  001680  0E02               	movlw	2
  2412  001682  EC77  F00E         	call	_pushNibble
  2413  001686                     
  2414                           ;lcd.c: 86:  delayMili(10);
  2415  001686  0E00               	movlw	0
  2416  001688  6E3C               	movwf	(delayMili@a+1)^0,c
  2417  00168A  0E0A               	movlw	10
  2418  00168C  6E3B               	movwf	delayMili@a^0,c
  2419  00168E  EC35  F00E         	call	_delayMili	;wreg free
  2420  001692                     
  2421                           ;lcd.c: 88:  lcdCommand(0x28);
  2422  001692  0E28               	movlw	40
  2423  001694  ECAA  F00E         	call	_lcdCommand
  2424  001698                     
  2425                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2426  001698  0E0C               	movlw	12
  2427  00169A  ECAA  F00E         	call	_lcdCommand
  2428  00169E                     
  2429                           ;lcd.c: 90:  lcdCommand(0x01);
  2430  00169E  0E01               	movlw	1
  2431  0016A0  ECAA  F00E         	call	_lcdCommand
  2432  0016A4  0012               	return		;funcret
  2433  0016A6                     __end_of_lcdInit:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _pushNibble *****************
  2437 ;; Defined at:
  2438 ;;		line 25 in file "lcd.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  value           1    wreg     unsigned char 
  2441 ;;  rs              2    9[COMRAM] int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  value           1   11[COMRAM] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2453 ;;      Params:         2       0       0       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0
  2456 ;;      Totals:         3       0       0       0       0       0       0
  2457 ;;Total ram usage:        3 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 3
  2460 ;; This function calls:
  2461 ;;		_digitalWrite
  2462 ;;		_pulseEnablePin
  2463 ;;		_soWrite
  2464 ;; This function is called by:
  2465 ;;		_lcdInit
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text13
  2470  001CEE                     __ptext13:
  2471                           	callstack 0
  2472  001CEE                     _pushNibble:
  2473                           	callstack 26
  2474                           
  2475                           ;incstack = 0
  2476                           ;pushNibble@value stored from wreg
  2477  001CEE  6E46               	movwf	pushNibble@value^0,c
  2478  001CF0                     
  2479                           ;lcd.c: 26:  soWrite(value);
  2480  001CF0  C046  F041         	movff	pushNibble@value,soWrite@value
  2481  001CF4  6A42               	clrf	(soWrite@value+1)^0,c
  2482  001CF6  EC1C  F00D         	call	_soWrite	;wreg free
  2483                           
  2484                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2485  001CFA  0E00               	movlw	0
  2486  001CFC  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  2487  001CFE  0E1D               	movlw	29
  2488  001D00  6E3B               	movwf	digitalWrite@pin^0,c
  2489  001D02  C044  F03D         	movff	pushNibble@rs,digitalWrite@value
  2490  001D06  C045  F03E         	movff	pushNibble@rs+1,digitalWrite@value+1
  2491  001D0A  EC49  F004         	call	_digitalWrite	;wreg free
  2492                           
  2493                           ;lcd.c: 28:  pulseEnablePin();
  2494  001D0E  EC67  F00D         	call	_pulseEnablePin	;wreg free
  2495  001D12  0012               	return		;funcret
  2496  001D14                     __end_of_pushNibble:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function _kpInit *****************
  2500 ;; Defined at:
  2501 ;;		line 54 in file "keypad.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2515 ;;      Params:         0       0       0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 2
  2522 ;; This function calls:
  2523 ;;		_pinMode
  2524 ;;		_soInit
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text14
  2531  001C38                     __ptext14:
  2532                           	callstack 0
  2533  001C38                     _kpInit:
  2534                           	callstack 28
  2535  001C38                     
  2536                           ;keypad.c: 55:   soInit();
  2537  001C38  ECA8  F00D         	call	_soInit	;wreg free
  2538                           
  2539                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2540  001C3C  0E00               	movlw	0
  2541  001C3E  6E3C               	movwf	(pinMode@pin+1)^0,c
  2542  001C40  0E0A               	movlw	10
  2543  001C42  6E3B               	movwf	pinMode@pin^0,c
  2544  001C44  0E00               	movlw	0
  2545  001C46  6E3E               	movwf	(pinMode@type+1)^0,c
  2546  001C48  0E01               	movlw	1
  2547  001C4A  6E3D               	movwf	pinMode@type^0,c
  2548  001C4C  EC70  F005         	call	_pinMode	;wreg free
  2549                           
  2550                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2551  001C50  0E00               	movlw	0
  2552  001C52  6E3C               	movwf	(pinMode@pin+1)^0,c
  2553  001C54  0E09               	movlw	9
  2554  001C56  6E3B               	movwf	pinMode@pin^0,c
  2555  001C58  0E00               	movlw	0
  2556  001C5A  6E3E               	movwf	(pinMode@type+1)^0,c
  2557  001C5C  0E01               	movlw	1
  2558  001C5E  6E3D               	movwf	pinMode@type^0,c
  2559  001C60  EC70  F005         	call	_pinMode	;wreg free
  2560  001C64                     
  2561                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2562  001C64  0E0C               	movlw	12
  2563  001C66  6EC1               	movwf	193,c	;volatile
  2564  001C68  0012               	return		;funcret
  2565  001C6A                     __end_of_kpInit:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _soInit *****************
  2569 ;; Defined at:
  2570 ;;		line 3 in file "so.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2584 ;;      Params:         0       0       0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 1
  2591 ;; This function calls:
  2592 ;;		_pinMode
  2593 ;; This function is called by:
  2594 ;;		_kpInit
  2595 ;;		_lcdInit
  2596 ;;		_ssdInit
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text15
  2601  001B50                     __ptext15:
  2602                           	callstack 0
  2603  001B50                     _soInit:
  2604                           	callstack 28
  2605  001B50                     
  2606                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2607  001B50  0E00               	movlw	0
  2608  001B52  6E3C               	movwf	(pinMode@pin+1)^0,c
  2609  001B54  0E1F               	movlw	31
  2610  001B56  6E3B               	movwf	pinMode@pin^0,c
  2611  001B58  0E00               	movlw	0
  2612  001B5A  6E3E               	movwf	(pinMode@type+1)^0,c
  2613  001B5C  0E00               	movlw	0
  2614  001B5E  6E3D               	movwf	pinMode@type^0,c
  2615  001B60  EC70  F005         	call	_pinMode	;wreg free
  2616                           
  2617                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2618  001B64  0E00               	movlw	0
  2619  001B66  6E3C               	movwf	(pinMode@pin+1)^0,c
  2620  001B68  0E08               	movlw	8
  2621  001B6A  6E3B               	movwf	pinMode@pin^0,c
  2622  001B6C  0E00               	movlw	0
  2623  001B6E  6E3E               	movwf	(pinMode@type+1)^0,c
  2624  001B70  0E00               	movlw	0
  2625  001B72  6E3D               	movwf	pinMode@type^0,c
  2626  001B74  EC70  F005         	call	_pinMode	;wreg free
  2627                           
  2628                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2629  001B78  0E00               	movlw	0
  2630  001B7A  6E3C               	movwf	(pinMode@pin+1)^0,c
  2631  001B7C  0E1E               	movlw	30
  2632  001B7E  6E3B               	movwf	pinMode@pin^0,c
  2633  001B80  0E00               	movlw	0
  2634  001B82  6E3E               	movwf	(pinMode@type+1)^0,c
  2635  001B84  0E00               	movlw	0
  2636  001B86  6E3D               	movwf	pinMode@type^0,c
  2637  001B88  EC70  F005         	call	_pinMode	;wreg free
  2638  001B8C  0012               	return		;funcret
  2639  001B8E                     __end_of_soInit:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _escolheFunc *****************
  2643 ;; Defined at:
  2644 ;;		line 25 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  i               1   24[COMRAM] unsigned char 
  2649 ;;  hori            1   23[COMRAM] unsigned char 
  2650 ;;  tecla           1   22[COMRAM] unsigned char 
  2651 ;;  caso            1   21[COMRAM] unsigned char 
  2652 ;;  vert            1   20[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2662 ;;      Params:         0       0       0       0       0       0       0
  2663 ;;      Locals:         5       0       0       0       0       0       0
  2664 ;;      Temps:          2       0       0       0       0       0       0
  2665 ;;      Totals:         7       0       0       0       0       0       0
  2666 ;;Total ram usage:        7 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 6
  2669 ;; This function calls:
  2670 ;;		_digitalWrite
  2671 ;;		_kpDebounce
  2672 ;;		_kpReadKey
  2673 ;;		_lcdCommand
  2674 ;;		_lcdPosition
  2675 ;;		_lcdString
  2676 ;;		_rgbColor
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text16
  2683  00061C                     __ptext16:
  2684                           	callstack 0
  2685  00061C                     _escolheFunc:
  2686                           	callstack 24
  2687  00061C                     
  2688                           ;main.c: 27:     char caso=0;
  2689  00061C  0E00               	movlw	0
  2690  00061E  6E50               	movwf	escolheFunc@caso^0,c
  2691                           
  2692                           ;main.c: 29:     char i=0;
  2693  000620  0E00               	movlw	0
  2694  000622  6E53               	movwf	escolheFunc@i^0,c
  2695                           
  2696                           ;main.c: 30:     char vert=0, hori=0;
  2697  000624  0E00               	movlw	0
  2698  000626  6E4F               	movwf	escolheFunc@vert^0,c
  2699  000628  0E00               	movlw	0
  2700  00062A  6E52               	movwf	escolheFunc@hori^0,c
  2701  00062C                     
  2702                           ;main.c: 33:     lcdCommand(0x01);
  2703  00062C  0E01               	movlw	1
  2704  00062E  ECAA  F00E         	call	_lcdCommand
  2705  000632                     
  2706                           ;main.c: 36:     funcaoAndamento=-1;
  2707  000632  6801               	setf	_funcaoAndamento^0,c
  2708  000634  6802               	setf	(_funcaoAndamento+1)^0,c
  2709  000636                     
  2710                           ;main.c: 39:     potencia=50;
  2711  000636  0E00               	movlw	0
  2712  000638  6E5D               	movwf	(_potencia+1)^0,c
  2713  00063A  0E32               	movlw	50
  2714  00063C  6E5C               	movwf	_potencia^0,c
  2715                           
  2716                           ;main.c: 42:     while(selecionado==0)
  2717  00063E  EF40  F004         	goto	l2292
  2718  000642                     l2220:
  2719                           
  2720                           ;main.c: 49:                 rgbColor(1);
  2721  000642  0E00               	movlw	0
  2722  000644  6E42               	movwf	(rgbColor@led+1)^0,c
  2723  000646  0E01               	movlw	1
  2724  000648  6E41               	movwf	rgbColor@led^0,c
  2725  00064A  ECAB  F00B         	call	_rgbColor	;wreg free
  2726                           
  2727                           ;main.c: 50:                 lcdCommand(0x80);
  2728  00064E  0E80               	movlw	128
  2729  000650  ECAA  F00E         	call	_lcdCommand
  2730  000654                     
  2731                           ;main.c: 51:                 lcdString(op[0]);
  2732  000654  0E03               	movlw	low _op
  2733  000656  6E49               	movwf	lcdString@msg^0,c
  2734  000658  0E00               	movlw	high _op
  2735  00065A  6E4A               	movwf	(lcdString@msg+1)^0,c
  2736  00065C  EC88  F00D         	call	_lcdString	;wreg free
  2737  000660                     
  2738                           ;main.c: 52:                 lcdPosition(0, 9);
  2739  000660  0E00               	movlw	0
  2740  000662  6E4A               	movwf	(lcdPosition@line+1)^0,c
  2741  000664  0E00               	movlw	0
  2742  000666  6E49               	movwf	lcdPosition@line^0,c
  2743  000668  0E00               	movlw	0
  2744  00066A  6E4C               	movwf	(lcdPosition@col+1)^0,c
  2745  00066C  0E09               	movlw	9
  2746  00066E  6E4B               	movwf	lcdPosition@col^0,c
  2747  000670  ECE4  F00D         	call	_lcdPosition	;wreg free
  2748                           
  2749                           ;main.c: 53:                 lcdString(op[1]);
  2750  000674  0E0B               	movlw	low (_op+8)
  2751  000676  6E49               	movwf	lcdString@msg^0,c
  2752  000678  0E00               	movlw	high (_op+8)
  2753  00067A  6E4A               	movwf	(lcdString@msg+1)^0,c
  2754  00067C  EC88  F00D         	call	_lcdString	;wreg free
  2755  000680                     
  2756                           ;main.c: 55:                 lcdCommand(0xC0);
  2757  000680  0EC0               	movlw	192
  2758  000682  ECAA  F00E         	call	_lcdCommand
  2759  000686                     
  2760                           ;main.c: 56:                 lcdString(op[2]);
  2761  000686  0E13               	movlw	low (_op+16)
  2762  000688  6E49               	movwf	lcdString@msg^0,c
  2763  00068A  0E00               	movlw	high (_op+16)
  2764  00068C  6E4A               	movwf	(lcdString@msg+1)^0,c
  2765  00068E  EC88  F00D         	call	_lcdString	;wreg free
  2766                           
  2767                           ;main.c: 57:                 lcdPosition(1, 9);
  2768  000692  0E00               	movlw	0
  2769  000694  6E4A               	movwf	(lcdPosition@line+1)^0,c
  2770  000696  0E01               	movlw	1
  2771  000698  6E49               	movwf	lcdPosition@line^0,c
  2772  00069A  0E00               	movlw	0
  2773  00069C  6E4C               	movwf	(lcdPosition@col+1)^0,c
  2774  00069E  0E09               	movlw	9
  2775  0006A0  6E4B               	movwf	lcdPosition@col^0,c
  2776  0006A2  ECE4  F00D         	call	_lcdPosition	;wreg free
  2777  0006A6                     
  2778                           ;main.c: 58:                 lcdString(op[3]);
  2779  0006A6  0E1B               	movlw	low (_op+24)
  2780  0006A8  6E49               	movwf	lcdString@msg^0,c
  2781  0006AA  0E00               	movlw	high (_op+24)
  2782  0006AC  6E4A               	movwf	(lcdString@msg+1)^0,c
  2783  0006AE  EC88  F00D         	call	_lcdString	;wreg free
  2784  0006B2                     
  2785                           ;main.c: 59:                 caso=1;
  2786  0006B2  0E01               	movlw	1
  2787  0006B4  6E50               	movwf	escolheFunc@caso^0,c
  2788                           
  2789                           ;main.c: 60:                 break;
  2790  0006B6  EF18  F004         	goto	l2290
  2791  0006BA                     l2234:
  2792                           
  2793                           ;main.c: 64:                 kpDebounce();
  2794  0006BA  ECFC  F009         	call	_kpDebounce	;wreg free
  2795  0006BE                     
  2796                           ;main.c: 65:                 tecla=kpReadKey();
  2797  0006BE  EC03  F00C         	call	_kpReadKey	;wreg free
  2798  0006C2  6E51               	movwf	escolheFunc@tecla^0,c
  2799  0006C4                     
  2800                           ;main.c: 66:                 kpDebounce();
  2801  0006C4  ECFC  F009         	call	_kpDebounce	;wreg free
  2802                           
  2803                           ;main.c: 68:                 if(tecla!=kpReadKey())
  2804  0006C8  EC03  F00C         	call	_kpReadKey	;wreg free
  2805  0006CC  1851               	xorwf	escolheFunc@tecla^0,w,c
  2806  0006CE  B4D8               	btfsc	status,2,c
  2807  0006D0  EF6C  F003         	goto	u1951
  2808  0006D4  EF6E  F003         	goto	u1950
  2809  0006D8                     u1951:
  2810  0006D8  EFA5  F003         	goto	l2256
  2811  0006DC                     u1950:
  2812  0006DC  EF84  F003         	goto	l2254
  2813  0006E0                     l2242:
  2814                           
  2815                           ;main.c: 73:                             vert=0;
  2816  0006E0  0E00               	movlw	0
  2817  0006E2  6E4F               	movwf	escolheFunc@vert^0,c
  2818                           
  2819                           ;main.c: 74:                             break;
  2820  0006E4  EFA5  F003         	goto	l2256
  2821  0006E8                     l2244:
  2822                           
  2823                           ;main.c: 76:                             hori=0;
  2824  0006E8  0E00               	movlw	0
  2825  0006EA  6E52               	movwf	escolheFunc@hori^0,c
  2826                           
  2827                           ;main.c: 77:                             break;
  2828  0006EC  EFA5  F003         	goto	l2256
  2829  0006F0                     l2246:
  2830                           
  2831                           ;main.c: 79:                             vert=1;
  2832  0006F0  0E01               	movlw	1
  2833  0006F2  6E4F               	movwf	escolheFunc@vert^0,c
  2834                           
  2835                           ;main.c: 80:                             break;
  2836  0006F4  EFA5  F003         	goto	l2256
  2837  0006F8                     l2248:
  2838                           
  2839                           ;main.c: 82:                             hori=1;
  2840  0006F8  0E01               	movlw	1
  2841  0006FA  6E52               	movwf	escolheFunc@hori^0,c
  2842                           
  2843                           ;main.c: 83:                             break;
  2844  0006FC  EFA5  F003         	goto	l2256
  2845  000700                     l2250:
  2846                           
  2847                           ;main.c: 85:                             selecionado=1;
  2848  000700  0E01               	movlw	1
  2849  000702  6E64               	movwf	_selecionado^0,c
  2850                           
  2851                           ;main.c: 86:                             break;
  2852  000704  EFA5  F003         	goto	l2256
  2853  000708                     l2254:
  2854  000708  5051               	movf	escolheFunc@tecla^0,w,c
  2855  00070A  6E4D               	movwf	??_escolheFunc^0,c
  2856  00070C  6A4E               	clrf	(??_escolheFunc+1)^0,c
  2857                           
  2858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2859                           ; Switch size 1, requested type "simple"
  2860                           ; Number of cases is 1, Range of values is 0 to 0
  2861                           ; switch strategies available:
  2862                           ; Name         Instructions Cycles
  2863                           ; simple_byte            4     3 (average)
  2864                           ;	Chosen strategy is simple_byte
  2865  00070E  504E               	movf	(??_escolheFunc+1)^0,w,c
  2866  000710  0A00               	xorlw	0	; case 0
  2867  000712  B4D8               	btfsc	status,2,c
  2868  000714  EF8E  F003         	goto	l2538
  2869  000718  EFA5  F003         	goto	l2256
  2870  00071C                     l2538:
  2871                           
  2872                           ; Switch size 1, requested type "simple"
  2873                           ; Number of cases is 5, Range of values is 68 to 85
  2874                           ; switch strategies available:
  2875                           ; Name         Instructions Cycles
  2876                           ; simple_byte           16     9 (average)
  2877                           ;	Chosen strategy is simple_byte
  2878  00071C  504D               	movf	??_escolheFunc^0,w,c
  2879  00071E  0A44               	xorlw	68	; case 68
  2880  000720  B4D8               	btfsc	status,2,c
  2881  000722  EF78  F003         	goto	l2246
  2882  000726  0A08               	xorlw	8	; case 76
  2883  000728  B4D8               	btfsc	status,2,c
  2884  00072A  EF74  F003         	goto	l2244
  2885  00072E  0A1E               	xorlw	30	; case 82
  2886  000730  B4D8               	btfsc	status,2,c
  2887  000732  EF7C  F003         	goto	l2248
  2888  000736  0A01               	xorlw	1	; case 83
  2889  000738  B4D8               	btfsc	status,2,c
  2890  00073A  EF80  F003         	goto	l2250
  2891  00073E  0A06               	xorlw	6	; case 85
  2892  000740  B4D8               	btfsc	status,2,c
  2893  000742  EF70  F003         	goto	l2242
  2894  000746  EFA5  F003         	goto	l2256
  2895  00074A                     l2256:
  2896                           
  2897                           ;main.c: 91:                 if(vert==0)
  2898  00074A  504F               	movf	escolheFunc@vert^0,w,c
  2899  00074C  A4D8               	btfss	status,2,c
  2900  00074E  EFAB  F003         	goto	u1961
  2901  000752  EFAD  F003         	goto	u1960
  2902  000756                     u1961:
  2903  000756  EFC5  F003         	goto	l2264
  2904  00075A                     u1960:
  2905  00075A                     
  2906                           ;main.c: 92:                 {;main.c: 93:                     if(hori==1)
  2907  00075A  0452               	decf	escolheFunc@hori^0,w,c
  2908  00075C  A4D8               	btfss	status,2,c
  2909  00075E  EFB3  F003         	goto	u1971
  2910  000762  EFB5  F003         	goto	u1970
  2911  000766                     u1971:
  2912  000766  EFBD  F003         	goto	l2262
  2913  00076A                     u1970:
  2914  00076A                     
  2915                           ;main.c: 94:                     {;main.c: 95:                         op[1][4]='<';
  2916  00076A  0E3C               	movlw	60
  2917  00076C  6E0F               	movwf	(_op+12)^0,c
  2918                           
  2919                           ;main.c: 96:                         funcaoAndamento=1;
  2920  00076E  0E00               	movlw	0
  2921  000770  6E02               	movwf	(_funcaoAndamento+1)^0,c
  2922  000772  0E01               	movlw	1
  2923  000774  6E01               	movwf	_funcaoAndamento^0,c
  2924                           
  2925                           ;main.c: 97:                     }
  2926  000776  EFDB  F003         	goto	l62
  2927  00077A                     l2262:
  2928                           
  2929                           ;main.c: 99:                     {;main.c: 100:                         op[0][4]='<';
  2930  00077A  0E3C               	movlw	60
  2931  00077C  6E07               	movwf	(_op+4)^0,c
  2932                           
  2933                           ;main.c: 101:                         funcaoAndamento=0;
  2934  00077E  0E00               	movlw	0
  2935  000780  6E02               	movwf	(_funcaoAndamento+1)^0,c
  2936  000782  0E00               	movlw	0
  2937  000784  6E01               	movwf	_funcaoAndamento^0,c
  2938  000786  EFDB  F003         	goto	l62
  2939  00078A                     l2264:
  2940                           
  2941                           ;main.c: 105:                 {;main.c: 106:                     if(hori==1)
  2942  00078A  0452               	decf	escolheFunc@hori^0,w,c
  2943  00078C  A4D8               	btfss	status,2,c
  2944  00078E  EFCB  F003         	goto	u1981
  2945  000792  EFCD  F003         	goto	u1980
  2946  000796                     u1981:
  2947  000796  EFD5  F003         	goto	l2268
  2948  00079A                     u1980:
  2949  00079A                     
  2950                           ;main.c: 107:                     {;main.c: 108:                         op[3][4]='<';
  2951  00079A  0E3C               	movlw	60
  2952  00079C  6E1F               	movwf	(_op+28)^0,c
  2953                           
  2954                           ;main.c: 109:                         funcaoAndamento=3;
  2955  00079E  0E00               	movlw	0
  2956  0007A0  6E02               	movwf	(_funcaoAndamento+1)^0,c
  2957  0007A2  0E03               	movlw	3
  2958  0007A4  6E01               	movwf	_funcaoAndamento^0,c
  2959                           
  2960                           ;main.c: 110:                     }
  2961  0007A6  EFDB  F003         	goto	l62
  2962  0007AA                     l2268:
  2963                           
  2964                           ;main.c: 112:                     {;main.c: 113:                         op[2][4]='<';
  2965  0007AA  0E3C               	movlw	60
  2966  0007AC  6E17               	movwf	(_op+20)^0,c
  2967                           
  2968                           ;main.c: 114:                         funcaoAndamento=2;
  2969  0007AE  0E00               	movlw	0
  2970  0007B0  6E02               	movwf	(_funcaoAndamento+1)^0,c
  2971  0007B2  0E02               	movlw	2
  2972  0007B4  6E01               	movwf	_funcaoAndamento^0,c
  2973  0007B6                     l62:
  2974                           
  2975                           ;main.c: 118:                 for(i=0;i<4;i++)
  2976  0007B6  0E00               	movlw	0
  2977  0007B8  6E53               	movwf	escolheFunc@i^0,c
  2978  0007BA                     l2274:
  2979                           
  2980                           ;main.c: 119:                 {;main.c: 120:                     if(i!=funcaoAndamento)
  2981  0007BA  5053               	movf	escolheFunc@i^0,w,c
  2982  0007BC  6E4D               	movwf	??_escolheFunc^0,c
  2983  0007BE  6A4E               	clrf	(??_escolheFunc+1)^0,c
  2984  0007C0  5001               	movf	_funcaoAndamento^0,w,c
  2985  0007C2  184D               	xorwf	??_escolheFunc^0,w,c
  2986  0007C4  E109               	bnz	u1990
  2987  0007C6  5002               	movf	(_funcaoAndamento+1)^0,w,c
  2988  0007C8  184E               	xorwf	(??_escolheFunc+1)^0,w,c
  2989  0007CA  B4D8               	btfsc	status,2,c
  2990  0007CC  EFEA  F003         	goto	u1991
  2991  0007D0  EFEC  F003         	goto	u1990
  2992  0007D4                     u1991:
  2993  0007D4  EFF6  F003         	goto	l2278
  2994  0007D8                     u1990:
  2995  0007D8                     
  2996                           ;main.c: 121:                         op[i][4]=' ';
  2997  0007D8  5053               	movf	escolheFunc@i^0,w,c
  2998  0007DA  0D08               	mullw	8
  2999  0007DC  0E07               	movlw	low (_op+4)
  3000  0007DE  24F3               	addwf	243,w,c
  3001  0007E0  6ED9               	movwf	fsr2l,c
  3002  0007E2  0E00               	movlw	high (_op+4)
  3003  0007E4  20F4               	addwfc	prodh,w,c
  3004  0007E6  6EDA               	movwf	fsr2h,c
  3005  0007E8  0E20               	movlw	32
  3006  0007EA  6EDF               	movwf	indf2,c
  3007  0007EC                     l2278:
  3008                           
  3009                           ;main.c: 122:                 }
  3010  0007EC  2A53               	incf	escolheFunc@i^0,f,c
  3011  0007EE  0E03               	movlw	3
  3012  0007F0  6453               	cpfsgt	escolheFunc@i^0,c
  3013  0007F2  EFFD  F003         	goto	u2001
  3014  0007F6  EFFF  F003         	goto	u2000
  3015  0007FA                     u2001:
  3016  0007FA  EFDD  F003         	goto	l2274
  3017  0007FE                     u2000:
  3018  0007FE                     l2282:
  3019                           
  3020                           ;main.c: 124:                 caso=0;
  3021  0007FE  0E00               	movlw	0
  3022  000800  6E50               	movwf	escolheFunc@caso^0,c
  3023                           
  3024                           ;main.c: 125:                 break;
  3025  000802  EF18  F004         	goto	l2290
  3026  000806                     l2288:
  3027  000806  5050               	movf	escolheFunc@caso^0,w,c
  3028  000808  6E4D               	movwf	??_escolheFunc^0,c
  3029  00080A  6A4E               	clrf	(??_escolheFunc+1)^0,c
  3030                           
  3031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3032                           ; Switch size 1, requested type "simple"
  3033                           ; Number of cases is 1, Range of values is 0 to 0
  3034                           ; switch strategies available:
  3035                           ; Name         Instructions Cycles
  3036                           ; simple_byte            4     3 (average)
  3037                           ;	Chosen strategy is simple_byte
  3038  00080C  504E               	movf	(??_escolheFunc+1)^0,w,c
  3039  00080E  0A00               	xorlw	0	; case 0
  3040  000810  B4D8               	btfsc	status,2,c
  3041  000812  EF0D  F004         	goto	l2540
  3042  000816  EFFF  F003         	goto	l2282
  3043  00081A                     l2540:
  3044                           
  3045                           ; Switch size 1, requested type "simple"
  3046                           ; Number of cases is 2, Range of values is 0 to 1
  3047                           ; switch strategies available:
  3048                           ; Name         Instructions Cycles
  3049                           ; simple_byte            7     4 (average)
  3050                           ;	Chosen strategy is simple_byte
  3051  00081A  504D               	movf	??_escolheFunc^0,w,c
  3052  00081C  0A00               	xorlw	0	; case 0
  3053  00081E  B4D8               	btfsc	status,2,c
  3054  000820  EF21  F003         	goto	l2220
  3055  000824  0A01               	xorlw	1	; case 1
  3056  000826  B4D8               	btfsc	status,2,c
  3057  000828  EF5D  F003         	goto	l2234
  3058  00082C  EFFF  F003         	goto	l2282
  3059  000830                     l2290:
  3060                           
  3061                           ;main.c: 130:         digitalWrite(PIN_D0,0);
  3062  000830  0E00               	movlw	0
  3063  000832  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3064  000834  0E18               	movlw	24
  3065  000836  6E3B               	movwf	digitalWrite@pin^0,c
  3066  000838  0E00               	movlw	0
  3067  00083A  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3068  00083C  0E00               	movlw	0
  3069  00083E  6E3D               	movwf	digitalWrite@value^0,c
  3070  000840  EC49  F004         	call	_digitalWrite	;wreg free
  3071                           
  3072                           ;main.c: 131:         digitalWrite(PIN_D1,0);
  3073  000844  0E00               	movlw	0
  3074  000846  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3075  000848  0E19               	movlw	25
  3076  00084A  6E3B               	movwf	digitalWrite@pin^0,c
  3077  00084C  0E00               	movlw	0
  3078  00084E  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3079  000850  0E00               	movlw	0
  3080  000852  6E3D               	movwf	digitalWrite@value^0,c
  3081  000854  EC49  F004         	call	_digitalWrite	;wreg free
  3082                           
  3083                           ;main.c: 132:         digitalWrite(PIN_D2,0);
  3084  000858  0E00               	movlw	0
  3085  00085A  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3086  00085C  0E1A               	movlw	26
  3087  00085E  6E3B               	movwf	digitalWrite@pin^0,c
  3088  000860  0E00               	movlw	0
  3089  000862  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3090  000864  0E00               	movlw	0
  3091  000866  6E3D               	movwf	digitalWrite@value^0,c
  3092  000868  EC49  F004         	call	_digitalWrite	;wreg free
  3093                           
  3094                           ;main.c: 133:         digitalWrite(PIN_D3,0);
  3095  00086C  0E00               	movlw	0
  3096  00086E  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3097  000870  0E1B               	movlw	27
  3098  000872  6E3B               	movwf	digitalWrite@pin^0,c
  3099  000874  0E00               	movlw	0
  3100  000876  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3101  000878  0E00               	movlw	0
  3102  00087A  6E3D               	movwf	digitalWrite@value^0,c
  3103  00087C  EC49  F004         	call	_digitalWrite	;wreg free
  3104  000880                     l2292:
  3105                           
  3106                           ;main.c: 42:     while(selecionado==0)
  3107  000880  5064               	movf	_selecionado^0,w,c
  3108  000882  B4D8               	btfsc	status,2,c
  3109  000884  EF46  F004         	goto	u2011
  3110  000888  EF48  F004         	goto	u2010
  3111  00088C                     u2011:
  3112  00088C  EF03  F004         	goto	l2288
  3113  000890                     u2010:
  3114  000890  0012               	return		;funcret
  3115  000892                     __end_of_escolheFunc:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _rgbColor *****************
  3119 ;; Defined at:
  3120 ;;		line 3 in file "rgb.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  led             2    6[COMRAM] int 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         2       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0
  3137 ;;      Totals:         2       0       0       0       0       0       0
  3138 ;;Total ram usage:        2 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		_digitalWrite
  3143 ;; This function is called by:
  3144 ;;		_escolheFunc
  3145 ;;		_segMenu
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text17
  3150  001756                     __ptext17:
  3151                           	callstack 0
  3152  001756                     _rgbColor:
  3153                           	callstack 28
  3154  001756                     
  3155                           ;rgb.c: 4:  if (led & 1) {
  3156  001756  A041               	btfss	rgbColor@led^0,0,c
  3157  001758  EFB0  F00B         	goto	u1631
  3158  00175C  EFB2  F00B         	goto	u1630
  3159  001760                     u1631:
  3160  001760  EFBE  F00B         	goto	l1992
  3161  001764                     u1630:
  3162  001764                     
  3163                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  3164  001764  0E00               	movlw	0
  3165  001766  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3166  001768  0E18               	movlw	24
  3167  00176A  6E3B               	movwf	digitalWrite@pin^0,c
  3168  00176C  0E00               	movlw	0
  3169  00176E  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3170  001770  0E01               	movlw	1
  3171  001772  6E3D               	movwf	digitalWrite@value^0,c
  3172  001774  EC49  F004         	call	_digitalWrite	;wreg free
  3173                           
  3174                           ;rgb.c: 6:  } else {
  3175  001778  EFC8  F00B         	goto	l1994
  3176  00177C                     l1992:
  3177                           
  3178                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  3179  00177C  0E00               	movlw	0
  3180  00177E  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3181  001780  0E18               	movlw	24
  3182  001782  6E3B               	movwf	digitalWrite@pin^0,c
  3183  001784  0E00               	movlw	0
  3184  001786  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3185  001788  0E00               	movlw	0
  3186  00178A  6E3D               	movwf	digitalWrite@value^0,c
  3187  00178C  EC49  F004         	call	_digitalWrite	;wreg free
  3188  001790                     l1994:
  3189                           
  3190                           ;rgb.c: 9:  if (led & 2) {
  3191  001790  A241               	btfss	rgbColor@led^0,1,c
  3192  001792  EFCD  F00B         	goto	u1641
  3193  001796  EFCF  F00B         	goto	u1640
  3194  00179A                     u1641:
  3195  00179A  EFDB  F00B         	goto	l1998
  3196  00179E                     u1640:
  3197  00179E                     
  3198                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  3199  00179E  0E00               	movlw	0
  3200  0017A0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3201  0017A2  0E19               	movlw	25
  3202  0017A4  6E3B               	movwf	digitalWrite@pin^0,c
  3203  0017A6  0E00               	movlw	0
  3204  0017A8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3205  0017AA  0E01               	movlw	1
  3206  0017AC  6E3D               	movwf	digitalWrite@value^0,c
  3207  0017AE  EC49  F004         	call	_digitalWrite	;wreg free
  3208                           
  3209                           ;rgb.c: 11:  } else {
  3210  0017B2  EFE5  F00B         	goto	l2000
  3211  0017B6                     l1998:
  3212                           
  3213                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  3214  0017B6  0E00               	movlw	0
  3215  0017B8  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3216  0017BA  0E19               	movlw	25
  3217  0017BC  6E3B               	movwf	digitalWrite@pin^0,c
  3218  0017BE  0E00               	movlw	0
  3219  0017C0  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3220  0017C2  0E00               	movlw	0
  3221  0017C4  6E3D               	movwf	digitalWrite@value^0,c
  3222  0017C6  EC49  F004         	call	_digitalWrite	;wreg free
  3223  0017CA                     l2000:
  3224                           
  3225                           ;rgb.c: 14:  if (led & 4) {
  3226  0017CA  A441               	btfss	rgbColor@led^0,2,c
  3227  0017CC  EFEA  F00B         	goto	u1651
  3228  0017D0  EFEC  F00B         	goto	u1650
  3229  0017D4                     u1651:
  3230  0017D4  EFF8  F00B         	goto	l2004
  3231  0017D8                     u1650:
  3232  0017D8                     
  3233                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  3234  0017D8  0E00               	movlw	0
  3235  0017DA  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3236  0017DC  0E1A               	movlw	26
  3237  0017DE  6E3B               	movwf	digitalWrite@pin^0,c
  3238  0017E0  0E00               	movlw	0
  3239  0017E2  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3240  0017E4  0E01               	movlw	1
  3241  0017E6  6E3D               	movwf	digitalWrite@value^0,c
  3242  0017E8  EC49  F004         	call	_digitalWrite	;wreg free
  3243                           
  3244                           ;rgb.c: 16:  } else {
  3245  0017EC  EF02  F00C         	goto	l302
  3246  0017F0                     l2004:
  3247                           
  3248                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  3249  0017F0  0E00               	movlw	0
  3250  0017F2  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3251  0017F4  0E1A               	movlw	26
  3252  0017F6  6E3B               	movwf	digitalWrite@pin^0,c
  3253  0017F8  0E00               	movlw	0
  3254  0017FA  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3255  0017FC  0E00               	movlw	0
  3256  0017FE  6E3D               	movwf	digitalWrite@value^0,c
  3257  001800  EC49  F004         	call	_digitalWrite	;wreg free
  3258  001804                     l302:
  3259  001804  0012               	return		;funcret
  3260  001806                     __end_of_rgbColor:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _lcdString *****************
  3264 ;; Defined at:
  3265 ;;		line 57 in file "lcd.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3268 ;;		 -> op(56), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  i               2   16[COMRAM] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3280 ;;      Params:         2       0       0       0       0       0       0
  3281 ;;      Locals:         2       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0
  3283 ;;      Totals:         4       0       0       0       0       0       0
  3284 ;;Total ram usage:        4 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 5
  3287 ;; This function calls:
  3288 ;;		_lcdChar
  3289 ;; This function is called by:
  3290 ;;		_escolheFunc
  3291 ;;		_segMenu
  3292 ;;		_mudaPot
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text18
  3297  001B10                     __ptext18:
  3298                           	callstack 0
  3299  001B10                     _lcdString:
  3300                           	callstack 24
  3301  001B10                     
  3302                           ;lcd.c: 58:  int i = 0;
  3303  001B10  0E00               	movlw	0
  3304  001B12  6E4C               	movwf	(lcdString@i+1)^0,c
  3305  001B14  0E00               	movlw	0
  3306  001B16  6E4B               	movwf	lcdString@i^0,c
  3307                           
  3308                           ;lcd.c: 59:  while (msg[i] != 0) {
  3309  001B18  EF99  F00D         	goto	l2012
  3310  001B1C                     l2008:
  3311                           
  3312                           ;lcd.c: 60:   lcdChar(msg[i]);
  3313  001B1C  504B               	movf	lcdString@i^0,w,c
  3314  001B1E  2449               	addwf	lcdString@msg^0,w,c
  3315  001B20  6ED9               	movwf	fsr2l,c
  3316  001B22  504C               	movf	(lcdString@i+1)^0,w,c
  3317  001B24  204A               	addwfc	(lcdString@msg+1)^0,w,c
  3318  001B26  6EDA               	movwf	fsr2h,c
  3319  001B28  50DF               	movf	indf2,w,c
  3320  001B2A  EC9B  F00E         	call	_lcdChar
  3321  001B2E                     
  3322                           ;lcd.c: 61:   i++;
  3323  001B2E  4A4B               	infsnz	lcdString@i^0,f,c
  3324  001B30  2A4C               	incf	(lcdString@i+1)^0,f,c
  3325  001B32                     l2012:
  3326                           
  3327                           ;lcd.c: 59:  while (msg[i] != 0) {
  3328  001B32  504B               	movf	lcdString@i^0,w,c
  3329  001B34  2449               	addwf	lcdString@msg^0,w,c
  3330  001B36  6ED9               	movwf	fsr2l,c
  3331  001B38  504C               	movf	(lcdString@i+1)^0,w,c
  3332  001B3A  204A               	addwfc	(lcdString@msg+1)^0,w,c
  3333  001B3C  6EDA               	movwf	fsr2h,c
  3334  001B3E  50DF               	movf	indf2,w,c
  3335  001B40  A4D8               	btfss	status,2,c
  3336  001B42  EFA5  F00D         	goto	u1661
  3337  001B46  EFA7  F00D         	goto	u1660
  3338  001B4A                     u1661:
  3339  001B4A  EF8E  F00D         	goto	l2008
  3340  001B4E                     u1660:
  3341  001B4E  0012               	return		;funcret
  3342  001B50                     __end_of_lcdString:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function _lcdChar *****************
  3346 ;; Defined at:
  3347 ;;		line 52 in file "lcd.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  value           1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  value           1   13[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3361 ;;      Params:         0       0       0       0       0       0       0
  3362 ;;      Locals:         1       0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0
  3364 ;;      Totals:         1       0       0       0       0       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; Hardware stack levels required when called: 4
  3368 ;; This function calls:
  3369 ;;		_delayMicro
  3370 ;;		_pushByte
  3371 ;; This function is called by:
  3372 ;;		_lcdString
  3373 ;;		_lcdNumber
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text19
  3378  001D36                     __ptext19:
  3379                           	callstack 0
  3380  001D36                     _lcdChar:
  3381                           	callstack 24
  3382                           
  3383                           ;incstack = 0
  3384                           ;lcdChar@value stored from wreg
  3385  001D36  6E48               	movwf	lcdChar@value^0,c
  3386  001D38                     
  3387                           ;lcd.c: 53:  pushByte(value, 1);
  3388  001D38  0E00               	movlw	0
  3389  001D3A  6E45               	movwf	(pushByte@rs+1)^0,c
  3390  001D3C  0E01               	movlw	1
  3391  001D3E  6E44               	movwf	pushByte@rs^0,c
  3392  001D40  5048               	movf	lcdChar@value^0,w,c
  3393  001D42  EC70  F00C         	call	_pushByte
  3394  001D46                     
  3395                           ;lcd.c: 54:  delayMicro(80);
  3396  001D46  0E00               	movlw	0
  3397  001D48  6E3C               	movwf	(delayMicro@a+1)^0,c
  3398  001D4A  0E50               	movlw	80
  3399  001D4C  6E3B               	movwf	delayMicro@a^0,c
  3400  001D4E  ECC5  F00E         	call	_delayMicro	;wreg free
  3401  001D52  0012               	return		;funcret
  3402  001D54                     __end_of_lcdChar:
  3403                           	callstack 0
  3404                           
  3405 ;; *************** function _lcdPosition *****************
  3406 ;; Defined at:
  3407 ;;		line 44 in file "lcd.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  line            2   14[COMRAM] int 
  3410 ;;  col             2   16[COMRAM] int 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3422 ;;      Params:         4       0       0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0
  3425 ;;      Totals:         4       0       0       0       0       0       0
  3426 ;;Total ram usage:        4 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 5
  3429 ;; This function calls:
  3430 ;;		_lcdCommand
  3431 ;; This function is called by:
  3432 ;;		_escolheFunc
  3433 ;;		_segMenu
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text20
  3438  001BC8                     __ptext20:
  3439                           	callstack 0
  3440  001BC8                     _lcdPosition:
  3441                           	callstack 24
  3442  001BC8                     
  3443                           ;lcd.c: 45:  if (line == 0) {
  3444  001BC8  5049               	movf	lcdPosition@line^0,w,c
  3445  001BCA  104A               	iorwf	(lcdPosition@line+1)^0,w,c
  3446  001BCC  A4D8               	btfss	status,2,c
  3447  001BCE  EFEB  F00D         	goto	u1671
  3448  001BD2  EFED  F00D         	goto	u1670
  3449  001BD6                     u1671:
  3450  001BD6  EFF2  F00D         	goto	l2018
  3451  001BDA                     u1670:
  3452  001BDA                     
  3453                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  3454  001BDA  504B               	movf	lcdPosition@col^0,w,c
  3455  001BDC  0B0F               	andlw	15
  3456  001BDE  0F80               	addlw	128
  3457  001BE0  ECAA  F00E         	call	_lcdCommand
  3458  001BE4                     l2018:
  3459                           
  3460                           ;lcd.c: 48:  if (line == 1) {
  3461  001BE4  0449               	decf	lcdPosition@line^0,w,c
  3462  001BE6  104A               	iorwf	(lcdPosition@line+1)^0,w,c
  3463  001BE8  A4D8               	btfss	status,2,c
  3464  001BEA  EFF9  F00D         	goto	u1681
  3465  001BEE  EFFB  F00D         	goto	u1680
  3466  001BF2                     u1681:
  3467  001BF2  EF00  F00E         	goto	l271
  3468  001BF6                     u1680:
  3469  001BF6                     
  3470                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  3471  001BF6  504B               	movf	lcdPosition@col^0,w,c
  3472  001BF8  0B0F               	andlw	15
  3473  001BFA  0FC0               	addlw	192
  3474  001BFC  ECAA  F00E         	call	_lcdCommand
  3475  001C00                     l271:
  3476  001C00  0012               	return		;funcret
  3477  001C02                     __end_of_lcdPosition:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _lcdCommand *****************
  3481 ;; Defined at:
  3482 ;;		line 40 in file "lcd.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  value           1    wreg     unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  value           1   13[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3496 ;;      Params:         0       0       0       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0
  3499 ;;      Totals:         1       0       0       0       0       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 4
  3503 ;; This function calls:
  3504 ;;		_delayMili
  3505 ;;		_pushByte
  3506 ;; This function is called by:
  3507 ;;		_escolheFunc
  3508 ;;		_segMenu
  3509 ;;		_mudaPot
  3510 ;;		_lcdPosition
  3511 ;;		_lcdInit
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text21
  3516  001D54                     __ptext21:
  3517                           	callstack 0
  3518  001D54                     _lcdCommand:
  3519                           	callstack 24
  3520                           
  3521                           ;incstack = 0
  3522                           ;lcdCommand@value stored from wreg
  3523  001D54  6E48               	movwf	lcdCommand@value^0,c
  3524  001D56                     
  3525                           ;lcd.c: 41:  pushByte(value, 0);
  3526  001D56  0E00               	movlw	0
  3527  001D58  6E45               	movwf	(pushByte@rs+1)^0,c
  3528  001D5A  0E00               	movlw	0
  3529  001D5C  6E44               	movwf	pushByte@rs^0,c
  3530  001D5E  5048               	movf	lcdCommand@value^0,w,c
  3531  001D60  EC70  F00C         	call	_pushByte
  3532                           
  3533                           ;lcd.c: 42:  delayMili(2);
  3534  001D64  0E00               	movlw	0
  3535  001D66  6E3C               	movwf	(delayMili@a+1)^0,c
  3536  001D68  0E02               	movlw	2
  3537  001D6A  6E3B               	movwf	delayMili@a^0,c
  3538  001D6C  EC35  F00E         	call	_delayMili	;wreg free
  3539  001D70  0012               	return		;funcret
  3540  001D72                     __end_of_lcdCommand:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _pushByte *****************
  3544 ;; Defined at:
  3545 ;;		line 31 in file "lcd.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  value           1    wreg     unsigned char 
  3548 ;;  rs              2    9[COMRAM] int 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  value           1   12[COMRAM] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3560 ;;      Params:         2       0       0       0       0       0       0
  3561 ;;      Locals:         1       0       0       0       0       0       0
  3562 ;;      Temps:          1       0       0       0       0       0       0
  3563 ;;      Totals:         4       0       0       0       0       0       0
  3564 ;;Total ram usage:        4 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 3
  3567 ;; This function calls:
  3568 ;;		_digitalWrite
  3569 ;;		_pulseEnablePin
  3570 ;;		_soWrite
  3571 ;; This function is called by:
  3572 ;;		_lcdCommand
  3573 ;;		_lcdChar
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text22
  3578  0018E0                     __ptext22:
  3579                           	callstack 0
  3580  0018E0                     _pushByte:
  3581                           	callstack 24
  3582                           
  3583                           ;incstack = 0
  3584                           ;pushByte@value stored from wreg
  3585  0018E0  6E47               	movwf	pushByte@value^0,c
  3586  0018E2                     
  3587                           ;lcd.c: 32:  soWrite(value >> 4);
  3588  0018E2  C047  F046         	movff	pushByte@value,??_pushByte
  3589  0018E6  3A46               	swapf	??_pushByte^0,f,c
  3590  0018E8  0E0F               	movlw	15
  3591  0018EA  1646               	andwf	??_pushByte^0,f,c
  3592  0018EC  5046               	movf	??_pushByte^0,w,c
  3593  0018EE  6E41               	movwf	soWrite@value^0,c
  3594  0018F0  6A42               	clrf	(soWrite@value+1)^0,c
  3595  0018F2  EC1C  F00D         	call	_soWrite	;wreg free
  3596                           
  3597                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3598  0018F6  0E00               	movlw	0
  3599  0018F8  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3600  0018FA  0E1D               	movlw	29
  3601  0018FC  6E3B               	movwf	digitalWrite@pin^0,c
  3602  0018FE  C044  F03D         	movff	pushByte@rs,digitalWrite@value
  3603  001902  C045  F03E         	movff	pushByte@rs+1,digitalWrite@value+1
  3604  001906  EC49  F004         	call	_digitalWrite	;wreg free
  3605                           
  3606                           ;lcd.c: 34:  pulseEnablePin();
  3607  00190A  EC67  F00D         	call	_pulseEnablePin	;wreg free
  3608                           
  3609                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3610  00190E  C047  F046         	movff	pushByte@value,??_pushByte
  3611  001912  0E0F               	movlw	15
  3612  001914  1646               	andwf	??_pushByte^0,f,c
  3613  001916  5046               	movf	??_pushByte^0,w,c
  3614  001918  6E41               	movwf	soWrite@value^0,c
  3615  00191A  6A42               	clrf	(soWrite@value+1)^0,c
  3616  00191C  EC1C  F00D         	call	_soWrite	;wreg free
  3617                           
  3618                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3619  001920  0E00               	movlw	0
  3620  001922  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3621  001924  0E1D               	movlw	29
  3622  001926  6E3B               	movwf	digitalWrite@pin^0,c
  3623  001928  C044  F03D         	movff	pushByte@rs,digitalWrite@value
  3624  00192C  C045  F03E         	movff	pushByte@rs+1,digitalWrite@value+1
  3625  001930  EC49  F004         	call	_digitalWrite	;wreg free
  3626                           
  3627                           ;lcd.c: 38:  pulseEnablePin();
  3628  001934  EC67  F00D         	call	_pulseEnablePin	;wreg free
  3629  001938  0012               	return		;funcret
  3630  00193A                     __end_of_pushByte:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _pulseEnablePin *****************
  3634 ;; Defined at:
  3635 ;;		line 18 in file "lcd.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		_delayMicro
  3658 ;;		_digitalWrite
  3659 ;; This function is called by:
  3660 ;;		_pushNibble
  3661 ;;		_pushByte
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text23
  3666  001ACE                     __ptext23:
  3667                           	callstack 0
  3668  001ACE                     _pulseEnablePin:
  3669                           	callstack 25
  3670  001ACE                     
  3671                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3672  001ACE  0E00               	movlw	0
  3673  001AD0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3674  001AD2  0E1C               	movlw	28
  3675  001AD4  6E3B               	movwf	digitalWrite@pin^0,c
  3676  001AD6  0E00               	movlw	0
  3677  001AD8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3678  001ADA  0E01               	movlw	1
  3679  001ADC  6E3D               	movwf	digitalWrite@value^0,c
  3680  001ADE  EC49  F004         	call	_digitalWrite	;wreg free
  3681  001AE2                     
  3682                           ;lcd.c: 20:  delayMicro(5);
  3683  001AE2  0E00               	movlw	0
  3684  001AE4  6E3C               	movwf	(delayMicro@a+1)^0,c
  3685  001AE6  0E05               	movlw	5
  3686  001AE8  6E3B               	movwf	delayMicro@a^0,c
  3687  001AEA  ECC5  F00E         	call	_delayMicro	;wreg free
  3688  001AEE                     
  3689                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3690  001AEE  0E00               	movlw	0
  3691  001AF0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  3692  001AF2  0E1C               	movlw	28
  3693  001AF4  6E3B               	movwf	digitalWrite@pin^0,c
  3694  001AF6  0E00               	movlw	0
  3695  001AF8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  3696  001AFA  0E00               	movlw	0
  3697  001AFC  6E3D               	movwf	digitalWrite@value^0,c
  3698  001AFE  EC49  F004         	call	_digitalWrite	;wreg free
  3699                           
  3700                           ;lcd.c: 22:  delayMicro(5);
  3701  001B02  0E00               	movlw	0
  3702  001B04  6E3C               	movwf	(delayMicro@a+1)^0,c
  3703  001B06  0E05               	movlw	5
  3704  001B08  6E3B               	movwf	delayMicro@a^0,c
  3705  001B0A  ECC5  F00E         	call	_delayMicro	;wreg free
  3706  001B0E  0012               	return		;funcret
  3707  001B10                     __end_of_pulseEnablePin:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _delayMicro *****************
  3711 ;; Defined at:
  3712 ;;		line 5 in file "lcd.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  a               2    0[COMRAM] int 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  i               2    0        volatile int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		None
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3726 ;;      Params:         2       0       0       0       0       0       0
  3727 ;;      Locals:         0       0       0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0
  3729 ;;      Totals:         2       0       0       0       0       0       0
  3730 ;;Total ram usage:        2 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_pulseEnablePin
  3736 ;;		_lcdChar
  3737 ;;		_lcdInit
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text24
  3742  001D8A                     __ptext24:
  3743                           	callstack 0
  3744  001D8A                     _delayMicro:
  3745                           	callstack 25
  3746  001D8A  0012               	return		;funcret
  3747  001D8C                     __end_of_delayMicro:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _delayMili *****************
  3751 ;; Defined at:
  3752 ;;		line 10 in file "lcd.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  a               2    0[COMRAM] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  i               2    3[COMRAM] volatile int 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3766 ;;      Params:         2       0       0       0       0       0       0
  3767 ;;      Locals:         2       0       0       0       0       0       0
  3768 ;;      Temps:          1       0       0       0       0       0       0
  3769 ;;      Totals:         5       0       0       0       0       0       0
  3770 ;;Total ram usage:        5 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_lcdCommand
  3776 ;;		_lcdInit
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text25
  3781  001C6A                     __ptext25:
  3782                           	callstack 0
  3783  001C6A                     _delayMili:
  3784                           	callstack 27
  3785  001C6A                     
  3786                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3787  001C6A  0E00               	movlw	0
  3788  001C6C  6E3F               	movwf	(delayMili@i+1)^0,c	;volatile
  3789  001C6E  0E00               	movlw	0
  3790  001C70  6E3E               	movwf	delayMili@i^0,c	;volatile
  3791  001C72  EF3D  F00E         	goto	l1900
  3792  001C76                     l1898:
  3793                           
  3794                           ;lcd.c: 15:  }
  3795  001C76  4A3E               	infsnz	delayMili@i^0,f,c	;volatile
  3796  001C78  2A3F               	incf	(delayMili@i+1)^0,f,c	;volatile
  3797  001C7A                     l1900:
  3798  001C7A  503B               	movf	delayMili@a^0,w,c
  3799  001C7C  5C3E               	subwf	delayMili@i^0,w,c	;volatile
  3800  001C7E  503F               	movf	(delayMili@i+1)^0,w,c	;volatile
  3801  001C80  0A80               	xorlw	128
  3802  001C82  6E3D               	movwf	??_delayMili^0,c
  3803  001C84  503C               	movf	(delayMili@a+1)^0,w,c
  3804  001C86  0A80               	xorlw	128
  3805  001C88  583D               	subwfb	??_delayMili^0,w,c
  3806  001C8A  A0D8               	btfss	status,0,c
  3807  001C8C  EF4A  F00E         	goto	u1321
  3808  001C90  EF4C  F00E         	goto	u1320
  3809  001C94                     u1321:
  3810  001C94  EF3B  F00E         	goto	l1898
  3811  001C98                     u1320:
  3812  001C98  0012               	return		;funcret
  3813  001C9A                     __end_of_delayMili:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _kpReadKey *****************
  3817 ;; Defined at:
  3818 ;;		line 17 in file "keypad.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               2    3[COMRAM] int 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3832 ;;      Params:         0       0       0       0       0       0       0
  3833 ;;      Locals:         2       0       0       0       0       0       0
  3834 ;;      Temps:          3       0       0       0       0       0       0
  3835 ;;      Totals:         5       0       0       0       0       0       0
  3836 ;;Total ram usage:        5 bytes
  3837 ;; Hardware stack levels used: 1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_escolheFunc
  3842 ;;		_segMenu
  3843 ;;		_mudaPot
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text26
  3848  001806                     __ptext26:
  3849                           	callstack 0
  3850  001806                     _kpReadKey:
  3851                           	callstack 29
  3852  001806                     
  3853                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3854  001806  0E00               	movlw	0
  3855  001808  6E3F               	movwf	(kpReadKey@i+1)^0,c
  3856  00180A  0E00               	movlw	0
  3857  00180C  6E3E               	movwf	kpReadKey@i^0,c
  3858  00180E                     l1324:
  3859                           
  3860                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3861  00180E  C03E  F03B         	movff	kpReadKey@i,??_kpReadKey
  3862  001812  0E01               	movlw	1
  3863  001814  6E3C               	movwf	(??_kpReadKey+1)^0,c
  3864  001816  0E00               	movlw	0
  3865  001818  6E3D               	movwf	(??_kpReadKey+2)^0,c
  3866  00181A  2A3B               	incf	??_kpReadKey^0,f,c
  3867  00181C  EF13  F00C         	goto	u674
  3868  001820                     u675:
  3869  001820  90D8               	bcf	status,0,c
  3870  001822  363C               	rlcf	(??_kpReadKey+1)^0,f,c
  3871  001824  363D               	rlcf	(??_kpReadKey+2)^0,f,c
  3872  001826                     u674:
  3873  001826  2E3B               	decfsz	??_kpReadKey^0,f,c
  3874  001828  EF10  F00C         	goto	u675
  3875  00182C  505A               	movf	_keys^0,w,c
  3876  00182E  163C               	andwf	(??_kpReadKey+1)^0,f,c
  3877  001830  505B               	movf	(_keys+1)^0,w,c
  3878  001832  163D               	andwf	(??_kpReadKey+2)^0,f,c
  3879  001834  503C               	movf	(??_kpReadKey+1)^0,w,c
  3880  001836  103D               	iorwf	(??_kpReadKey+2)^0,w,c
  3881  001838  B4D8               	btfsc	status,2,c
  3882  00183A  EF21  F00C         	goto	u681
  3883  00183E  EF23  F00C         	goto	u680
  3884  001842                     u681:
  3885  001842  EF2D  F00C         	goto	l1330
  3886  001846                     u680:
  3887  001846                     
  3888                           ;keypad.c: 21:    return charKey[i];
  3889  001846  0E11               	movlw	low _charKey
  3890  001848  243E               	addwf	kpReadKey@i^0,w,c
  3891  00184A  6EF6               	movwf	tblptrl,c
  3892  00184C  0E06               	movlw	high _charKey
  3893  00184E  203F               	addwfc	(kpReadKey@i+1)^0,w,c
  3894  001850  6EF7               	movwf	tblptrh,c
  3895  001852                     	if	0	;There are less than 3 active tblptr bytes
  3896  001852                     	endif
  3897  001852  0008               	tblrd		*
  3898  001854  50F5               	movf	tablat,w,c
  3899  001856  EF3E  F00C         	goto	l218
  3900  00185A                     l1330:
  3901                           
  3902                           ;keypad.c: 23:  }
  3903  00185A  4A3E               	infsnz	kpReadKey@i^0,f,c
  3904  00185C  2A3F               	incf	(kpReadKey@i+1)^0,f,c
  3905  00185E  BE3F               	btfsc	(kpReadKey@i+1)^0,7,c
  3906  001860  EF3B  F00C         	goto	u691
  3907  001864  503F               	movf	(kpReadKey@i+1)^0,w,c
  3908  001866  E109               	bnz	u690
  3909  001868  0E0A               	movlw	10
  3910  00186A  5C3E               	subwf	kpReadKey@i^0,w,c
  3911  00186C  A0D8               	btfss	status,0,c
  3912  00186E  EF3B  F00C         	goto	u691
  3913  001872  EF3D  F00C         	goto	u690
  3914  001876                     u691:
  3915  001876  EF07  F00C         	goto	l1324
  3916  00187A                     u690:
  3917  00187A                     
  3918                           ;keypad.c: 25:  return 0;
  3919  00187A  0E00               	movlw	0
  3920  00187C                     l218:
  3921  00187C  0012               	return		;funcret
  3922  00187E                     __end_of_kpReadKey:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _kpDebounce *****************
  3926 ;; Defined at:
  3927 ;;		line 27 in file "keypad.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  i               2   12[COMRAM] int 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3941 ;;      Params:         0       0       0       0       0       0       0
  3942 ;;      Locals:         2       0       0       0       0       0       0
  3943 ;;      Temps:          3       0       0       0       0       0       0
  3944 ;;      Totals:         5       0       0       0       0       0       0
  3945 ;;Total ram usage:        5 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 3
  3948 ;; This function calls:
  3949 ;;		_digitalRead
  3950 ;;		_soWrite
  3951 ;; This function is called by:
  3952 ;;		_escolheFunc
  3953 ;;		_segMenu
  3954 ;;		_mudaPot
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text27
  3959  0013F8                     __ptext27:
  3960                           	callstack 0
  3961  0013F8                     _kpDebounce:
  3962                           	callstack 26
  3963  0013F8                     
  3964                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3965  0013F8  0E00               	movlw	0
  3966  0013FA  6E59               	movwf	(kpDebounce@newRead+1)^0,c
  3967  0013FC  0E00               	movlw	0
  3968  0013FE  6E58               	movwf	kpDebounce@newRead^0,c
  3969                           
  3970                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3971  001400  0E00               	movlw	0
  3972  001402  6E48               	movwf	(kpDebounce@i+1)^0,c
  3973  001404  0E00               	movlw	0
  3974  001406  6E47               	movwf	kpDebounce@i^0,c
  3975  001408                     l2024:
  3976  001408  BE48               	btfsc	(kpDebounce@i+1)^0,7,c
  3977  00140A  EF10  F00A         	goto	u1691
  3978  00140E  5048               	movf	(kpDebounce@i+1)^0,w,c
  3979  001410  E109               	bnz	u1690
  3980  001412  0E05               	movlw	5
  3981  001414  5C47               	subwf	kpDebounce@i^0,w,c
  3982  001416  A0D8               	btfss	status,0,c
  3983  001418  EF10  F00A         	goto	u1691
  3984  00141C  EF12  F00A         	goto	u1690
  3985  001420                     u1691:
  3986  001420  EF14  F00A         	goto	l2028
  3987  001424                     u1690:
  3988  001424  EF75  F00A         	goto	l2040
  3989  001428                     l2028:
  3990                           
  3991                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3992  001428  C047  F044         	movff	kpDebounce@i,??_kpDebounce
  3993  00142C  0E03               	movlw	3
  3994  00142E  2644               	addwf	??_kpDebounce^0,f,c
  3995  001430  0E01               	movlw	1
  3996  001432  6E45               	movwf	(??_kpDebounce+1)^0,c
  3997  001434  0E00               	movlw	0
  3998  001436  6E46               	movwf	(??_kpDebounce+2)^0,c
  3999  001438  2A44               	incf	??_kpDebounce^0,f,c
  4000  00143A  EF22  F00A         	goto	u1704
  4001  00143E                     u1705:
  4002  00143E  90D8               	bcf	status,0,c
  4003  001440  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  4004  001442  3646               	rlcf	(??_kpDebounce+2)^0,f,c
  4005  001444                     u1704:
  4006  001444  2E44               	decfsz	??_kpDebounce^0,f,c
  4007  001446  EF1F  F00A         	goto	u1705
  4008  00144A  C045  F041         	movff	??_kpDebounce+1,soWrite@value
  4009  00144E  C046  F042         	movff	??_kpDebounce+2,soWrite@value+1
  4010  001452  EC1C  F00D         	call	_soWrite	;wreg free
  4011                           
  4012                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4013  001456  0E00               	movlw	0
  4014  001458  6E3C               	movwf	(digitalRead@pin+1)^0,c
  4015  00145A  0E0A               	movlw	10
  4016  00145C  6E3B               	movwf	digitalRead@pin^0,c
  4017  00145E  EC47  F009         	call	_digitalRead	;wreg free
  4018  001462  503B               	movf	?_digitalRead^0,w,c
  4019  001464  103C               	iorwf	(?_digitalRead+1)^0,w,c
  4020  001466  B4D8               	btfsc	status,2,c
  4021  001468  EF38  F00A         	goto	u1711
  4022  00146C  EF3A  F00A         	goto	u1710
  4023  001470                     u1711:
  4024  001470  EF4D  F00A         	goto	l2032
  4025  001474                     u1710:
  4026  001474                     
  4027                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4028  001474  C047  F044         	movff	kpDebounce@i,??_kpDebounce
  4029  001478  0E01               	movlw	1
  4030  00147A  6E45               	movwf	(??_kpDebounce+1)^0,c
  4031  00147C  0E00               	movlw	0
  4032  00147E  6E46               	movwf	(??_kpDebounce+2)^0,c
  4033  001480  2A44               	incf	??_kpDebounce^0,f,c
  4034  001482  EF46  F00A         	goto	u1724
  4035  001486                     u1725:
  4036  001486  90D8               	bcf	status,0,c
  4037  001488  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  4038  00148A  3646               	rlcf	(??_kpDebounce+2)^0,f,c
  4039  00148C                     u1724:
  4040  00148C  2E44               	decfsz	??_kpDebounce^0,f,c
  4041  00148E  EF43  F00A         	goto	u1725
  4042  001492  5045               	movf	(??_kpDebounce+1)^0,w,c
  4043  001494  1258               	iorwf	kpDebounce@newRead^0,f,c
  4044  001496  5046               	movf	(??_kpDebounce+2)^0,w,c
  4045  001498  1259               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4046  00149A                     l2032:
  4047                           
  4048                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4049  00149A  0E00               	movlw	0
  4050  00149C  6E3C               	movwf	(digitalRead@pin+1)^0,c
  4051  00149E  0E09               	movlw	9
  4052  0014A0  6E3B               	movwf	digitalRead@pin^0,c
  4053  0014A2  EC47  F009         	call	_digitalRead	;wreg free
  4054  0014A6  503B               	movf	?_digitalRead^0,w,c
  4055  0014A8  103C               	iorwf	(?_digitalRead+1)^0,w,c
  4056  0014AA  B4D8               	btfsc	status,2,c
  4057  0014AC  EF5A  F00A         	goto	u1731
  4058  0014B0  EF5C  F00A         	goto	u1730
  4059  0014B4                     u1731:
  4060  0014B4  EF71  F00A         	goto	l2036
  4061  0014B8                     u1730:
  4062  0014B8                     
  4063                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4064  0014B8  C047  F044         	movff	kpDebounce@i,??_kpDebounce
  4065  0014BC  0E05               	movlw	5
  4066  0014BE  2644               	addwf	??_kpDebounce^0,f,c
  4067  0014C0  0E01               	movlw	1
  4068  0014C2  6E45               	movwf	(??_kpDebounce+1)^0,c
  4069  0014C4  0E00               	movlw	0
  4070  0014C6  6E46               	movwf	(??_kpDebounce+2)^0,c
  4071  0014C8  2A44               	incf	??_kpDebounce^0,f,c
  4072  0014CA  EF6A  F00A         	goto	u1744
  4073  0014CE                     u1745:
  4074  0014CE  90D8               	bcf	status,0,c
  4075  0014D0  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  4076  0014D2  3646               	rlcf	(??_kpDebounce+2)^0,f,c
  4077  0014D4                     u1744:
  4078  0014D4  2E44               	decfsz	??_kpDebounce^0,f,c
  4079  0014D6  EF67  F00A         	goto	u1745
  4080  0014DA  5045               	movf	(??_kpDebounce+1)^0,w,c
  4081  0014DC  1258               	iorwf	kpDebounce@newRead^0,f,c
  4082  0014DE  5046               	movf	(??_kpDebounce+2)^0,w,c
  4083  0014E0  1259               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4084  0014E2                     l2036:
  4085                           
  4086                           ;keypad.c: 42:     }
  4087  0014E2  4A47               	infsnz	kpDebounce@i^0,f,c
  4088  0014E4  2A48               	incf	(kpDebounce@i+1)^0,f,c
  4089  0014E6  EF04  F00A         	goto	l2024
  4090  0014EA                     l2040:
  4091                           
  4092                           ;keypad.c: 43:     if (oldRead == newRead) {
  4093  0014EA  5058               	movf	kpDebounce@newRead^0,w,c
  4094  0014EC  1856               	xorwf	kpDebounce@oldRead^0,w,c
  4095  0014EE  E107               	bnz	u1751
  4096  0014F0  5059               	movf	(kpDebounce@newRead+1)^0,w,c
  4097  0014F2  1857               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4098  0014F4  A4D8               	btfss	status,2,c
  4099  0014F6  EF7F  F00A         	goto	u1751
  4100  0014FA  EF81  F00A         	goto	u1750
  4101  0014FE                     u1751:
  4102  0014FE  EF84  F00A         	goto	l2044
  4103  001502                     u1750:
  4104  001502                     
  4105                           ;keypad.c: 44:         tempo--;
  4106  001502  0663               	decf	kpDebounce@tempo^0,f,c
  4107                           
  4108                           ;keypad.c: 45:     } else {
  4109  001504  EF8A  F00A         	goto	l232
  4110  001508                     l2044:
  4111                           
  4112                           ;keypad.c: 46:         tempo = 1;
  4113  001508  0E01               	movlw	1
  4114  00150A  6E63               	movwf	kpDebounce@tempo^0,c
  4115  00150C                     
  4116                           ;keypad.c: 47:         oldRead = newRead;
  4117  00150C  C058  F056         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4118  001510  C059  F057         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4119  001514                     l232:
  4120                           
  4121                           ;keypad.c: 49:     if (tempo == 0) {
  4122  001514  5063               	movf	kpDebounce@tempo^0,w,c
  4123  001516  A4D8               	btfss	status,2,c
  4124  001518  EF90  F00A         	goto	u1761
  4125  00151C  EF92  F00A         	goto	u1760
  4126  001520                     u1761:
  4127  001520  EF96  F00A         	goto	l234
  4128  001524                     u1760:
  4129  001524                     
  4130                           ;keypad.c: 50:         keys = oldRead;
  4131  001524  C056  F05A         	movff	kpDebounce@oldRead,_keys
  4132  001528  C057  F05B         	movff	kpDebounce@oldRead+1,_keys+1
  4133  00152C                     l234:
  4134  00152C  0012               	return		;funcret
  4135  00152E                     __end_of_kpDebounce:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _soWrite *****************
  4139 ;; Defined at:
  4140 ;;		line 18 in file "so.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  value           2    6[COMRAM] int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  i               1    8[COMRAM] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4154 ;;      Params:         2       0       0       0       0       0       0
  4155 ;;      Locals:         1       0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0
  4157 ;;      Totals:         3       0       0       0       0       0       0
  4158 ;;Total ram usage:        3 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 2
  4161 ;; This function calls:
  4162 ;;		_PulseClockData
  4163 ;;		_PulseEnClock
  4164 ;;		_digitalWrite
  4165 ;; This function is called by:
  4166 ;;		_kpDebounce
  4167 ;;		_pushNibble
  4168 ;;		_pushByte
  4169 ;;		_ssdUpdate
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text28
  4174  001A38                     __ptext28:
  4175                           	callstack 0
  4176  001A38                     _soWrite:
  4177                           	callstack 24
  4178  001A38                     
  4179                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4180  001A38  0E00               	movlw	0
  4181  001A3A  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4182  001A3C  0E08               	movlw	8
  4183  001A3E  6E3B               	movwf	digitalWrite@pin^0,c
  4184  001A40  0E00               	movlw	0
  4185  001A42  6E3E               	movwf	(digitalWrite@value+1)^0,c
  4186  001A44  0E00               	movlw	0
  4187  001A46  6E3D               	movwf	digitalWrite@value^0,c
  4188  001A48  EC49  F004         	call	_digitalWrite	;wreg free
  4189  001A4C                     
  4190                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4191  001A4C  0E00               	movlw	0
  4192  001A4E  6E43               	movwf	soWrite@i^0,c
  4193  001A50                     l1880:
  4194                           
  4195                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4196  001A50  0E00               	movlw	0
  4197  001A52  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4198  001A54  0E1E               	movlw	30
  4199  001A56  6E3B               	movwf	digitalWrite@pin^0,c
  4200  001A58  0E80               	movlw	128
  4201  001A5A  1441               	andwf	soWrite@value^0,w,c
  4202  001A5C  6E3D               	movwf	digitalWrite@value^0,c
  4203  001A5E  6A3E               	clrf	(digitalWrite@value+1)^0,c
  4204  001A60  EC49  F004         	call	_digitalWrite	;wreg free
  4205                           
  4206                           ;so.c: 23:   PulseClockData();
  4207  001A64  EC62  F00E         	call	_PulseClockData	;wreg free
  4208  001A68                     
  4209                           ;so.c: 24:   value <<= 1;
  4210  001A68  90D8               	bcf	status,0,c
  4211  001A6A  3641               	rlcf	soWrite@value^0,f,c
  4212  001A6C  3642               	rlcf	(soWrite@value+1)^0,f,c
  4213  001A6E                     
  4214                           ;so.c: 25:  }
  4215  001A6E  2A43               	incf	soWrite@i^0,f,c
  4216  001A70  0E07               	movlw	7
  4217  001A72  6443               	cpfsgt	soWrite@i^0,c
  4218  001A74  EF3E  F00D         	goto	u1311
  4219  001A78  EF40  F00D         	goto	u1310
  4220  001A7C                     u1311:
  4221  001A7C  EF28  F00D         	goto	l1880
  4222  001A80                     u1310:
  4223  001A80                     
  4224                           ;so.c: 26:  PulseEnClock();
  4225  001A80  EC4D  F00E         	call	_PulseEnClock	;wreg free
  4226  001A84  0012               	return		;funcret
  4227  001A86                     __end_of_soWrite:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _PulseEnClock *****************
  4231 ;; Defined at:
  4232 ;;		line 9 in file "so.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4246 ;;      Params:         0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 1
  4253 ;; This function calls:
  4254 ;;		_digitalWrite
  4255 ;; This function is called by:
  4256 ;;		_soWrite
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text29
  4261  001C9A                     __ptext29:
  4262                           	callstack 0
  4263  001C9A                     _PulseEnClock:
  4264                           	callstack 24
  4265  001C9A                     
  4266                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4267  001C9A  0E00               	movlw	0
  4268  001C9C  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4269  001C9E  0E1F               	movlw	31
  4270  001CA0  6E3B               	movwf	digitalWrite@pin^0,c
  4271  001CA2  0E00               	movlw	0
  4272  001CA4  6E3E               	movwf	(digitalWrite@value+1)^0,c
  4273  001CA6  0E01               	movlw	1
  4274  001CA8  6E3D               	movwf	digitalWrite@value^0,c
  4275  001CAA  EC49  F004         	call	_digitalWrite	;wreg free
  4276                           
  4277                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4278  001CAE  0E00               	movlw	0
  4279  001CB0  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4280  001CB2  0E1F               	movlw	31
  4281  001CB4  6E3B               	movwf	digitalWrite@pin^0,c
  4282  001CB6  0E00               	movlw	0
  4283  001CB8  6E3E               	movwf	(digitalWrite@value+1)^0,c
  4284  001CBA  0E00               	movlw	0
  4285  001CBC  6E3D               	movwf	digitalWrite@value^0,c
  4286  001CBE  EC49  F004         	call	_digitalWrite	;wreg free
  4287  001CC2  0012               	return		;funcret
  4288  001CC4                     __end_of_PulseEnClock:
  4289                           	callstack 0
  4290                           
  4291 ;; *************** function _PulseClockData *****************
  4292 ;; Defined at:
  4293 ;;		line 14 in file "so.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4307 ;;      Params:         0       0       0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 1
  4314 ;; This function calls:
  4315 ;;		_digitalWrite
  4316 ;; This function is called by:
  4317 ;;		_soWrite
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text30
  4322  001CC4                     __ptext30:
  4323                           	callstack 0
  4324  001CC4                     _PulseClockData:
  4325                           	callstack 24
  4326  001CC4                     
  4327                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4328  001CC4  0E00               	movlw	0
  4329  001CC6  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4330  001CC8  0E08               	movlw	8
  4331  001CCA  6E3B               	movwf	digitalWrite@pin^0,c
  4332  001CCC  0E00               	movlw	0
  4333  001CCE  6E3E               	movwf	(digitalWrite@value+1)^0,c
  4334  001CD0  0E01               	movlw	1
  4335  001CD2  6E3D               	movwf	digitalWrite@value^0,c
  4336  001CD4  EC49  F004         	call	_digitalWrite	;wreg free
  4337                           
  4338                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4339  001CD8  0E00               	movlw	0
  4340  001CDA  6E3C               	movwf	(digitalWrite@pin+1)^0,c
  4341  001CDC  0E08               	movlw	8
  4342  001CDE  6E3B               	movwf	digitalWrite@pin^0,c
  4343  001CE0  0E00               	movlw	0
  4344  001CE2  6E3E               	movwf	(digitalWrite@value+1)^0,c
  4345  001CE4  0E00               	movlw	0
  4346  001CE6  6E3D               	movwf	digitalWrite@value^0,c
  4347  001CE8  EC49  F004         	call	_digitalWrite	;wreg free
  4348  001CEC  0012               	return		;funcret
  4349  001CEE                     __end_of_PulseClockData:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _digitalWrite *****************
  4353 ;; Defined at:
  4354 ;;		line 14 in file "io.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  pin             2    0[COMRAM] int 
  4357 ;;  value           2    2[COMRAM] int 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         4       0       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0
  4371 ;;      Temps:          2       0       0       0       0       0       0
  4372 ;;      Totals:         6       0       0       0       0       0       0
  4373 ;;Total ram usage:        6 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_escolheFunc
  4379 ;;		_segMenu
  4380 ;;		_mudaPot
  4381 ;;		_pulseEnablePin
  4382 ;;		_pushNibble
  4383 ;;		_pushByte
  4384 ;;		_rgbColor
  4385 ;;		_PulseEnClock
  4386 ;;		_PulseClockData
  4387 ;;		_soWrite
  4388 ;;		_ssdUpdate
  4389 ;;		_turnOn
  4390 ;;		_turnOff
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text31
  4395  000892                     __ptext31:
  4396                           	callstack 0
  4397  000892                     _digitalWrite:
  4398                           	callstack 28
  4399  000892                     
  4400                           ;io.c: 16:     if(pin <8){
  4401  000892  BE3C               	btfsc	(digitalWrite@pin+1)^0,7,c
  4402  000894  EF57  F004         	goto	u1110
  4403  000898  503C               	movf	(digitalWrite@pin+1)^0,w,c
  4404  00089A  E107               	bnz	u1111
  4405  00089C  0E08               	movlw	8
  4406  00089E  5C3B               	subwf	digitalWrite@pin^0,w,c
  4407  0008A0  B0D8               	btfsc	status,0,c
  4408  0008A2  EF55  F004         	goto	u1111
  4409  0008A6  EF57  F004         	goto	u1110
  4410  0008AA                     u1111:
  4411  0008AA  EF81  F004         	goto	l1836
  4412  0008AE                     u1110:
  4413  0008AE                     
  4414                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4415  0008AE  503D               	movf	digitalWrite@value^0,w,c
  4416  0008B0  103E               	iorwf	(digitalWrite@value+1)^0,w,c
  4417  0008B2  B4D8               	btfsc	status,2,c
  4418  0008B4  EF5E  F004         	goto	u1121
  4419  0008B8  EF60  F004         	goto	u1120
  4420  0008BC                     u1121:
  4421  0008BC  EF70  F004         	goto	l1834
  4422  0008C0                     u1120:
  4423  0008C0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4424  0008C4  0E01               	movlw	1
  4425  0008C6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4426  0008C8  2A3F               	incf	??_digitalWrite^0,f,c
  4427  0008CA  EF69  F004         	goto	u1134
  4428  0008CE                     u1135:
  4429  0008CE  90D8               	bcf	status,0,c
  4430  0008D0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4431  0008D2                     u1134:
  4432  0008D2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4433  0008D4  EF67  F004         	goto	u1135
  4434  0008D8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4435  0008DA  1280               	iorwf	128,f,c	;volatile
  4436  0008DC  EF6F  F005         	goto	l161
  4437  0008E0                     l1834:
  4438  0008E0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4439  0008E4  0E01               	movlw	1
  4440  0008E6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4441  0008E8  2A3F               	incf	??_digitalWrite^0,f,c
  4442  0008EA  EF79  F004         	goto	u1144
  4443  0008EE                     u1145:
  4444  0008EE  90D8               	bcf	status,0,c
  4445  0008F0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4446  0008F2                     u1144:
  4447  0008F2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4448  0008F4  EF77  F004         	goto	u1145
  4449  0008F8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4450  0008FA  0AFF               	xorlw	255
  4451  0008FC  1680               	andwf	128,f,c	;volatile
  4452  0008FE  EF6F  F005         	goto	l161
  4453  000902                     l1836:
  4454  000902  BE3C               	btfsc	(digitalWrite@pin+1)^0,7,c
  4455  000904  EF8F  F004         	goto	u1150
  4456  000908  503C               	movf	(digitalWrite@pin+1)^0,w,c
  4457  00090A  E107               	bnz	u1151
  4458  00090C  0E10               	movlw	16
  4459  00090E  5C3B               	subwf	digitalWrite@pin^0,w,c
  4460  000910  B0D8               	btfsc	status,0,c
  4461  000912  EF8D  F004         	goto	u1151
  4462  000916  EF8F  F004         	goto	u1150
  4463  00091A                     u1151:
  4464  00091A  EFBD  F004         	goto	l1844
  4465  00091E                     u1150:
  4466  00091E                     
  4467                           ;io.c: 20:         pin -=8;
  4468  00091E  0EF8               	movlw	248
  4469  000920  263B               	addwf	digitalWrite@pin^0,f,c
  4470  000922  0EFF               	movlw	255
  4471  000924  223C               	addwfc	(digitalWrite@pin+1)^0,f,c
  4472                           
  4473                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4474  000926  503D               	movf	digitalWrite@value^0,w,c
  4475  000928  103E               	iorwf	(digitalWrite@value+1)^0,w,c
  4476  00092A  B4D8               	btfsc	status,2,c
  4477  00092C  EF9A  F004         	goto	u1161
  4478  000930  EF9C  F004         	goto	u1160
  4479  000934                     u1161:
  4480  000934  EFAC  F004         	goto	l1842
  4481  000938                     u1160:
  4482  000938  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4483  00093C  0E01               	movlw	1
  4484  00093E  6E40               	movwf	(??_digitalWrite+1)^0,c
  4485  000940  2A3F               	incf	??_digitalWrite^0,f,c
  4486  000942  EFA5  F004         	goto	u1174
  4487  000946                     u1175:
  4488  000946  90D8               	bcf	status,0,c
  4489  000948  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4490  00094A                     u1174:
  4491  00094A  2E3F               	decfsz	??_digitalWrite^0,f,c
  4492  00094C  EFA3  F004         	goto	u1175
  4493  000950  5040               	movf	(??_digitalWrite+1)^0,w,c
  4494  000952  1281               	iorwf	129,f,c	;volatile
  4495  000954  EF6F  F005         	goto	l161
  4496  000958                     l1842:
  4497  000958  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4498  00095C  0E01               	movlw	1
  4499  00095E  6E40               	movwf	(??_digitalWrite+1)^0,c
  4500  000960  2A3F               	incf	??_digitalWrite^0,f,c
  4501  000962  EFB5  F004         	goto	u1184
  4502  000966                     u1185:
  4503  000966  90D8               	bcf	status,0,c
  4504  000968  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4505  00096A                     u1184:
  4506  00096A  2E3F               	decfsz	??_digitalWrite^0,f,c
  4507  00096C  EFB3  F004         	goto	u1185
  4508  000970  5040               	movf	(??_digitalWrite+1)^0,w,c
  4509  000972  0AFF               	xorlw	255
  4510  000974  1681               	andwf	129,f,c	;volatile
  4511  000976  EF6F  F005         	goto	l161
  4512  00097A                     l1844:
  4513  00097A  BE3C               	btfsc	(digitalWrite@pin+1)^0,7,c
  4514  00097C  EFCB  F004         	goto	u1190
  4515  000980  503C               	movf	(digitalWrite@pin+1)^0,w,c
  4516  000982  E107               	bnz	u1191
  4517  000984  0E18               	movlw	24
  4518  000986  5C3B               	subwf	digitalWrite@pin^0,w,c
  4519  000988  B0D8               	btfsc	status,0,c
  4520  00098A  EFC9  F004         	goto	u1191
  4521  00098E  EFCB  F004         	goto	u1190
  4522  000992                     u1191:
  4523  000992  EFF9  F004         	goto	l1852
  4524  000996                     u1190:
  4525  000996                     
  4526                           ;io.c: 24:         pin -=16;
  4527  000996  0EF0               	movlw	240
  4528  000998  263B               	addwf	digitalWrite@pin^0,f,c
  4529  00099A  0EFF               	movlw	255
  4530  00099C  223C               	addwfc	(digitalWrite@pin+1)^0,f,c
  4531                           
  4532                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4533  00099E  503D               	movf	digitalWrite@value^0,w,c
  4534  0009A0  103E               	iorwf	(digitalWrite@value+1)^0,w,c
  4535  0009A2  B4D8               	btfsc	status,2,c
  4536  0009A4  EFD6  F004         	goto	u1201
  4537  0009A8  EFD8  F004         	goto	u1200
  4538  0009AC                     u1201:
  4539  0009AC  EFE8  F004         	goto	l1850
  4540  0009B0                     u1200:
  4541  0009B0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4542  0009B4  0E01               	movlw	1
  4543  0009B6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4544  0009B8  2A3F               	incf	??_digitalWrite^0,f,c
  4545  0009BA  EFE1  F004         	goto	u1214
  4546  0009BE                     u1215:
  4547  0009BE  90D8               	bcf	status,0,c
  4548  0009C0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4549  0009C2                     u1214:
  4550  0009C2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4551  0009C4  EFDF  F004         	goto	u1215
  4552  0009C8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4553  0009CA  1282               	iorwf	130,f,c	;volatile
  4554  0009CC  EF6F  F005         	goto	l161
  4555  0009D0                     l1850:
  4556  0009D0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4557  0009D4  0E01               	movlw	1
  4558  0009D6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4559  0009D8  2A3F               	incf	??_digitalWrite^0,f,c
  4560  0009DA  EFF1  F004         	goto	u1224
  4561  0009DE                     u1225:
  4562  0009DE  90D8               	bcf	status,0,c
  4563  0009E0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4564  0009E2                     u1224:
  4565  0009E2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4566  0009E4  EFEF  F004         	goto	u1225
  4567  0009E8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4568  0009EA  0AFF               	xorlw	255
  4569  0009EC  1682               	andwf	130,f,c	;volatile
  4570  0009EE  EF6F  F005         	goto	l161
  4571  0009F2                     l1852:
  4572  0009F2  BE3C               	btfsc	(digitalWrite@pin+1)^0,7,c
  4573  0009F4  EF07  F005         	goto	u1230
  4574  0009F8  503C               	movf	(digitalWrite@pin+1)^0,w,c
  4575  0009FA  E107               	bnz	u1231
  4576  0009FC  0E20               	movlw	32
  4577  0009FE  5C3B               	subwf	digitalWrite@pin^0,w,c
  4578  000A00  B0D8               	btfsc	status,0,c
  4579  000A02  EF05  F005         	goto	u1231
  4580  000A06  EF07  F005         	goto	u1230
  4581  000A0A                     u1231:
  4582  000A0A  EF35  F005         	goto	l1860
  4583  000A0E                     u1230:
  4584  000A0E                     
  4585                           ;io.c: 28:         pin -=24;
  4586  000A0E  0EE8               	movlw	232
  4587  000A10  263B               	addwf	digitalWrite@pin^0,f,c
  4588  000A12  0EFF               	movlw	255
  4589  000A14  223C               	addwfc	(digitalWrite@pin+1)^0,f,c
  4590                           
  4591                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4592  000A16  503D               	movf	digitalWrite@value^0,w,c
  4593  000A18  103E               	iorwf	(digitalWrite@value+1)^0,w,c
  4594  000A1A  B4D8               	btfsc	status,2,c
  4595  000A1C  EF12  F005         	goto	u1241
  4596  000A20  EF14  F005         	goto	u1240
  4597  000A24                     u1241:
  4598  000A24  EF24  F005         	goto	l1858
  4599  000A28                     u1240:
  4600  000A28  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4601  000A2C  0E01               	movlw	1
  4602  000A2E  6E40               	movwf	(??_digitalWrite+1)^0,c
  4603  000A30  2A3F               	incf	??_digitalWrite^0,f,c
  4604  000A32  EF1D  F005         	goto	u1254
  4605  000A36                     u1255:
  4606  000A36  90D8               	bcf	status,0,c
  4607  000A38  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4608  000A3A                     u1254:
  4609  000A3A  2E3F               	decfsz	??_digitalWrite^0,f,c
  4610  000A3C  EF1B  F005         	goto	u1255
  4611  000A40  5040               	movf	(??_digitalWrite+1)^0,w,c
  4612  000A42  1283               	iorwf	131,f,c	;volatile
  4613  000A44  EF6F  F005         	goto	l161
  4614  000A48                     l1858:
  4615  000A48  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4616  000A4C  0E01               	movlw	1
  4617  000A4E  6E40               	movwf	(??_digitalWrite+1)^0,c
  4618  000A50  2A3F               	incf	??_digitalWrite^0,f,c
  4619  000A52  EF2D  F005         	goto	u1264
  4620  000A56                     u1265:
  4621  000A56  90D8               	bcf	status,0,c
  4622  000A58  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4623  000A5A                     u1264:
  4624  000A5A  2E3F               	decfsz	??_digitalWrite^0,f,c
  4625  000A5C  EF2B  F005         	goto	u1265
  4626  000A60  5040               	movf	(??_digitalWrite+1)^0,w,c
  4627  000A62  0AFF               	xorlw	255
  4628  000A64  1683               	andwf	131,f,c	;volatile
  4629  000A66  EF6F  F005         	goto	l161
  4630  000A6A                     l1860:
  4631  000A6A  BE3C               	btfsc	(digitalWrite@pin+1)^0,7,c
  4632  000A6C  EF43  F005         	goto	u1270
  4633  000A70  503C               	movf	(digitalWrite@pin+1)^0,w,c
  4634  000A72  E107               	bnz	u1271
  4635  000A74  0E28               	movlw	40
  4636  000A76  5C3B               	subwf	digitalWrite@pin^0,w,c
  4637  000A78  B0D8               	btfsc	status,0,c
  4638  000A7A  EF41  F005         	goto	u1271
  4639  000A7E  EF43  F005         	goto	u1270
  4640  000A82                     u1271:
  4641  000A82  EF6F  F005         	goto	l161
  4642  000A86                     u1270:
  4643  000A86                     
  4644                           ;io.c: 32:         pin -=32;
  4645  000A86  0EE0               	movlw	224
  4646  000A88  263B               	addwf	digitalWrite@pin^0,f,c
  4647  000A8A  0EFF               	movlw	255
  4648  000A8C  223C               	addwfc	(digitalWrite@pin+1)^0,f,c
  4649                           
  4650                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4651  000A8E  503D               	movf	digitalWrite@value^0,w,c
  4652  000A90  103E               	iorwf	(digitalWrite@value+1)^0,w,c
  4653  000A92  B4D8               	btfsc	status,2,c
  4654  000A94  EF4E  F005         	goto	u1281
  4655  000A98  EF50  F005         	goto	u1280
  4656  000A9C                     u1281:
  4657  000A9C  EF60  F005         	goto	l1866
  4658  000AA0                     u1280:
  4659  000AA0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4660  000AA4  0E01               	movlw	1
  4661  000AA6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4662  000AA8  2A3F               	incf	??_digitalWrite^0,f,c
  4663  000AAA  EF59  F005         	goto	u1294
  4664  000AAE                     u1295:
  4665  000AAE  90D8               	bcf	status,0,c
  4666  000AB0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4667  000AB2                     u1294:
  4668  000AB2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4669  000AB4  EF57  F005         	goto	u1295
  4670  000AB8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4671  000ABA  1284               	iorwf	132,f,c	;volatile
  4672  000ABC  EF6F  F005         	goto	l161
  4673  000AC0                     l1866:
  4674  000AC0  C03B  F03F         	movff	digitalWrite@pin,??_digitalWrite
  4675  000AC4  0E01               	movlw	1
  4676  000AC6  6E40               	movwf	(??_digitalWrite+1)^0,c
  4677  000AC8  2A3F               	incf	??_digitalWrite^0,f,c
  4678  000ACA  EF69  F005         	goto	u1304
  4679  000ACE                     u1305:
  4680  000ACE  90D8               	bcf	status,0,c
  4681  000AD0  3640               	rlcf	(??_digitalWrite+1)^0,f,c
  4682  000AD2                     u1304:
  4683  000AD2  2E3F               	decfsz	??_digitalWrite^0,f,c
  4684  000AD4  EF67  F005         	goto	u1305
  4685  000AD8  5040               	movf	(??_digitalWrite+1)^0,w,c
  4686  000ADA  0AFF               	xorlw	255
  4687  000ADC  1684               	andwf	132,f,c	;volatile
  4688  000ADE                     l161:
  4689  000ADE  0012               	return		;funcret
  4690  000AE0                     __end_of_digitalWrite:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _digitalRead *****************
  4694 ;; Defined at:
  4695 ;;		line 39 in file "io.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  pin             2    0[COMRAM] int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2    0[COMRAM] int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4709 ;;      Params:         2       0       0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0
  4711 ;;      Temps:          3       0       0       0       0       0       0
  4712 ;;      Totals:         5       0       0       0       0       0       0
  4713 ;;Total ram usage:        5 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_kpDebounce
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text32
  4723  00128E                     __ptext32:
  4724                           	callstack 0
  4725  00128E                     _digitalRead:
  4726                           	callstack 28
  4727  00128E                     
  4728                           ;io.c: 40:     if(pin <8){
  4729  00128E  BE3C               	btfsc	(digitalRead@pin+1)^0,7,c
  4730  001290  EF55  F009         	goto	u1330
  4731  001294  503C               	movf	(digitalRead@pin+1)^0,w,c
  4732  001296  E107               	bnz	u1331
  4733  001298  0E08               	movlw	8
  4734  00129A  5C3B               	subwf	digitalRead@pin^0,w,c
  4735  00129C  B0D8               	btfsc	status,0,c
  4736  00129E  EF53  F009         	goto	u1331
  4737  0012A2  EF55  F009         	goto	u1330
  4738  0012A6                     u1331:
  4739  0012A6  EF69  F009         	goto	l1914
  4740  0012AA                     u1330:
  4741  0012AA                     
  4742                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4743  0012AA  C03B  F03D         	movff	digitalRead@pin,??_digitalRead
  4744  0012AE  0E01               	movlw	1
  4745  0012B0  6E3E               	movwf	(??_digitalRead+1)^0,c
  4746  0012B2  2A3D               	incf	??_digitalRead^0,f,c
  4747  0012B4  EF5E  F009         	goto	u1344
  4748  0012B8                     u1345:
  4749  0012B8  90D8               	bcf	status,0,c
  4750  0012BA  363E               	rlcf	(??_digitalRead+1)^0,f,c
  4751  0012BC                     u1344:
  4752  0012BC  2E3D               	decfsz	??_digitalRead^0,f,c
  4753  0012BE  EF5C  F009         	goto	u1345
  4754  0012C2  503E               	movf	(??_digitalRead+1)^0,w,c
  4755  0012C4  1480               	andwf	128,w,c	;volatile
  4756  0012C6  6E3F               	movwf	(??_digitalRead+2)^0,c
  4757  0012C8  503F               	movf	(??_digitalRead+2)^0,w,c
  4758  0012CA  6E3B               	movwf	?_digitalRead^0,c
  4759  0012CC  6A3C               	clrf	(?_digitalRead+1)^0,c
  4760  0012CE  EFFB  F009         	goto	l165
  4761  0012D2                     l1914:
  4762  0012D2  BE3C               	btfsc	(digitalRead@pin+1)^0,7,c
  4763  0012D4  EF77  F009         	goto	u1350
  4764  0012D8  503C               	movf	(digitalRead@pin+1)^0,w,c
  4765  0012DA  E107               	bnz	u1351
  4766  0012DC  0E10               	movlw	16
  4767  0012DE  5C3B               	subwf	digitalRead@pin^0,w,c
  4768  0012E0  B0D8               	btfsc	status,0,c
  4769  0012E2  EF75  F009         	goto	u1351
  4770  0012E6  EF77  F009         	goto	u1350
  4771  0012EA                     u1351:
  4772  0012EA  EF8D  F009         	goto	l1922
  4773  0012EE                     u1350:
  4774  0012EE                     
  4775                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4776  0012EE  C03B  F03D         	movff	digitalRead@pin,??_digitalRead
  4777  0012F2  0EF8               	movlw	-8
  4778  0012F4  263D               	addwf	??_digitalRead^0,f,c
  4779  0012F6  0E01               	movlw	1
  4780  0012F8  6E3E               	movwf	(??_digitalRead+1)^0,c
  4781  0012FA  2A3D               	incf	??_digitalRead^0,f,c
  4782  0012FC  EF82  F009         	goto	u1364
  4783  001300                     u1365:
  4784  001300  90D8               	bcf	status,0,c
  4785  001302  363E               	rlcf	(??_digitalRead+1)^0,f,c
  4786  001304                     u1364:
  4787  001304  2E3D               	decfsz	??_digitalRead^0,f,c
  4788  001306  EF80  F009         	goto	u1365
  4789  00130A  503E               	movf	(??_digitalRead+1)^0,w,c
  4790  00130C  1481               	andwf	129,w,c	;volatile
  4791  00130E  6E3F               	movwf	(??_digitalRead+2)^0,c
  4792  001310  503F               	movf	(??_digitalRead+2)^0,w,c
  4793  001312  6E3B               	movwf	?_digitalRead^0,c
  4794  001314  6A3C               	clrf	(?_digitalRead+1)^0,c
  4795  001316  EFFB  F009         	goto	l165
  4796  00131A                     l1922:
  4797  00131A  BE3C               	btfsc	(digitalRead@pin+1)^0,7,c
  4798  00131C  EF9B  F009         	goto	u1370
  4799  001320  503C               	movf	(digitalRead@pin+1)^0,w,c
  4800  001322  E107               	bnz	u1371
  4801  001324  0E18               	movlw	24
  4802  001326  5C3B               	subwf	digitalRead@pin^0,w,c
  4803  001328  B0D8               	btfsc	status,0,c
  4804  00132A  EF99  F009         	goto	u1371
  4805  00132E  EF9B  F009         	goto	u1370
  4806  001332                     u1371:
  4807  001332  EFB1  F009         	goto	l1930
  4808  001336                     u1370:
  4809  001336                     
  4810                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4811  001336  C03B  F03D         	movff	digitalRead@pin,??_digitalRead
  4812  00133A  0EF0               	movlw	-16
  4813  00133C  263D               	addwf	??_digitalRead^0,f,c
  4814  00133E  0E01               	movlw	1
  4815  001340  6E3E               	movwf	(??_digitalRead+1)^0,c
  4816  001342  2A3D               	incf	??_digitalRead^0,f,c
  4817  001344  EFA6  F009         	goto	u1384
  4818  001348                     u1385:
  4819  001348  90D8               	bcf	status,0,c
  4820  00134A  363E               	rlcf	(??_digitalRead+1)^0,f,c
  4821  00134C                     u1384:
  4822  00134C  2E3D               	decfsz	??_digitalRead^0,f,c
  4823  00134E  EFA4  F009         	goto	u1385
  4824  001352  503E               	movf	(??_digitalRead+1)^0,w,c
  4825  001354  1482               	andwf	130,w,c	;volatile
  4826  001356  6E3F               	movwf	(??_digitalRead+2)^0,c
  4827  001358  503F               	movf	(??_digitalRead+2)^0,w,c
  4828  00135A  6E3B               	movwf	?_digitalRead^0,c
  4829  00135C  6A3C               	clrf	(?_digitalRead+1)^0,c
  4830  00135E  EFFB  F009         	goto	l165
  4831  001362                     l1930:
  4832  001362  BE3C               	btfsc	(digitalRead@pin+1)^0,7,c
  4833  001364  EFBF  F009         	goto	u1390
  4834  001368  503C               	movf	(digitalRead@pin+1)^0,w,c
  4835  00136A  E107               	bnz	u1391
  4836  00136C  0E20               	movlw	32
  4837  00136E  5C3B               	subwf	digitalRead@pin^0,w,c
  4838  001370  B0D8               	btfsc	status,0,c
  4839  001372  EFBD  F009         	goto	u1391
  4840  001376  EFBF  F009         	goto	u1390
  4841  00137A                     u1391:
  4842  00137A  EFD5  F009         	goto	l1938
  4843  00137E                     u1390:
  4844  00137E                     
  4845                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4846  00137E  C03B  F03D         	movff	digitalRead@pin,??_digitalRead
  4847  001382  0EE8               	movlw	-24
  4848  001384  263D               	addwf	??_digitalRead^0,f,c
  4849  001386  0E01               	movlw	1
  4850  001388  6E3E               	movwf	(??_digitalRead+1)^0,c
  4851  00138A  2A3D               	incf	??_digitalRead^0,f,c
  4852  00138C  EFCA  F009         	goto	u1404
  4853  001390                     u1405:
  4854  001390  90D8               	bcf	status,0,c
  4855  001392  363E               	rlcf	(??_digitalRead+1)^0,f,c
  4856  001394                     u1404:
  4857  001394  2E3D               	decfsz	??_digitalRead^0,f,c
  4858  001396  EFC8  F009         	goto	u1405
  4859  00139A  503E               	movf	(??_digitalRead+1)^0,w,c
  4860  00139C  1483               	andwf	131,w,c	;volatile
  4861  00139E  6E3F               	movwf	(??_digitalRead+2)^0,c
  4862  0013A0  503F               	movf	(??_digitalRead+2)^0,w,c
  4863  0013A2  6E3B               	movwf	?_digitalRead^0,c
  4864  0013A4  6A3C               	clrf	(?_digitalRead+1)^0,c
  4865  0013A6  EFFB  F009         	goto	l165
  4866  0013AA                     l1938:
  4867  0013AA  BE3C               	btfsc	(digitalRead@pin+1)^0,7,c
  4868  0013AC  EFE3  F009         	goto	u1410
  4869  0013B0  503C               	movf	(digitalRead@pin+1)^0,w,c
  4870  0013B2  E107               	bnz	u1411
  4871  0013B4  0E28               	movlw	40
  4872  0013B6  5C3B               	subwf	digitalRead@pin^0,w,c
  4873  0013B8  B0D8               	btfsc	status,0,c
  4874  0013BA  EFE1  F009         	goto	u1411
  4875  0013BE  EFE3  F009         	goto	u1410
  4876  0013C2                     u1411:
  4877  0013C2  EFF9  F009         	goto	l170
  4878  0013C6                     u1410:
  4879  0013C6                     
  4880                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4881  0013C6  C03B  F03D         	movff	digitalRead@pin,??_digitalRead
  4882  0013CA  0EE0               	movlw	-32
  4883  0013CC  263D               	addwf	??_digitalRead^0,f,c
  4884  0013CE  0E01               	movlw	1
  4885  0013D0  6E3E               	movwf	(??_digitalRead+1)^0,c
  4886  0013D2  2A3D               	incf	??_digitalRead^0,f,c
  4887  0013D4  EFEE  F009         	goto	u1424
  4888  0013D8                     u1425:
  4889  0013D8  90D8               	bcf	status,0,c
  4890  0013DA  363E               	rlcf	(??_digitalRead+1)^0,f,c
  4891  0013DC                     u1424:
  4892  0013DC  2E3D               	decfsz	??_digitalRead^0,f,c
  4893  0013DE  EFEC  F009         	goto	u1425
  4894  0013E2  503E               	movf	(??_digitalRead+1)^0,w,c
  4895  0013E4  1484               	andwf	132,w,c	;volatile
  4896  0013E6  6E3F               	movwf	(??_digitalRead+2)^0,c
  4897  0013E8  503F               	movf	(??_digitalRead+2)^0,w,c
  4898  0013EA  6E3B               	movwf	?_digitalRead^0,c
  4899  0013EC  6A3C               	clrf	(?_digitalRead+1)^0,c
  4900  0013EE  EFFB  F009         	goto	l165
  4901  0013F2                     l170:
  4902  0013F2                     
  4903                           ;io.c: 51:     return -1;
  4904  0013F2  683B               	setf	?_digitalRead^0,c
  4905  0013F4  683C               	setf	(?_digitalRead+1)^0,c
  4906  0013F6                     l165:
  4907  0013F6  0012               	return		;funcret
  4908  0013F8                     __end_of_digitalRead:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _adcInit *****************
  4912 ;; Defined at:
  4913 ;;		line 25 in file "adc.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4927 ;;      Params:         0       0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 1
  4934 ;; This function calls:
  4935 ;;		_pinMode
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text33
  4942  001A86                     __ptext33:
  4943                           	callstack 0
  4944  001A86                     _adcInit:
  4945                           	callstack 29
  4946  001A86                     
  4947                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4948  001A86  0E00               	movlw	0
  4949  001A88  6E3C               	movwf	(pinMode@pin+1)^0,c
  4950  001A8A  0E00               	movlw	0
  4951  001A8C  6E3B               	movwf	pinMode@pin^0,c
  4952  001A8E  0E00               	movlw	0
  4953  001A90  6E3E               	movwf	(pinMode@type+1)^0,c
  4954  001A92  0E01               	movlw	1
  4955  001A94  6E3D               	movwf	pinMode@type^0,c
  4956  001A96  EC70  F005         	call	_pinMode	;wreg free
  4957                           
  4958                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4959  001A9A  0E00               	movlw	0
  4960  001A9C  6E3C               	movwf	(pinMode@pin+1)^0,c
  4961  001A9E  0E01               	movlw	1
  4962  001AA0  6E3B               	movwf	pinMode@pin^0,c
  4963  001AA2  0E00               	movlw	0
  4964  001AA4  6E3E               	movwf	(pinMode@type+1)^0,c
  4965  001AA6  0E01               	movlw	1
  4966  001AA8  6E3D               	movwf	pinMode@type^0,c
  4967  001AAA  EC70  F005         	call	_pinMode	;wreg free
  4968                           
  4969                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4970  001AAE  0E00               	movlw	0
  4971  001AB0  6E3C               	movwf	(pinMode@pin+1)^0,c
  4972  001AB2  0E02               	movlw	2
  4973  001AB4  6E3B               	movwf	pinMode@pin^0,c
  4974  001AB6  0E00               	movlw	0
  4975  001AB8  6E3E               	movwf	(pinMode@type+1)^0,c
  4976  001ABA  0E01               	movlw	1
  4977  001ABC  6E3D               	movwf	pinMode@type^0,c
  4978  001ABE  EC70  F005         	call	_pinMode	;wreg free
  4979  001AC2                     
  4980                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4981  001AC2  80C2               	bsf	194,0,c	;volatile
  4982  001AC4                     
  4983                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4984  001AC4  0E0C               	movlw	12
  4985  001AC6  6EC1               	movwf	193,c	;volatile
  4986  001AC8                     
  4987                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4988  001AC8  0EAA               	movlw	170
  4989  001ACA  6EC0               	movwf	192,c	;volatile
  4990  001ACC  0012               	return		;funcret
  4991  001ACE                     __end_of_adcInit:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _pinMode *****************
  4995 ;; Defined at:
  4996 ;;		line 54 in file "io.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  pin             2    0[COMRAM] int 
  4999 ;;  type            2    2[COMRAM] int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5011 ;;      Params:         4       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0
  5013 ;;      Temps:          2       0       0       0       0       0       0
  5014 ;;      Totals:         6       0       0       0       0       0       0
  5015 ;;Total ram usage:        6 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_kpInit
  5021 ;;		_lcdInit
  5022 ;;		_soInit
  5023 ;;		_ssdInit
  5024 ;;		_adcInit
  5025 ;;		_rgbInit
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text34
  5030  000AE0                     __ptext34:
  5031                           	callstack 0
  5032  000AE0                     _pinMode:
  5033                           	callstack 28
  5034  000AE0                     
  5035                           ;io.c: 56:     if(pin <8){
  5036  000AE0  BE3C               	btfsc	(pinMode@pin+1)^0,7,c
  5037  000AE2  EF7E  F005         	goto	u1430
  5038  000AE6  503C               	movf	(pinMode@pin+1)^0,w,c
  5039  000AE8  E107               	bnz	u1431
  5040  000AEA  0E08               	movlw	8
  5041  000AEC  5C3B               	subwf	pinMode@pin^0,w,c
  5042  000AEE  B0D8               	btfsc	status,0,c
  5043  000AF0  EF7C  F005         	goto	u1431
  5044  000AF4  EF7E  F005         	goto	u1430
  5045  000AF8                     u1431:
  5046  000AF8  EFA8  F005         	goto	l1952
  5047  000AFC                     u1430:
  5048  000AFC                     
  5049                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5050  000AFC  503D               	movf	pinMode@type^0,w,c
  5051  000AFE  103E               	iorwf	(pinMode@type+1)^0,w,c
  5052  000B00  B4D8               	btfsc	status,2,c
  5053  000B02  EF85  F005         	goto	u1441
  5054  000B06  EF87  F005         	goto	u1440
  5055  000B0A                     u1441:
  5056  000B0A  EF97  F005         	goto	l1950
  5057  000B0E                     u1440:
  5058  000B0E  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5059  000B12  0E01               	movlw	1
  5060  000B14  6E40               	movwf	(??_pinMode+1)^0,c
  5061  000B16  2A3F               	incf	??_pinMode^0,f,c
  5062  000B18  EF90  F005         	goto	u1454
  5063  000B1C                     u1455:
  5064  000B1C  90D8               	bcf	status,0,c
  5065  000B1E  3640               	rlcf	(??_pinMode+1)^0,f,c
  5066  000B20                     u1454:
  5067  000B20  2E3F               	decfsz	??_pinMode^0,f,c
  5068  000B22  EF8E  F005         	goto	u1455
  5069  000B26  5040               	movf	(??_pinMode+1)^0,w,c
  5070  000B28  1292               	iorwf	146,f,c	;volatile
  5071  000B2A  EF96  F006         	goto	l195
  5072  000B2E                     l1950:
  5073  000B2E  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5074  000B32  0E01               	movlw	1
  5075  000B34  6E40               	movwf	(??_pinMode+1)^0,c
  5076  000B36  2A3F               	incf	??_pinMode^0,f,c
  5077  000B38  EFA0  F005         	goto	u1464
  5078  000B3C                     u1465:
  5079  000B3C  90D8               	bcf	status,0,c
  5080  000B3E  3640               	rlcf	(??_pinMode+1)^0,f,c
  5081  000B40                     u1464:
  5082  000B40  2E3F               	decfsz	??_pinMode^0,f,c
  5083  000B42  EF9E  F005         	goto	u1465
  5084  000B46  5040               	movf	(??_pinMode+1)^0,w,c
  5085  000B48  0AFF               	xorlw	255
  5086  000B4A  1692               	andwf	146,f,c	;volatile
  5087  000B4C  EF96  F006         	goto	l195
  5088  000B50                     l1952:
  5089  000B50  BE3C               	btfsc	(pinMode@pin+1)^0,7,c
  5090  000B52  EFB6  F005         	goto	u1470
  5091  000B56  503C               	movf	(pinMode@pin+1)^0,w,c
  5092  000B58  E107               	bnz	u1471
  5093  000B5A  0E10               	movlw	16
  5094  000B5C  5C3B               	subwf	pinMode@pin^0,w,c
  5095  000B5E  B0D8               	btfsc	status,0,c
  5096  000B60  EFB4  F005         	goto	u1471
  5097  000B64  EFB6  F005         	goto	u1470
  5098  000B68                     u1471:
  5099  000B68  EFE4  F005         	goto	l1960
  5100  000B6C                     u1470:
  5101  000B6C                     
  5102                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5103  000B6C  503D               	movf	pinMode@type^0,w,c
  5104  000B6E  103E               	iorwf	(pinMode@type+1)^0,w,c
  5105  000B70  B4D8               	btfsc	status,2,c
  5106  000B72  EFBD  F005         	goto	u1481
  5107  000B76  EFBF  F005         	goto	u1480
  5108  000B7A                     u1481:
  5109  000B7A  EFD1  F005         	goto	l1958
  5110  000B7E                     u1480:
  5111  000B7E  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5112  000B82  0EF8               	movlw	-8
  5113  000B84  263F               	addwf	??_pinMode^0,f,c
  5114  000B86  0E01               	movlw	1
  5115  000B88  6E40               	movwf	(??_pinMode+1)^0,c
  5116  000B8A  2A3F               	incf	??_pinMode^0,f,c
  5117  000B8C  EFCA  F005         	goto	u1494
  5118  000B90                     u1495:
  5119  000B90  90D8               	bcf	status,0,c
  5120  000B92  3640               	rlcf	(??_pinMode+1)^0,f,c
  5121  000B94                     u1494:
  5122  000B94  2E3F               	decfsz	??_pinMode^0,f,c
  5123  000B96  EFC8  F005         	goto	u1495
  5124  000B9A  5040               	movf	(??_pinMode+1)^0,w,c
  5125  000B9C  1293               	iorwf	147,f,c	;volatile
  5126  000B9E  EF96  F006         	goto	l195
  5127  000BA2                     l1958:
  5128  000BA2  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5129  000BA6  0EF8               	movlw	-8
  5130  000BA8  263F               	addwf	??_pinMode^0,f,c
  5131  000BAA  0E01               	movlw	1
  5132  000BAC  6E40               	movwf	(??_pinMode+1)^0,c
  5133  000BAE  2A3F               	incf	??_pinMode^0,f,c
  5134  000BB0  EFDC  F005         	goto	u1504
  5135  000BB4                     u1505:
  5136  000BB4  90D8               	bcf	status,0,c
  5137  000BB6  3640               	rlcf	(??_pinMode+1)^0,f,c
  5138  000BB8                     u1504:
  5139  000BB8  2E3F               	decfsz	??_pinMode^0,f,c
  5140  000BBA  EFDA  F005         	goto	u1505
  5141  000BBE  5040               	movf	(??_pinMode+1)^0,w,c
  5142  000BC0  0AFF               	xorlw	255
  5143  000BC2  1693               	andwf	147,f,c	;volatile
  5144  000BC4  EF96  F006         	goto	l195
  5145  000BC8                     l1960:
  5146  000BC8  BE3C               	btfsc	(pinMode@pin+1)^0,7,c
  5147  000BCA  EFF2  F005         	goto	u1510
  5148  000BCE  503C               	movf	(pinMode@pin+1)^0,w,c
  5149  000BD0  E107               	bnz	u1511
  5150  000BD2  0E18               	movlw	24
  5151  000BD4  5C3B               	subwf	pinMode@pin^0,w,c
  5152  000BD6  B0D8               	btfsc	status,0,c
  5153  000BD8  EFF0  F005         	goto	u1511
  5154  000BDC  EFF2  F005         	goto	u1510
  5155  000BE0                     u1511:
  5156  000BE0  EF20  F006         	goto	l1968
  5157  000BE4                     u1510:
  5158  000BE4                     
  5159                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5160  000BE4  503D               	movf	pinMode@type^0,w,c
  5161  000BE6  103E               	iorwf	(pinMode@type+1)^0,w,c
  5162  000BE8  B4D8               	btfsc	status,2,c
  5163  000BEA  EFF9  F005         	goto	u1521
  5164  000BEE  EFFB  F005         	goto	u1520
  5165  000BF2                     u1521:
  5166  000BF2  EF0D  F006         	goto	l1966
  5167  000BF6                     u1520:
  5168  000BF6  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5169  000BFA  0EF0               	movlw	-16
  5170  000BFC  263F               	addwf	??_pinMode^0,f,c
  5171  000BFE  0E01               	movlw	1
  5172  000C00  6E40               	movwf	(??_pinMode+1)^0,c
  5173  000C02  2A3F               	incf	??_pinMode^0,f,c
  5174  000C04  EF06  F006         	goto	u1534
  5175  000C08                     u1535:
  5176  000C08  90D8               	bcf	status,0,c
  5177  000C0A  3640               	rlcf	(??_pinMode+1)^0,f,c
  5178  000C0C                     u1534:
  5179  000C0C  2E3F               	decfsz	??_pinMode^0,f,c
  5180  000C0E  EF04  F006         	goto	u1535
  5181  000C12  5040               	movf	(??_pinMode+1)^0,w,c
  5182  000C14  1294               	iorwf	148,f,c	;volatile
  5183  000C16  EF96  F006         	goto	l195
  5184  000C1A                     l1966:
  5185  000C1A  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5186  000C1E  0EF0               	movlw	-16
  5187  000C20  263F               	addwf	??_pinMode^0,f,c
  5188  000C22  0E01               	movlw	1
  5189  000C24  6E40               	movwf	(??_pinMode+1)^0,c
  5190  000C26  2A3F               	incf	??_pinMode^0,f,c
  5191  000C28  EF18  F006         	goto	u1544
  5192  000C2C                     u1545:
  5193  000C2C  90D8               	bcf	status,0,c
  5194  000C2E  3640               	rlcf	(??_pinMode+1)^0,f,c
  5195  000C30                     u1544:
  5196  000C30  2E3F               	decfsz	??_pinMode^0,f,c
  5197  000C32  EF16  F006         	goto	u1545
  5198  000C36  5040               	movf	(??_pinMode+1)^0,w,c
  5199  000C38  0AFF               	xorlw	255
  5200  000C3A  1694               	andwf	148,f,c	;volatile
  5201  000C3C  EF96  F006         	goto	l195
  5202  000C40                     l1968:
  5203  000C40  BE3C               	btfsc	(pinMode@pin+1)^0,7,c
  5204  000C42  EF2E  F006         	goto	u1550
  5205  000C46  503C               	movf	(pinMode@pin+1)^0,w,c
  5206  000C48  E107               	bnz	u1551
  5207  000C4A  0E20               	movlw	32
  5208  000C4C  5C3B               	subwf	pinMode@pin^0,w,c
  5209  000C4E  B0D8               	btfsc	status,0,c
  5210  000C50  EF2C  F006         	goto	u1551
  5211  000C54  EF2E  F006         	goto	u1550
  5212  000C58                     u1551:
  5213  000C58  EF5C  F006         	goto	l1976
  5214  000C5C                     u1550:
  5215  000C5C                     
  5216                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5217  000C5C  503D               	movf	pinMode@type^0,w,c
  5218  000C5E  103E               	iorwf	(pinMode@type+1)^0,w,c
  5219  000C60  B4D8               	btfsc	status,2,c
  5220  000C62  EF35  F006         	goto	u1561
  5221  000C66  EF37  F006         	goto	u1560
  5222  000C6A                     u1561:
  5223  000C6A  EF49  F006         	goto	l1974
  5224  000C6E                     u1560:
  5225  000C6E  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5226  000C72  0EE8               	movlw	-24
  5227  000C74  263F               	addwf	??_pinMode^0,f,c
  5228  000C76  0E01               	movlw	1
  5229  000C78  6E40               	movwf	(??_pinMode+1)^0,c
  5230  000C7A  2A3F               	incf	??_pinMode^0,f,c
  5231  000C7C  EF42  F006         	goto	u1574
  5232  000C80                     u1575:
  5233  000C80  90D8               	bcf	status,0,c
  5234  000C82  3640               	rlcf	(??_pinMode+1)^0,f,c
  5235  000C84                     u1574:
  5236  000C84  2E3F               	decfsz	??_pinMode^0,f,c
  5237  000C86  EF40  F006         	goto	u1575
  5238  000C8A  5040               	movf	(??_pinMode+1)^0,w,c
  5239  000C8C  1295               	iorwf	149,f,c	;volatile
  5240  000C8E  EF96  F006         	goto	l195
  5241  000C92                     l1974:
  5242  000C92  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5243  000C96  0EE8               	movlw	-24
  5244  000C98  263F               	addwf	??_pinMode^0,f,c
  5245  000C9A  0E01               	movlw	1
  5246  000C9C  6E40               	movwf	(??_pinMode+1)^0,c
  5247  000C9E  2A3F               	incf	??_pinMode^0,f,c
  5248  000CA0  EF54  F006         	goto	u1584
  5249  000CA4                     u1585:
  5250  000CA4  90D8               	bcf	status,0,c
  5251  000CA6  3640               	rlcf	(??_pinMode+1)^0,f,c
  5252  000CA8                     u1584:
  5253  000CA8  2E3F               	decfsz	??_pinMode^0,f,c
  5254  000CAA  EF52  F006         	goto	u1585
  5255  000CAE  5040               	movf	(??_pinMode+1)^0,w,c
  5256  000CB0  0AFF               	xorlw	255
  5257  000CB2  1695               	andwf	149,f,c	;volatile
  5258  000CB4  EF96  F006         	goto	l195
  5259  000CB8                     l1976:
  5260  000CB8  BE3C               	btfsc	(pinMode@pin+1)^0,7,c
  5261  000CBA  EF6A  F006         	goto	u1590
  5262  000CBE  503C               	movf	(pinMode@pin+1)^0,w,c
  5263  000CC0  E107               	bnz	u1591
  5264  000CC2  0E28               	movlw	40
  5265  000CC4  5C3B               	subwf	pinMode@pin^0,w,c
  5266  000CC6  B0D8               	btfsc	status,0,c
  5267  000CC8  EF68  F006         	goto	u1591
  5268  000CCC  EF6A  F006         	goto	u1590
  5269  000CD0                     u1591:
  5270  000CD0  EF96  F006         	goto	l195
  5271  000CD4                     u1590:
  5272  000CD4                     
  5273                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5274  000CD4  503D               	movf	pinMode@type^0,w,c
  5275  000CD6  103E               	iorwf	(pinMode@type+1)^0,w,c
  5276  000CD8  B4D8               	btfsc	status,2,c
  5277  000CDA  EF71  F006         	goto	u1601
  5278  000CDE  EF73  F006         	goto	u1600
  5279  000CE2                     u1601:
  5280  000CE2  EF85  F006         	goto	l1982
  5281  000CE6                     u1600:
  5282  000CE6  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5283  000CEA  0EE0               	movlw	-32
  5284  000CEC  263F               	addwf	??_pinMode^0,f,c
  5285  000CEE  0E01               	movlw	1
  5286  000CF0  6E40               	movwf	(??_pinMode+1)^0,c
  5287  000CF2  2A3F               	incf	??_pinMode^0,f,c
  5288  000CF4  EF7E  F006         	goto	u1614
  5289  000CF8                     u1615:
  5290  000CF8  90D8               	bcf	status,0,c
  5291  000CFA  3640               	rlcf	(??_pinMode+1)^0,f,c
  5292  000CFC                     u1614:
  5293  000CFC  2E3F               	decfsz	??_pinMode^0,f,c
  5294  000CFE  EF7C  F006         	goto	u1615
  5295  000D02  5040               	movf	(??_pinMode+1)^0,w,c
  5296  000D04  1296               	iorwf	150,f,c	;volatile
  5297  000D06  EF96  F006         	goto	l195
  5298  000D0A                     l1982:
  5299  000D0A  C03B  F03F         	movff	pinMode@pin,??_pinMode
  5300  000D0E  0EE0               	movlw	-32
  5301  000D10  263F               	addwf	??_pinMode^0,f,c
  5302  000D12  0E01               	movlw	1
  5303  000D14  6E40               	movwf	(??_pinMode+1)^0,c
  5304  000D16  2A3F               	incf	??_pinMode^0,f,c
  5305  000D18  EF90  F006         	goto	u1624
  5306  000D1C                     u1625:
  5307  000D1C  90D8               	bcf	status,0,c
  5308  000D1E  3640               	rlcf	(??_pinMode+1)^0,f,c
  5309  000D20                     u1624:
  5310  000D20  2E3F               	decfsz	??_pinMode^0,f,c
  5311  000D22  EF8E  F006         	goto	u1625
  5312  000D26  5040               	movf	(??_pinMode+1)^0,w,c
  5313  000D28  0AFF               	xorlw	255
  5314  000D2A  1696               	andwf	150,f,c	;volatile
  5315  000D2C                     l195:
  5316  000D2C  0012               	return		;funcret
  5317  000D2E                     __end_of_pinMode:
  5318                           	callstack 0
  5319                           
  5320                           	psect	rparam
  5321  0000                     
  5322                           	psect	idloc
  5323                           
  5324                           ;Config register IDLOC0 @ 0x200000
  5325                           ;	unspecified, using default values
  5326  200000                     	org	2097152
  5327  200000  FF                 	db	255
  5328                           
  5329                           ;Config register IDLOC1 @ 0x200001
  5330                           ;	unspecified, using default values
  5331  200001                     	org	2097153
  5332  200001  FF                 	db	255
  5333                           
  5334                           ;Config register IDLOC2 @ 0x200002
  5335                           ;	unspecified, using default values
  5336  200002                     	org	2097154
  5337  200002  FF                 	db	255
  5338                           
  5339                           ;Config register IDLOC3 @ 0x200003
  5340                           ;	unspecified, using default values
  5341  200003                     	org	2097155
  5342  200003  FF                 	db	255
  5343                           
  5344                           ;Config register IDLOC4 @ 0x200004
  5345                           ;	unspecified, using default values
  5346  200004                     	org	2097156
  5347  200004  FF                 	db	255
  5348                           
  5349                           ;Config register IDLOC5 @ 0x200005
  5350                           ;	unspecified, using default values
  5351  200005                     	org	2097157
  5352  200005  FF                 	db	255
  5353                           
  5354                           ;Config register IDLOC6 @ 0x200006
  5355                           ;	unspecified, using default values
  5356  200006                     	org	2097158
  5357  200006  FF                 	db	255
  5358                           
  5359                           ;Config register IDLOC7 @ 0x200007
  5360                           ;	unspecified, using default values
  5361  200007                     	org	2097159
  5362  200007  FF                 	db	255
  5363                           
  5364                           	psect	config
  5365                           
  5366                           ; Padding undefined space
  5367  300000                     	org	3145728
  5368  300000  FF                 	db	255
  5369                           
  5370                           ;Config register CONFIG1H @ 0x300001
  5371                           ;	Oscillator Selection bits
  5372                           ;	OSC = HS, HS oscillator
  5373                           ;	Fail-Safe Clock Monitor Enable bit
  5374                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5375                           ;	Internal/External Oscillator Switchover bit
  5376                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5377  300001                     	org	3145729
  5378  300001  02                 	db	2
  5379                           
  5380                           ;Config register CONFIG2L @ 0x300002
  5381                           ;	Power-up Timer Enable bit
  5382                           ;	PWRT = OFF, PWRT disabled
  5383                           ;	Brown-out Reset Enable bits
  5384                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5385                           ;	Brown Out Reset Voltage bits
  5386                           ;	BORV = 0x2E, user specified literal
  5387  300002                     	org	3145730
  5388  300002  71                 	db	369
  5389                           
  5390                           ;Config register CONFIG2H @ 0x300003
  5391                           ;	Watchdog Timer Enable bit
  5392                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5393                           ;	Watchdog Timer Postscale Select bits
  5394                           ;	WDTPS = 1, 1:1
  5395  300003                     	org	3145731
  5396  300003  00                 	db	0
  5397                           
  5398                           ; Padding undefined space
  5399  300004                     	org	3145732
  5400  300004  FF                 	db	255
  5401                           
  5402                           ;Config register CONFIG3H @ 0x300005
  5403                           ;	CCP2 MUX bit
  5404                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5405                           ;	PORTB A/D Enable bit
  5406                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5407                           ;	Low-Power Timer1 Oscillator Enable bit
  5408                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5409                           ;	MCLR Pin Enable bit
  5410                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5411  300005                     	org	3145733
  5412  300005  83                 	db	131
  5413                           
  5414                           ;Config register CONFIG4L @ 0x300006
  5415                           ;	Stack Full/Underflow Reset Enable bit
  5416                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5417                           ;	Single-Supply ICSP Enable bit
  5418                           ;	LVP = OFF, Single-Supply ICSP disabled
  5419                           ;	Extended Instruction Set Enable bit
  5420                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5421                           ;	Background Debugger Enable bit
  5422                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5423  300006                     	org	3145734
  5424  300006  80                 	db	128
  5425                           
  5426                           ; Padding undefined space
  5427  300007                     	org	3145735
  5428  300007  FF                 	db	255
  5429                           
  5430                           ;Config register CONFIG5L @ 0x300008
  5431                           ;	Code Protection bit
  5432                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5433                           ;	Code Protection bit
  5434                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5435                           ;	Code Protection bit
  5436                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5437                           ;	Code Protection bit
  5438                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5439  300008                     	org	3145736
  5440  300008  0F                 	db	15
  5441                           
  5442                           ;Config register CONFIG5H @ 0x300009
  5443                           ;	Boot Block Code Protection bit
  5444                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5445                           ;	Data EEPROM Code Protection bit
  5446                           ;	CPD = OFF, Data EEPROM not code-protected
  5447  300009                     	org	3145737
  5448  300009  C0                 	db	192
  5449                           
  5450                           ;Config register CONFIG6L @ 0x30000A
  5451                           ;	Write Protection bit
  5452                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5453                           ;	Write Protection bit
  5454                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5455                           ;	Write Protection bit
  5456                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5457                           ;	Write Protection bit
  5458                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5459  30000A                     	org	3145738
  5460  30000A  0F                 	db	15
  5461                           
  5462                           ;Config register CONFIG6H @ 0x30000B
  5463                           ;	Configuration Register Write Protection bit
  5464                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5465                           ;	Boot Block Write Protection bit
  5466                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5467                           ;	Data EEPROM Write Protection bit
  5468                           ;	WRTD = OFF, Data EEPROM not write-protected
  5469  30000B                     	org	3145739
  5470  30000B  E0                 	db	224
  5471                           
  5472                           ;Config register CONFIG7L @ 0x30000C
  5473                           ;	Table Read Protection bit
  5474                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5475                           ;	Table Read Protection bit
  5476                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5477                           ;	Table Read Protection bit
  5478                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5479                           ;	Table Read Protection bit
  5480                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5481  30000C                     	org	3145740
  5482  30000C  0F                 	db	15
  5483                           
  5484                           ;Config register CONFIG7H @ 0x30000D
  5485                           ;	Boot Block Table Read Protection bit
  5486                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5487  30000D                     	org	3145741
  5488  30000D  40                 	db	64
  5489                           tosu	equ	0xFFF
  5490                           tosh	equ	0xFFE
  5491                           tosl	equ	0xFFD
  5492                           stkptr	equ	0xFFC
  5493                           pclatu	equ	0xFFB
  5494                           pclath	equ	0xFFA
  5495                           pcl	equ	0xFF9
  5496                           tblptru	equ	0xFF8
  5497                           tblptrh	equ	0xFF7
  5498                           tblptrl	equ	0xFF6
  5499                           tablat	equ	0xFF5
  5500                           prodh	equ	0xFF4
  5501                           prodl	equ	0xFF3
  5502                           indf0	equ	0xFEF
  5503                           postinc0	equ	0xFEE
  5504                           postdec0	equ	0xFED
  5505                           preinc0	equ	0xFEC
  5506                           plusw0	equ	0xFEB
  5507                           fsr0h	equ	0xFEA
  5508                           fsr0l	equ	0xFE9
  5509                           wreg	equ	0xFE8
  5510                           indf1	equ	0xFE7
  5511                           postinc1	equ	0xFE6
  5512                           postdec1	equ	0xFE5
  5513                           preinc1	equ	0xFE4
  5514                           plusw1	equ	0xFE3
  5515                           fsr1h	equ	0xFE2
  5516                           fsr1l	equ	0xFE1
  5517                           bsr	equ	0xFE0
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           preinc2	equ	0xFDC
  5522                           plusw2	equ	0xFDB
  5523                           fsr2h	equ	0xFDA
  5524                           fsr2l	equ	0xFD9
  5525                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        58
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27     100
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 56
		 -> op(COMRAM[56]), 


Critical Paths under _main in COMRAM

    _main->_escolheFunc
    _ssdInit->_pinMode
    _segMenu->_lcdPosition
    _segMenu->_lcdString
    _mudaPot->_lcdString
    _ssdUpdate->_soWrite
    _ssdDigit->___awmod
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _escolheFunc->_lcdPosition
    _escolheFunc->_lcdString
    _rgbColor->_digitalWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  525546
                                             25 COMRAM     2     2      0
                            _adcInit
                        _escolheFunc
                             _kpInit
                            _lcdInit
                            _mudaPot
                            _segMenu
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _segMenu                                              5     5      0  147874
                                             18 COMRAM     5     5      0
                       _digitalWrite
                         _kpDebounce
                          _kpReadKey
                         _lcdCommand
                        _lcdPosition
                          _lcdString
                           _rgbColor
 ---------------------------------------------------------------------------------
 (1) _mudaPot                                              4     4      0  134738
                                             18 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                            _adcRead
                       _digitalWrite
                         _kpDebounce
                          _kpReadKey
                         _lcdCommand
                          _lcdString
                           _ssdDigit
                          _ssdUpdate
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (2) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0   28673
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   79804
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   36381
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _escolheFunc                                          7     7      0  148010
                                             18 COMRAM     7     7      0
                       _digitalWrite
                         _kpDebounce
                          _kpReadKey
                         _lcdCommand
                        _lcdPosition
                          _lcdString
                           _rgbColor
 ---------------------------------------------------------------------------------
 (2) _rgbColor                                             2     0      2    7198
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            4     2      2   37373
                                             14 COMRAM     4     2      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   36675
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   37341
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0   36645
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   36273
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    7360
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   22177
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   21693
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    6980
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    6980
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    6980
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _escolheFunc
     _digitalWrite
     _kpDebounce
       _digitalRead
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
     _kpReadKey
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _lcdPosition
       _lcdCommand
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
     _rgbColor
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _mudaPot
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _adcRead
     _digitalWrite
     _kpDebounce
     _kpReadKey
     _lcdCommand
     _lcdString
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
     _ssdUpdate
       _digitalWrite
       _soWrite
     _timerReset
     _timerWait
   _segMenu
     _digitalWrite
     _kpDebounce
     _kpReadKey
     _lcdCommand
     _lcdPosition
     _lcdString
     _rgbColor
   _ssdInit
     _pinMode
     _soInit
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      64       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      15        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 03:14:50 2021

         _pulseEnablePin 1ACE             lcdString@msg 0049                       l70 0890  
                     l62 07B6                       l90 0EBA                       l84 0E60  
                     l93 0F4C             ___awdiv@sign 0040                       _v0 0061  
                     _v1 0060                       _v2 005F                       _v3 005E  
                     _op 0003                      l100 0FBA                      l106 1120  
                    l302 1804                      l232 1514                      l161 0ADE  
                    l170 13F2                      l330 1CEC                      l234 152C  
                    l218 187C                      l411 1D72                      l324 1B8C  
                    l260 1D12                      l420 1D88                      l165 13F6  
                    l237 1C68                      l166 13F2                      l254 1C98  
                    l414 1D80                      l327 1CC2                      l335 1A84  
                    l263 1938                      l271 1C00                      l248 1D8A  
                    l280 1B4E                      l257 1B0E                      l417 1D34  
                    l266 1D70                      l274 1D52                      l362 1990  
                    l195 0D2C                      l372 128C                      l390 1ACC  
                    l375 19E6                      l289 16A4                      l394 1A0C  
                    l396 1A1A                      l397 1A36                      l654 15F0  
                    l667 1754                      u680 1846                      u760 1D80  
                    u681 1842                      u761 1D7C                      u690 187A  
                    u674 1826                      u691 1876                      u675 1820  
           ___awmod@sign 0048                      prod 000FF3                      wreg 000FE8  
        _funcaoAndamento 0001             ?_escolheFunc 003B                     l2000 17CA  
                   l2010 1B2E                     l2002 17D8                     l2020 1BF6  
                   l2012 1B32                     l2004 17F0                     l2100 11B6  
                   l2030 1474                     l2022 13F8                     l2014 1BC8  
                   l2006 1B10                     l2110 1216                     l2102 11CE  
                   l2032 149A                     l2040 14EA                     l2024 1408  
                   l2016 1BDA                     l2008 1B1C                     l2200 1728  
                   l2112 121E                     l2104 11E2                     l2042 1502  
                   l2034 14B8                     l1330 185A                     l2018 1BE4  
                   l2130 1CF0                     l2202 172E                     l2114 1236  
                   l2106 11EA                     l2122 1252                     l2050 1D14  
                   l2044 1508                     l2036 14E2                     l2028 1428  
                   l1332 185E                     l1324 180E                     l2220 0642  
                   l2212 061C                     l2140 154C                     l2132 152E  
                   l2204 1734                     l2116 124A                     l2108 1202  
                   l2060 1D32                     l2052 1D1E                     l2046 150C  
                   l1334 187A                     l1326 1846                     l1318 1806  
                   l2230 06A6                     l2222 0654                     l2214 062C  
                   l2150 1580                     l2142 155A                     l2134 1532  
                   l2206 1744                     l2070 1A26                     l2062 19E8  
                   l2054 1D22                     l2310 0D6A                     l2302 0D2E  
                   l2048 1524                     l2232 06B2                     l2224 0660  
                   l2216 0632                     l2128 1B50                     l2160 15BA  
                   l2152 1588                     l2144 1562                     l2136 1540  
                   l2208 174C                     l2072 1A2E                     l2064 1A02  
                   l2080 1950                     l2056 1D2A                     l1416 1D72  
                   l2400 107E                     l2320 0DE2                     l2312 0D72  
                   l2304 0D36                     l2250 0700                     l2242 06E0  
                   l2234 06BA                     l2226 0680                     l2218 0636  
                   l2170 15E0                     l2162 15C2                     l2154 1590  
                   l2146 1566                     l2138 1548                     l2066 1A0A  
                   l2090 198C                     l2082 1960                     l2058 1D2E  
                   l2410 10B4                     l2330 0E00                     l2322 0DEE  
                   l2314 0D92                     l2306 0D3C                     l2260 076A  
                   l2244 06E8                     l2236 06BE                     l2228 0686  
                   l2172 15E8                     l2164 15C4                     l2156 159E  
                   l2148 156E                     l2180 16B8                     l2068 1A20  
                   l2084 1964                     l2076 193C                     l2092 1122  
                   l2412 10B8                     l2340 0E3E                     l2332 0E08  
                   l2324 0DF6                     l2316 0DBC                     l2308 0D66  
                   l2262 077A                     l2246 06F0                     l2254 0708  
                   l2238 06C4                     l2430 1686                     l2422 15F2  
                   l2166 15CA                     l2158 15A4                     l2190 16EC  
                   l2182 16C0                     l2086 1976                     l2078 194C  
                   l2094 1182                     l2406 1086                     l2414 10B8  
                   l2342 0E46                     l2334 0E10                     l2350 0E96  
                   l2326 0DF6                     l2318 0DCE                     l2280 07EE  
                   l2264 078A                     l2248 06F8                     l2256 074A  
                   l2440 1C64                     l2432 1692                     l2424 1652  
                   l2168 15D0                     l2192 16F4                     l2184 16C4  
                   l2176 16A6                     l2088 197A                     l2096 119A  
                   l2416 10CA                     l2408 10B0                     l2360 0EC2  
                   l2352 0EA6                     l2344 0E58                     l2336 0E18  
                   l2328 0DFA                     l2450 1AC8                     l2282 07FE  
                   l2274 07BA                     l2266 079A                     l2258 075A  
                   l2290 0830                     l2434 1698                     l2426 165E  
                   l2194 16FC                     l2186 16D2                     l2178 16AA  
                   l2098 11AE                     l2354 0EB2                     l2530 0E78  
                   l2338 0E2C                     l2362 0EEC                     l2442 1992  
                   l2444 1A86                     l1900 1C7A                     l2540 081A  
                   l2276 07D8                     l2268 07AA                     l2292 0880  
                   l2436 169E                     l2428 1678                     l2196 170A  
                   l2188 16DA                     l2380 0F5C                     l2532 0ED6  
                   l2348 0E64                     l2364 0F3C                     l2452 187E  
                   l2446 1AC2                     l1830 08AE                     l1902 18E2  
                   l2278 07EC                     l2438 1C38                     l2198 1720  
                   l2534 109A                     l2390 0F8C                     l2382 0F60  
                   l2374 0F4E                     l1742 1D82                     l2454 1896  
                   l2462 18AA                     l2448 1AC4                     l1840 0938  
                   l1832 08C0                     l1904 1D56                     l2288 0806  
                   l2536 1266                     l2392 0F90                     l2384 0F66  
                   l2376 0F52                     l1744 1D86                     l2528 18BE  
                   l2456 189E                     l1930 1362                     l1922 131A  
                   l1914 12D2                     l1906 128E                     l1850 09D0  
                   l1842 0958                     l1834 08E0                     l2538 071C  
                   l2394 0FA4                     l2386 0F76                     l2378 0F58  
                   l2458 18A6                     l1940 13C6                     l1932 137E  
                   l1924 1336                     l1916 12EE                     l1908 12AA  
                   l1860 0A6A                     l1852 09F2                     l1844 097A  
                   l1836 0902                     l1828 0892                     l2396 0FB6  
                   l2388 0F86                     l1950 0B2E                     l1862 0A86  
                   l1854 0A0E                     l1846 0996                     l1838 091E  
                   l1870 1CC4                     l2398 0FC2                     l1960 0BC8  
                   l1952 0B50                     l1944 0AE0                     l1864 0AA0  
                   l1856 0A28                     l1848 09B0                     l1880 1A50  
                   l1872 1A38                     l1970 0C5C                     l1962 0BE4  
                   l1954 0B6C                     l1946 0AFC                     l1938 13AA  
                   l1866 0AC0                     l1858 0A48                     l1882 1A68  
                   l1874 1A4C                     l1890 1ACE                     l1980 0CE6  
                   l1972 0C6E                     l1964 0BF6                     l1956 0B7E  
                   l1948 0B0E                     l1868 1C9A                     l1884 1A6E  
                   l1892 1AE2                     l1982 0D0A                     l1974 0C92  
                   l1966 0C1A                     l1958 0BA2                     l1886 1A70  
                   l1894 1AEE                     l1990 1764                     l1976 0CB8  
                   l1968 0C40                     l1888 1A80                     l1896 1C6A  
                   l1984 1D38                     l1992 177C                     l1978 0CD4  
                   l1898 1C76                     l1986 1D46                     l1994 1790  
                   l1996 179E                     l1988 1756                     l1998 17B6  
                   u1110 08AE                     u1111 08AA                     u1200 09B0  
                   u1120 08C0                     u2000 07FE                     u1201 09AC  
                   u1121 08BC                     u2001 07FA                     u2010 0890  
                   u2011 088C                     u2020 0E2C                     u2021 0E28  
                   u1230 0A0E                     u1214 09C2                     u1150 091E  
                   u1134 08D2                     u1310 1A80                     u2030 0E3E  
                   u1231 0A0A                     u1215 09BE                     u1151 091A  
                   u1135 08CE                     u1311 1A7C                     u2031 0E3A  
                   u1304 0AD2                     u1240 0A28                     u1224 09E2  
                   u1160 0938                     u1144 08F2                     u1320 1C98  
                   u2040 0E58                     u1305 0ACE                     u1241 0A24  
                   u1225 09DE                     u1161 0934                     u1145 08EE  
                   u1321 1C94                     u2041 0E54                     u1410 13C6  
                   u1330 12AA                     u2050 0EA6                     u1411 13C2  
                   u1331 12A6                     u2051 0EA2                     u1404 1394  
                   u2060 0F4C                     u1405 1390                     u2061 0F48  
                   u1510 0BE4                     u1430 0AFC                     u1350 12EE  
                   u1270 0A86                     u1254 0A3A                     u1190 0996  
                   u1174 094A                     u2070 0FA4                     u1511 0BE0  
                   u1431 0AF8                     u1351 12EA                     u1271 0A82  
                   u1255 0A36                     u1191 0992                     u1175 0946  
                   u2071 0FA0                     u1600 0CE6                     u1520 0BF6  
                   u1504 0BB8                     u1440 0B0E                     u1424 13DC  
                   u1344 12BC                     u1280 0AA0                     u1264 0A5A  
                   u1184 096A                     u2080 0FB6                     u1601 0CE2  
                   u1521 0BF2                     u1505 0BB4                     u1441 0B0A  
                   u1425 13D8                     u1345 12B8                     u1281 0A9C  
                   u1265 0A56                     u1185 0966                     u2081 0FB2  
                   u1370 1336                     u2090 10CA                     u1371 1332  
                   u2091 10C6                     u1364 1304                     u1365 1300  
                   u1614 0CFC                     u1550 0C5C                     u1534 0C0C  
                   u1470 0B6C                     u1454 0B20                     u1390 137E  
                   u1294 0AB2                     u1710 1474                     u1630 1764  
                   u1615 0CF8                     u1551 0C58                     u1535 0C08  
                   u1471 0B68                     u1455 0B1C                     u1391 137A  
                   u1295 0AAE                     u1711 1470                     u1631 1760  
                   u1624 0D20                     u1560 0C6E                     u1544 0C30  
                   u1480 0B7E                     u1464 0B40                     u1384 134C  
                   u1704 1444                     u1640 179E                     u1800 1960  
                   u1625 0D1C                     u1561 0C6A                     u1545 0C2C  
                   u1481 0B7A                     u1465 0B3C                     u1385 1348  
                   u1705 143E                     u1641 179A                     u1801 195C  
                   u1730 14B8                     u1650 17D8                     u1810 1976  
                   u1731 14B4                     u1651 17D4                     u1811 1972  
                   u1724 148C                     u1660 1B4E                     u1900 16D2  
                   u1820 198C                     u1725 1486                     u1661 1B4A  
                   u1901 16CE                     u1821 1988                     u1590 0CD4  
                   u1574 0C84                     u1494 0B94                     u1750 1502  
                   u1670 1BDA                     u1830 1540                     u1910 16EC  
                   u1591 0CD0                     u1575 0C80                     u1495 0B90  
                   u1751 14FE                     u1671 1BD6                     u1831 153C  
                   u1911 16E8                     u1584 0CA8                     u1760 1524  
                   u1744 14D4                     u1680 1BF6                     u1840 155A  
                   u1920 170A                     u1585 0CA4                     u1761 1520  
                   u1745 14CE                     u1681 1BF2                     u1841 1556  
                   u1921 1706                     u1690 1424                     u1850 1580  
                   u1930 1720                     u1770 1A02                     u1691 1420  
                   u1851 157C                     u1931 171C                     u1771 19FE  
                   u1860 159E                     u1940 1744                     u1780 1A1A  
                   u1861 159A                     u1941 1740                     u1781 1A16  
                   u1950 06DC                     u1870 15BA                     u1790 194C  
                   u1951 06D8                     u1871 15B6                     u1791 1948  
                   u1960 075A                     u1880 15E0                     u1961 0756  
                   u1881 15DC                     u1970 076A                     u1890 16B8  
                   u1971 0766                     u1891 16B4                     u1980 079A  
                   u1981 0796                     u1990 07D8                     u1991 07D4  
                   _main 187E                     _keys 005A         ??_PulseClockData 0041  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodl 000FF3                     start 0000          pushNibble@value 0046  
           ___param_bank 000000   __end_of_pulseEnablePin 1B10                    ?_main 003B  
        __end_of_adcInit 1ACE          __end_of_adcRead 1A38          __end_of___awdiv 15F2  
        __end_of___awmod 1756                    _T0CON 000FD5          ___awdiv@divisor 003D  
        ___awdiv@counter 003F                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84          __end_of_charKey 061B  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdChar 1D54  
        __end_of_lcdInit 16A6          __end_of_segMenu 0F4E          __end_of_pinMode 0D2E  
                  _valor 0601          __end_of_mudaPot 1122          __end_of_soWrite 1A86  
                  tablat 000FF5          __end_of_ssdInit 19E8                    status 000FD8  
           pushNibble@rs 0044     __end_of_digitalWrite 0AE0          __initialization 1C02  
        ?_pulseEnablePin 003B             __end_of_main 18E0                   ??_main 0054  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 003B              rgbColor@led 0041  
                 _INTCON 000FF2     __size_of_lcdPosition 003A                ??_adcInit 0041  
              ??_adcRead 003D                ??___awdiv 003F                ??___awmod 0047  
                 _kpInit 1C38         __end_of_rgbColor 1806                   clear_0 1C28  
                 _soInit 1B50         ___awdiv@quotient 0041          ___awmod@divisor 0045  
              ??_lcdChar 0048                   isa$std 000001                ??_lcdInit 0049  
        ___awmod@counter 0047             escolheFunc@i 0053         __end_of_ssdDigit 1992  
           __pdataCOMRAM 0001                ??_segMenu 004D                ??_pinMode 003F  
              ??_mudaPot 004D             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0043  
              ??_ssdInit 0041         __end_of_pushByte 193A              segMenu@caso 0050  
            segMenu@hori 004F     __size_of_escolheFunc 0276               __accesstop 0080  
__end_of__initialization 1C2E            ___rparam_used 000001            pushByte@value 0047  
            pinMode@type 003D           __pcstackCOMRAM 003B            __end_of_valor 0611  
     __size_of_delayMili 0030       __size_of_lcdString 0040       __size_of_kpReadKey 0078  
            mudaPot@caso 004F    __size_of_digitalWrite 024E               _delayMicro 1D8A  
             _lcdCommand 1D54                  ?_kpInit 003B                  ?_soInit 003B  
             _kpDebounce 13F8       __size_of_timerInit 0008       __size_of_timerWait 0010  
     __size_of_ssdUpdate 016C             _digitalWrite 0892        __end_of_delayMili 1C9A  
              ?_rgbColor 0041         ??_pulseEnablePin 0041                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 0049        __end_of_lcdString 1B50  
        kpDebounce@tempo 0063        __end_of_kpReadKey 187E                  _adcInit 1A86  
                _adcRead 19E8                  ___awdiv 152E                  ___awmod 16A6  
              ?_pushByte 0044             __psmallconst 0600          __size_of_kpInit 0032  
                _charKey 0611              ssdDigit@val 004A              ssdDigit@pos 0049  
                __pcinit 1C02                  _lcdChar 1D36                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 15F2                  __ptext0 187E  
                __ptext1 1D82                  __ptext2 1992                  __ptext3 0D2E  
                __ptext4 0F4E                  __ptext5 1D72                  __ptext6 1D14  
                __ptext7 1122                  __ptext8 193A                  __ptext9 19E8  
                _display 0062                  _segMenu 0D2E                  _pinMode 0AE0  
       ___awmod@dividend 0043                  _mudaPot 0F4E               delayMili@a 003B  
             delayMili@i 003E                  _soWrite 1A38                  _ssdInit 1992  
   end_of_initialization 1C2E            ?_PulseEnClock 003B               ??_rgbColor 0043  
          __Lmediumconst 0000           digitalRead@pin 003B              ?_delayMicro 003B  
      __end_of_timerInit 1D8A        __end_of_timerWait 1D82        __end_of_ssdUpdate 128E  
             ??_ssdDigit 004A                  postdec1 000FE5              ?_lcdCommand 003B  
                postinc0 000FEE               ??_pushByte 0046             segMenu@tecla 0051  
__size_of_PulseClockData 002A            ??_digitalRead 003D               _timerReset 1D14  
            ?_kpDebounce 003B               _pushNibble 1CEE               lcdString@i 004B  
          ??_lcdPosition 004D           ??_PulseEnClock 0041               kpReadKey@i 003E  
         adcRead@ADvalor 003D            __pidataCOMRAM 1B8E           __end_of_kpInit 1C6A  
         __end_of_soInit 1B8E      __size_of_delayMicro 0002      start_initialization 1C02  
    __end_of_digitalRead 13F8            ??_escolheFunc 004D      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136      __end_of_lcdPosition 1C02           adcRead@channel 003B  
      kpDebounce@oldRead 0056        kpDebounce@newRead 0058                 ??_kpInit 0041  
            ?_timerReset 003B                 ??_soInit 0041         escolheFunc@tecla 0051  
            __pbssCOMRAM 0056              ?_pushNibble 0044               pinMode@pin 003B  
           mudaPot@tecla 0050      __end_of_escolheFunc 0892        __size_of_rgbColor 00B0  
              _delayMili 1C6A                 ?_adcInit 003B                 ?_adcRead 003B  
               ?___awdiv 003B                 ?___awmod 0043        __size_of_ssdDigit 0058  
         _PulseClockData 1CC4     __end_of_PulseEnClock 1CC4                _lcdString 1B10  
            _digitalRead 128E                 ?_lcdChar 003B        __size_of_pushByte 005A  
               ?_lcdInit 003B                _kpReadKey 1806              __smallconst 0600  
               ?_segMenu 003B                 ?_pinMode 003B                 ?_mudaPot 003B  
               ?_soWrite 0041                 ?_ssdInit 003B              _lcdPosition 1BC8  
    __size_of_timerReset 0022             ??_delayMicro 003D               ?_delayMili 003B  
 __end_of_PulseClockData 1CEE      __size_of_pushNibble 0026             ??_lcdCommand 0048  
              _timerInit 1D82                _timerWait 1D72                _ssdUpdate 1122  
             ?_lcdString 0049             ??_kpDebounce 0044               ?_kpReadKey 003B  
        lcdCommand@value 0048       __end_of_delayMicro 1D8C         timerReset@ciclos 003D  
            _escolheFunc 061C                copy_data0 1C16       __end_of_lcdCommand 1D72  
             pushByte@rs 0044             lcdChar@value 0048       __end_of_kpDebounce 152E  
               __Hrparam 0000                 __Lrparam 0000          lcdPosition@line 0049  
        ?_PulseClockData 003B               ?_timerInit 003B          escolheFunc@caso 0050  
             ?_timerWait 003B               ?_ssdUpdate 003B          escolheFunc@hori 0052  
        escolheFunc@vert 004F         __size_of_adcInit 0048         __size_of_adcRead 0050  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4         __size_of_segMenu 0220  
       __size_of_pinMode 024E         __size_of_mudaPot 01D4                 __ptext10 16A6  
               __ptext11 152E                 __ptext20 1BC8                 __ptext12 15F2  
               __ptext21 1D54                 __ptext13 1CEE                 __ptext30 1CC4  
               __ptext22 18E0                 __ptext14 1C38                 __ptext31 0892  
               __ptext23 1ACE                 __ptext15 1B50                 __ptext32 128E  
               __ptext24 1D8A                 __ptext16 061C                 __ptext33 1A86  
               __ptext25 1C6A                 __ptext17 1756                 __ptext34 0AE0  
               __ptext26 1806                 __ptext18 1B10                 __ptext27 13F8  
               __ptext19 1D36                 __ptext28 1A38                 __ptext29 1C9A  
       __size_of_soWrite 004E         __size_of_ssdInit 0056                 _rgbColor 1756  
          __size_of_main 0062              ??_delayMili 003D    __size_of_PulseEnClock 002A  
               _ssdDigit 193A              delayMicro@a 003B                 isa$xinst 000000  
           soWrite@value 0041                 _potencia 005C                 _pushByte 18E0  
            ??_lcdString 004B             ??_timerReset 003D              ??_kpReadKey 003B  
        timerReset@tempo 003B             ??_pushNibble 0046           lcdPosition@col 004B  
          ?_digitalWrite 003B              _selecionado 0064             _PulseEnClock 1C9A  
      digitalWrite@value 003D       __end_of_timerReset 1D36                 soWrite@i 0043  
            ??_timerInit 003B              ??_timerWait 003B              ??_ssdUpdate 0044  
     __end_of_pushNibble 1D14             ?_digitalRead 003B              kpDebounce@i 0047  
         ??_digitalWrite 003F             ?_lcdPosition 0049          digitalWrite@pin 003B  
